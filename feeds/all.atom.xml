<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Hackecho</title><link href="http://hackecho.com/" rel="alternate"></link><link href="http://hackecho.com/feeds/all.atom.xml" rel="self"></link><id>http://hackecho.com/</id><updated>2013-02-05T17:04:00-06:00</updated><entry><title>Make Your Program</title><link href="http://hackecho.com/2013/02/make-your-program/" rel="alternate"></link><updated>2013-02-05T17:04:00-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2013-02-05:2013/02/make-your-program/</id><summary type="html">&lt;p&gt;这学期选了两门挺有意思的课，一门叫Programming High Performance Computing，还有一门Parallel and Distributed Processing。两周刚刚上下来，感觉传递的知识量有我之前悠哉悠哉一学期学到的都多。不知道是美国本科生的基础好还是美国大学的教育好，同班的美国同学接受这些知识看起来都毫无压力。不过语言确实是一个因素，比如HPC的老师两节课讲了几十个英文缩写，还都与电路有关，感觉回到了当年狂补计算机组成原理的时候。这些英文缩写估计对于美国学生接受起来要更好一点吧。我只有更努力了。&lt;/p&gt;
&lt;p&gt;重新好好学习一下以前的知识，认真记住。PDP的教授第一节课说了一句话让我印象非常深刻，他说：“They value you not because what you can search but what you can do.”其实非常羡慕老教授课堂上信手拈来的各种复杂代码和命令参数，只靠Google是不行的。&lt;/p&gt;
&lt;p&gt;本篇博客就来复习一下Makefile吧，这两门课每次交作业都要求必须包含Makefile，就像HPC的Slides中说的：“Real programmers use Makefiles!”&lt;/p&gt;
&lt;h3&gt;Outline&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;What's Makefile&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generating Multiple Targets&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Macros&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;What's Makefile&lt;/h3&gt;
&lt;p&gt;Under the UNIX shell, make is a command generator. The makefile is a description file which creates a sequence of commands for execution by the UNIX shell.&lt;/p&gt;
&lt;p&gt;Generally, a program is built from one or more files and each of these files may have other files as prerequisites in turn. In a makefile, the prerequisites should be carefully stated. There are two important types of lines in a description file. A dependency line or rule line contains a colon, and a command line always starts &lt;strong&gt;with a tab&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;To the left of the colon on the dependency line is a target; to the right of the colon are the target's prerequisites. If myprog has prerequisites a.c and b.c, we have&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;myprog&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt;  &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The command lines just tells make how to make the target. For example,&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;myprog&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt;
     &lt;span class="n"&gt;gcc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;myprog&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, type &lt;code&gt;make&lt;/code&gt;, the UNIX prompt will excute the command as you typed.&lt;/p&gt;
&lt;h3&gt;Generating Multiple Targets&lt;/h3&gt;
&lt;p&gt;If we want to generate more than one programs, for example, let program prog01 depend on a.c and b.c, prog02 depend on m.c and n.c, and prog03 depend on u.c, v.c and w.c. &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;prog01&lt;/span&gt; &lt;span class="n"&gt;prog02&lt;/span&gt; &lt;span class="n"&gt;prog03&lt;/span&gt;

&lt;span class="n"&gt;prog01&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt;
     &lt;span class="n"&gt;gcc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;prog01&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt;

&lt;span class="n"&gt;prog02&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt;
     &lt;span class="n"&gt;gcc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;prog02&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt;

&lt;span class="n"&gt;prog03&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt;
     &lt;span class="n"&gt;gcc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;prog03&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Thus, if one of these three programs is not up-to-date, &lt;code&gt;all&lt;/code&gt; will be generated which in turn causes all programs compiled. If the dependency line defining &lt;code&gt;all&lt;/code&gt; is the first line of your Makefile, just type &lt;code&gt;make&lt;/code&gt; will be the same as typing &lt;code&gt;make all&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Macros&lt;/h3&gt;
&lt;p&gt;A macro definition is a line containing an equal sign (=). When make encounters a name that appears to the left of the equal sign, that name is replaced by the contents to the right of the equal sign. It is not necessary to delimit the text string with double quote (") or single quote ('). If they are used, they become part of the text string.&lt;/p&gt;
&lt;p&gt;If we have the macro definition as follows,&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;NAME&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Zhaoyu&lt;/span&gt; &lt;span class="n"&gt;Li&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then subsequent references to &lt;code&gt;${NAME}&lt;/code&gt; or &lt;code&gt;$(NAME)&lt;/code&gt; are interpreted as &lt;code&gt;Zhaoyu Li&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Examples&lt;/h3&gt;
&lt;p&gt;Here are two examples,&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;SUBDIRS&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="n"&gt;analyze&lt;/span&gt;

&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;subdirs&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="n"&gt;analysis&lt;/span&gt;
     &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;After&lt;/span&gt; &lt;span class="n"&gt;Build&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;make analysis&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="n"&gt;analysis&lt;/span&gt;&amp;quot;

&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
     &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;About&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;hw1&lt;/span&gt;

&lt;span class="n"&gt;analysis&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
     &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;analyze&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;analysis&lt;/span&gt;

&lt;span class="n"&gt;subdirs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
     &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; $&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SUBDIRS&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;
          $&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MAKE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; $$&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;
     &lt;span class="n"&gt;done&lt;/span&gt;

&lt;span class="n"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
     &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; $&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SUBDIRS&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;
          $&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MAKE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; $$&lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="n"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;\&lt;/span&gt;
     &lt;span class="n"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's see another example. Suppose you are provided with two files, MyThreads.h and MyThreads.o. The former is a header file that has to be included into your source files and the latter is a library of functions for you to use. In other words, your source files in which multithreaded capability is used depend on MyThreads.h and your executable depends on MyThreads.o.&lt;/p&gt;
&lt;p&gt;Suppose your assignment has the following files, prog01.c (the main function), and abc.c, def.c and xyz.c. All of these files contain access to multithread functions defined in MyThreads.h. You also designed some utility functions collected in files ut1.c and ut2.c. None of these two have access to the multithread capability. However, in your judgment, you believe any change made to ut1.c and ut2.c requires recompilation of abc.c and xyz.c. Therefore, on the source level, prog01.c, abc.c, def.c and xyz.c depend on MyThreads.h, and abc.c and xyz.c also depend on ut1.c and ut2.c. Suppose the final executable is to be called prog01.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;CC = gcc -ansi

prog01 : prog01.o abc.o def.o xyz.o ut1.o ut2.o MyThreads.o
     &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;CC&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; -o prog01 prog01.o abc.o def.o xyz.o ut1.o ut2.o MyThreads.o -lthread

prog01.o : prog01.c MyThreads.h
     &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;CC&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; -c prog01.c

abc.o : abc.c c ut2.c MyThreads.h
     &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;CC&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; -c abc.c
def.o : def.c MyThreads.h
     &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;CC&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; -c def.c
xyz.o : xyz.c ut1.c ut2.c MyThreads.h
     &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;CC&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; -c xyz.c

ut1.o : ut1.c
     &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;CC&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; -c ut1.c
ut2.o : ut2.c
     &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;CC&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; -c ut2.c
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Above is the basic concepts of Makefile. If you want to be more expert, try the offcial documents.&lt;/p&gt;</summary><category term="makefile"></category></entry><entry><title>POSIX Threads Programming</title><link href="http://hackecho.com/2013/02/posix-threads-programming/" rel="alternate"></link><updated>2013-02-02T18:35:00-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2013-02-02:2013/02/posix-threads-programming/</id><summary type="html">&lt;p&gt;I am writing this article for a memo of CS8860, Parallel and distributed system.&lt;/p&gt;
&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Technically, a thread is defined as an independent stream of instructions that can be scheduled to run as such by the operating system.&lt;/p&gt;
&lt;p&gt;In the UNIX environment a thread:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Exists within a process and uses the process resources&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Has its own independent flow of control as long as its parent process exists and the OS supports it&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Duplicates only the essential resources it needs to be independently schedulable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;May share the process resources with other threads that act equally independently (and dependently)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dies if the parent process dies - or something similar&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Is "lightweight" because most of the overhead has already been accomplished through the creation of its process.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All threads within a process share the same address space.&lt;/p&gt;
&lt;h3&gt;Several common models&lt;/h3&gt;
&lt;p&gt;Several common models for threaded programs exist:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Manager/worker:&lt;/strong&gt; a single thread, the manager assigns work to other threads, the workers. Typically, the manager handles all input and parcels out work to the other tasks. At least two forms of the manager/worker model are common: static worker pool and dynamic worker pool.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Pipeline:&lt;/strong&gt; a task is broken into a series of suboperations, each of which is handled in series, but concurrently, by a different thread. An automobile assembly line best describes this model.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Peer:&lt;/strong&gt; similar to the manager/worker model, but after the main thread creates other threads, it participates in the work.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Shared Memory Model:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All threads have access to the same global, shared memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Threads also have their own private data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Programmers are responsible for synchronizing access (protecting) globally shared data.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The Pthreads API&lt;/h3&gt;
&lt;p&gt;The Pthreads API contains around 100 subroutines. This article will focus on a subset of these.&lt;/p&gt;
&lt;h3&gt;Compiling Threaded Programs&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;INTEL&lt;/span&gt; &lt;span class="n"&gt;Linux&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;          &lt;span class="n"&gt;icc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pthread&lt;/span&gt;
&lt;span class="n"&gt;PGI&lt;/span&gt; &lt;span class="n"&gt;Linux&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;            &lt;span class="n"&gt;pgcc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lpthread&lt;/span&gt;
&lt;span class="n"&gt;GNU&lt;/span&gt; &lt;span class="n"&gt;Linux&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;            &lt;span class="n"&gt;gcc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pthread&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Threading Management&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt; Creating and Terminating Threads &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Initially, your &lt;code&gt;main()&lt;/code&gt; program comprises a single, default thread. All other threads must be explicitly created by the programmer.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pthread_create&lt;/code&gt; creates a new thread and makes it executable. This routine can be called any number of times from anywhere within your code.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pthread_create&lt;/code&gt; arguments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;thread:&lt;/code&gt; An opaque, unique identifier for the new thread returned by the subroutine.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;attr:&lt;/code&gt; An opaque attribute object that may be used to set thread attributes. You can specify a thread attributes object, or NULL for the default values.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;start_routine:&lt;/code&gt; the C routine that the thread will execute once it is created.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;arg:&lt;/code&gt; A single argument that may be passed to start_routine. It must be passed by reference as a pointer cast of type void. NULL may be used if no argument is to be passed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once created, threads are peers, and may create other threads. There is no implied hierarchy or dependency between threads.&lt;/p&gt;
&lt;p&gt;There are several ways in which a thread may be terminated:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The thread returns normally from its starting routine. It's work is done.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The thread makes a call to the &lt;code&gt;pthread_exit&lt;/code&gt; subroutine - whether its work is done or not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The thread is canceled by another thread via the &lt;code&gt;pthread_cancel&lt;/code&gt; routine.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The entire process is terminated due to making a call to either the &lt;code&gt;exec()&lt;/code&gt; or &lt;code&gt;exit()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If &lt;code&gt;main()&lt;/code&gt; finishes first, without calling &lt;code&gt;pthread_exit&lt;/code&gt; explicitly itself&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pay attention, the pthread_exit() routine does not close files; any files opened inside the thread will remain open after the thread is terminated.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#include &amp;lt;pthread.h&amp;gt; &lt;/span&gt;
&lt;span class="c"&gt;#include &amp;lt;stdio.h&amp;gt; &lt;/span&gt;
&lt;span class="c"&gt;#define NUM_THREADS  5 &lt;/span&gt;

&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;PrintHello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;threadid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
   &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;tid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
   &lt;span class="n"&gt;tid&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;threadid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
   &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello World! It&amp;#39;s me, thread #%d!\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
   &lt;span class="n"&gt;pthread_exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
   &lt;span class="n"&gt;pthread_t&lt;/span&gt; &lt;span class="n"&gt;threads&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;NUM_THREADS&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; 
   &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
   &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;0&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NUM_THREADS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; 
      &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;In main: creating thread %d\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
      &lt;span class="n"&gt;rc&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pthread_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;threads&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PrintHello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; 
         &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ERROR; return code from pthread_create() is %d\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
         &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;1&lt;span class="p"&gt;);&lt;/span&gt; 
      &lt;span class="p"&gt;}&lt;/span&gt; 
   &lt;span class="p"&gt;}&lt;/span&gt; 
   &lt;span class="n"&gt;pthread_exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt; Passing Arguments to Threads &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;All arguments must be passed by reference and cast to (void *).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; Joining and Detaching Threads &lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;pthread_join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pthread_t&lt;/span&gt; &lt;span class="n"&gt;target_thread&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;"Joining" is one way to accomplish synchronization between threads. This means that some other thread is required to call pthread_join to collect a terminated thread, in a fashion similar to the requirement for a parent process to collect status for terminated child processes.For example:&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2013/02/forkjoin.gif"&gt;&lt;img alt="" src="/static/images/2013/02/forkjoin.gif" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;pthread_join()&lt;/code&gt; subroutine blocks the calling thread until the specified threadid thread terminates.&lt;/p&gt;
&lt;p&gt;To explicitly create a thread as joinable or detached, the attr argument in the &lt;code&gt;pthread_create()&lt;/code&gt; routine is used. The typical 4 step process is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Declare a pthread attribute variable of the &lt;code&gt;pthread_attr_t&lt;/code&gt; data type&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Initialize the attribute variable with &lt;code&gt;pthread_attr_init()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set the attribute detached status with &lt;code&gt;pthread_attr_setdetachstate()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When done, free library resources used by the attribute with p&lt;code&gt;thread_attr_destroy()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/*****************************************************************************&lt;/span&gt;
&lt;span class="cm"&gt; * FILE: join.c&lt;/span&gt;
&lt;span class="cm"&gt; * DESCRIPTION:&lt;/span&gt;
&lt;span class="cm"&gt; *   This example demonstrates how to &amp;quot;wait&amp;quot; for thread completions by using&lt;/span&gt;
&lt;span class="cm"&gt; *   the Pthread join routine.  Threads are explicitly created in a joinable&lt;/span&gt;
&lt;span class="cm"&gt; *   state for portability reasons. Use of the pthread_exit status argument is&lt;/span&gt;
&lt;span class="cm"&gt; *   also shown. Compare to detached.c&lt;/span&gt;
&lt;span class="cm"&gt; * AUTHOR: 8/98 Blaise Barney&lt;/span&gt;
&lt;span class="cm"&gt; * LAST REVISED:  01/30/09&lt;/span&gt;
&lt;span class="cm"&gt; ******************************************************************************/&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;pthread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;stdio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;stdlib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="no"&gt;NUM_THREADS&lt;/span&gt; &lt;span class="mh"&gt;4&lt;/span&gt;

&lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;BusyWork&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;long&lt;/span&gt; &lt;span class="n"&gt;tid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;double&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;tid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;long&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Thread %ld starting...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;tid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mh"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mh"&gt;1000000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;tan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Thread %ld done. Result = %e&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;tid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;pthread_exit&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;pthread_t&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="no"&gt;NUM_THREADS&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;pthread_attr_t&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;long&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cm"&gt;/* Initialize and set thread detached attribute */&lt;/span&gt;
    &lt;span class="n"&gt;pthread_attr_init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;pthread_attr_setdetachstate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;PTHREAD_CREATE_JOINABLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mh"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;NUM_THREADS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Main: creating thread %ld&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;rc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pthread_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BusyWork&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ERROR; return code from pthread_create() is %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mh"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* Free attribute and wait for the other threads */&lt;/span&gt;
    &lt;span class="n"&gt;pthread_attr_destroy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mh"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;NUM_THREADS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;rc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pthread_join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ERROR; return code from pthread_join() is %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mh"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Main: completed join with thread %ld having a status of %ld&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="n"&gt;long&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Main: program completed. Exiting.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;pthread_exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="pthread"></category></entry><entry><title>Magnet Link 和 Torrent</title><link href="http://hackecho.com/2013/01/intro-to-magnet-link/" rel="alternate"></link><updated>2013-01-01T18:03:00-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2013-01-01:2013/01/intro-to-magnet-link/</id><summary type="html">&lt;p&gt;今天是美国的元旦（New-Year），本来打算到工程院度过一天，没想到整个学校到处都是大门紧闭。回家后准备下载一部电影，于是折腾中对磁力链接和种子产生了兴趣。不做深究，只谈表层原理。&lt;/p&gt;
&lt;p&gt;著名的BT搜索站海盗湾已经声明，不再托管任何种子文件，将全部更改为提供磁力链接（Magnet Links）。如果你还没有使用过磁力链接，这里将告诉你磁力链接和种子文件的关系（当然，磁力链接本身不仅限于种子文件）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;磁力链接和种子文件的区别&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当你下载一个种子文件时，其实是下载了一个包含了资源文件信息的小文件，这个小文件告诉BT客户端资源文件的名称、tracker的URI等。然后BT客户端会根据种子文件计算一个hash值（就像ISBN一样），再根据哈希值找到此刻正在分享这个资源的用户，然后开始P2P的传输。&lt;/p&gt;
&lt;p&gt;而磁力链接就像上述过程的一个中间人。最基本的磁力链接包含了上述过程中计算出来的hash值，好让BT客户端可以直接搜索资源。磁力链接不需要tracker，因为其使用了DHT网络（&lt;a href="http://lifehacker.com/5411311/bittorrents-future-dht-pex-and-magnet-links-explained"&gt;阅读更多&lt;/a&gt;），也不需要你下载任何文件，只需要一串文本字符即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;怎样使用磁力链接&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;磁力链接的形式是以magnet:开头的一串字符，你只需要直接点击磁力链接或把它复制到支持磁力下载的客户端即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;有什么意义&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这有什么意义呢？只是把种子文件换了一种形式而已。如果你这样以为就错了，否则海盗湾也不会全站进行转换。&lt;/p&gt;
&lt;p&gt;最重要原因是，使用磁力链接可以使像海盗湾这样的种子站摆脱法律纠缠。因为海盗湾本身将不再存储任何链接到受版权保护的资源上（比如.torrent文件）。这样将无法说海盗湾本身&lt;em&gt;直接&lt;/em&gt;允许用户下载版权保护内容了。不知道以后会不会有新的法律法规颁布，但目前来看，海盗湾大可高枕无忧了。&lt;/p&gt;
&lt;p&gt;如果你想了解更多关于磁力链接的知识，请阅读&lt;a href="http://en.wikipedia.org/wiki/Magnet_uri"&gt;维基百科&lt;/a&gt;。&lt;/p&gt;</summary><category term="Magnet_Link"></category><category term="Torrent"></category></entry><entry><title>Python中yield备忘</title><link href="http://hackecho.com/2012/12/python-yield/" rel="alternate"></link><updated>2012-12-31T13:57:00-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-12-31:2012/12/python-yield/</id><summary type="html">&lt;p&gt;总是记不起来yield的用法，大概是因为实践中还没有用过的缘故吧。不过发现它真的是个非常实用的关键字，在这里草草记下几笔备忘。&lt;/p&gt;
&lt;p&gt;带有 yield 的函数在 Python 中被称之为 generator（生成器）。&lt;/p&gt;
&lt;p&gt;我们已生成斐波那契数列为例，来循序渐进了解yield。&lt;/p&gt;
&lt;p&gt;生成斐波那契数列：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;fab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
    &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; 1 
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; 
        &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; 
        &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 1 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面这个函数中直接用到了print函数，导致该函数复用性极差。我们想到可以返回一个List，改写如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;fab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
    &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; 1 
    &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; 
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; 
        &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 1 
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但这个函数的内存占用会随着max的增大而增大，如果要控制内存占用，最好不要用List保存中间结果，而是通过iterable对象来迭代。举个例子：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;1000&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上述代码会生成一个1000元素的List；&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;1000&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;pass&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;而上述代码则会产生一个iterable对象，每次迭代中返回下一个值，内存占用很小。&lt;/p&gt;
&lt;p&gt;我们来改写一下fab函数：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;Fab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
        &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt; 
        &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; 1 

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;__iter__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt; 

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; 
            &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; 
            &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 1 
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; 
        &lt;span class="n"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;StopIteration&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样就可以通过循环返回下一个值了：for n in Fab(5)。&lt;/p&gt;
&lt;p&gt;但毕竟使用类重写后函数显得更加复杂，这时，yield 就派上用场了。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;fab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
    &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; 1 
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="n"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; 
        # &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; 
        &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; 
        &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 1 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;简单地讲，yield 的作用就是把一个函数变成一个 generator，带有 yield 的函数不再是一个普通函数，Python 解释器会将其视为一个 generator，调用 fab(5) 不会执行 fab 函数，而是返回一个 iterable 对象！在 for 循环执行时，每次循环都会执行 fab 函数内部的代码，执行到 yield b 时，fab 函数就返回一个迭代值，下次迭代时，代码从 yield b 的下一条语句继续执行，而函数的本地变量看起来和上次中断执行前是完全一样的，于是函数继续执行，直到再次遇到 yield。
也可以手动调用 fab(5) 的 next() 方法（因为 fab(5) 是一个 generator 对象，该对象具有 next() 方法），这样我们就可以更清楚地看到 fab 的执行流程：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;5&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
1 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
1 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
2 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
3 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
5 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
 &lt;span class="n"&gt;File&lt;/span&gt; &amp;quot;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; 1&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 
&lt;span class="n"&gt;StopIteration&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;yield 的好处是显而易见的，把一个函数改写为一个 generator 就获得了迭代能力，比起用类的实例保存状态来计算下一个 next() 的值，不仅代码简洁，而且执行流程异常清晰。&lt;/p&gt;
&lt;p&gt;每次调用 fab 函数都会生成一个新的 generator 实例，各实例互不影响。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;另一个例子&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;另一个 yield 的例子来源于文件读取。如果直接对文件对象调用 read() 方法，会导致不可预测的内存占用。比较好的方法是利用固定长度的缓冲区来不断读取文件内容。通过 yield，我们不再需要编写读文件的迭代类，就可以轻松实现文件读取：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;read_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fpath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
    &lt;span class="n"&gt;BLOCK_SIZE&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 1024 
    &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fpath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BLOCK_SIZE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
                &lt;span class="n"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt; 
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
                &lt;span class="k"&gt;return&lt;/span&gt; 
                # 在一个 &lt;span class="n"&gt;generator&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; 中，如果没有 &lt;span class="k"&gt;return&lt;/span&gt;，则默认执行至函数完毕，如果在执行过程中 &lt;span class="k"&gt;return&lt;/span&gt;，则直接抛出 &lt;span class="n"&gt;StopIteration&lt;/span&gt; 终止迭代。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考资料：&lt;a href="http://www.ibm.com/developerworks/cn/opensource/os-cn-python-yield/"&gt;廖雪峰-Python yield 使用浅析&lt;/a&gt;&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>圣路易斯掠影</title><link href="http://hackecho.com/2012/12/travel-to-st-louis/" rel="alternate"></link><updated>2012-12-30T18:58:50-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-12-30:2012/12/travel-to-st-louis/</id><summary type="html">&lt;p&gt;Thanksgiving的时候，我们密苏里旅行分队加上另一支新泽西旅行分队，到美国西部拉斯维加斯、洛杉矶和科罗拉多大峡谷晃悠了5天。后来由于临近期末，也没有时间整理途中的经历。前两天圣诞节，为了体验一把美国圣诞节的气氛，我们一行四人驱车前往圣路易斯，这座离我们哥村最近的城市游览一番。&lt;/p&gt;
&lt;p&gt;圣路易斯是美国第十八大城市，但在密苏里州却是最大的城市，濒临密西西比河，几乎位于美国几何正中心。它的名字是为了纪念法国国王圣路易斯九世而得，因为之前这里是法国的殖民地。城市古老而又典雅，Downtown中到处可见欧式风范的古建筑和充满现代气息的楼宇，城市宁静而又沉稳。&lt;/p&gt;
&lt;p&gt;早上8点半，我们从哥伦比亚出发，差不多两个小时正好到酒店。酒店门外就是密西西比河畔和圣路易斯最著名的景点——大拱门。大拱门高192米，可以乘坐电梯上去，俯瞰整个圣路易斯。&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/12/arch.jpg"&gt;&lt;img alt="" src="/static/images/2012/12/arch.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/12/arch-elevator.jpg"&gt;&lt;img alt="" src="/static/images/2012/12/arch-elevator.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;圣路易斯可游玩的地方还真不多，毕竟不是旅游城市。其著名的景点还要数一些博物馆和教堂了。&lt;/p&gt;
&lt;p&gt;第一天的时间还是比较充裕的，游览的也比较闲适。经过了布什体育场（Busch Stadium）（红雀队主场）、密西西比河畔、Union Station、City Museum等，印象最深的还要算City Museum了。这是最“名不副实”的Museum了！整个博物馆就是一幢大楼改造的游乐场…不过挺刺激的，各种钢架结构和滑梯，绝对让你过一把瘾。&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/12/citym1.jpg"&gt;&lt;img alt="" src="/static/images/2012/12/citym1.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/12/citym2.jpg"&gt;&lt;img alt="" src="/static/images/2012/12/citym2.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/12/citym3.jpg"&gt;&lt;img alt="" src="/static/images/2012/12/citym3.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第二天行程比较紧，先后经过了大拱门、Cathedral Basilica、百威啤酒厂、Forest Park等，其中在百威啤酒厂品尝了免费的啤酒，在Forest Park走过了艺术博物馆、历史博物馆和动物园。最令人着迷的是百威啤酒厂，刚下车的时候便被空气中的稻谷香和酒香陶醉了，第一次觉得啤酒味道这么好！&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/12/baiwei1.jpg"&gt;&lt;img alt="" src="/static/images/2012/12/baiwei1.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/12/baiwei2.jpg"&gt;&lt;img alt="" src="/static/images/2012/12/baiwei2.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于艺术博物馆和历史博物馆，像我等粗人还是无法完全理解艺术的魅力...临走前，圣路易斯飘起了雪，我们到Ryce Buffet吃了旅途中最后一顿大餐，便驱车回家，结束了2天的愉快旅程。&lt;/p&gt;</summary><category term="游记"></category><category term="圣路易斯"></category></entry><entry><title>SUDS错误和实例</title><link href="http://hackecho.com/2012/11/suds-problems/" rel="alternate"></link><updated>2012-11-13T14:23:09-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-11-13:2012/11/suds-problems/</id><summary type="html">&lt;p&gt;没想到最近项目方给了一个WebService接口，硬着头皮拿Pyhton来解析，终于迈过了第一大步，后面的过程就会轻松很多了。&lt;/p&gt;
&lt;p&gt;错误信息：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;test.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;doctor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/Library/Python/2.7/site-packages/suds-0.4-py2.7.egg/suds/client.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;112&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__init__&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wsdl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/Library/Python/2.7/site-packages/suds-0.4-py2.7.egg/suds/reader.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;152&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/Library/Python/2.7/site-packages/suds-0.4-py2.7.egg/suds/wsdl.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;159&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__init__&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build_schema&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/Library/Python/2.7/site-packages/suds-0.4-py2.7.egg/suds/wsdl.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;220&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;build_schema&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/Library/Python/2.7/site-packages/suds-0.4-py2.7.egg/suds/xsd/schema.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;95&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt;
    &lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dereference&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/Library/Python/2.7/site-packages/suds-0.4-py2.7.egg/suds/xsd/schema.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;323&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dereference&lt;/span&gt;
    &lt;span class="n"&gt;midx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;deps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dependencies&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/Library/Python/2.7/site-packages/suds-0.4-py2.7.egg/suds/xsd/sxbasic.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;422&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dependencies&lt;/span&gt;
    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;TypeNotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;suds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TypeNotFound&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;(schema, http://www.w3.org/2001/XMLSchema, )&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解决办法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;suds.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;suds.xsd.doctor&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ImportDoctor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Import&lt;/span&gt;

&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://solaranywhere.com/service.asmx?WSDL&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;imp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://www.w3.org/2001/XMLSchema&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://www.w3.org/2001/XMLSchema.xsd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;imp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://www.solaranywhere.com/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImportDoctor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;doctor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;第六行折腾了半天有木有。&lt;/p&gt;
&lt;p&gt;截图纪念：&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/11/suds-success.jpg"&gt;&lt;img alt="" src="/static/images/2012/11/suds-success.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;（微吐槽：最近调试本地页面，老是有一个GET请求发往urllog.sinaapp.com，我是真没写过这样的代码啊。。最后罪魁祸首原来是我装的一个叫“Sorry Youku”的插件，这插件在我打开的任何页面都会请求刚刚那个网址和发送google统计代码，赤裸裸被跟踪了。。。）&lt;/p&gt;
&lt;p&gt;实例都在此处（&lt;a href="https://fedorahosted.org/suds/wiki/Documentation"&gt;点击&lt;/a&gt;），我就不一一粘贴了。。。&lt;/p&gt;</summary><category term="Python"></category><category term="SUDS"></category></entry><entry><title>消失的这几天</title><link href="http://hackecho.com/2012/11/disappear-day/" rel="alternate"></link><updated>2012-11-03T16:01:47-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-11-03:2012/11/disappear-day/</id><summary type="html">&lt;p&gt;突然间，这里已经11月3日了，现在是凌晨1：20。在遥远的故乡，正是下午2：2o。朋友们，下午好。&lt;/p&gt;
&lt;p&gt;好久没写东西了，哪怕是技术方面的，也没有一篇。最新的一篇日志还停留在7月份，记得那是离签证还有一星期的时候，忙里偷闲转的一篇。一转眼，万圣节已过，开始期盼Thanksgiving的时候，却发现到处都开始准备圣诞树了。时间好快，恍惚之间，不敢苟且。&lt;/p&gt;
&lt;p&gt;如今，三个月过去了，每天的安排开始有了规律。不过回想起这三个月的种种，心头也会涌起一股莫名的感情。经常会想写一些东西记录，而一切变化太快，未等提笔，便已忙于身外，只能享受那片刻欢愉。&lt;/p&gt;
&lt;p&gt;也许有一天，我会将这些见闻与经历写一写，而现在还没有准备好。因为没有经过沉淀的思想，永远都是肤浅的。有一天回忆的时候，我要找寻那种想哭的感动。&lt;/p&gt;
&lt;p&gt;不过，我喜欢这种充实的生活，每一天都在创造价值，哥伦比亚是个小镇，宁静安详，不吵不闹，这里有传统的美国文化，也有纯真朴实的来自世界各地的人们，每天都有新发现，每天都会带给你新的的感受。&lt;/p&gt;
&lt;p&gt;明天又将是充实的一天，Ellis图书馆的教堂式屋顶真的让我在第一次见到时目瞪口呆，而屋顶下是一群群怀有梦想的学子，这里，是梦开始的地方。&lt;/p&gt;
&lt;p&gt;晚安。&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/11/lib.jpg"&gt;&lt;img alt="" src="/static/images/2012/11/lib.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;</summary><category term="生活"></category></entry><entry><title>Socket的几种工作模式</title><link href="http://hackecho.com/2012/07/socket-work-model/" rel="alternate"></link><updated>2012-07-17T22:30:00-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-07-17:2012/07/socket-work-model/</id><summary type="html">&lt;p&gt;Socket的几种工作模式我们简单介绍几种Socket的工作模式：阻塞模式、非阻塞模式、同步I/O、信号驱动I/O和异步I/O。&lt;/p&gt;
&lt;h2&gt;阻塞模式&lt;/h2&gt;
&lt;p&gt;是socket的缺省方式，也是最常用的方式，即函数阻塞直到调用完毕。&lt;/p&gt;
&lt;p&gt;可能造成阻塞的函数有：connect()、accept()、读写函数、select()、poll()、gethostbyname()等。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2012/07/1.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;可参见下面的例子：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;#include &amp;lt;errno.h&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;#include &amp;lt;sys/types.h&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;#include &amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;#include &amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;#include &amp;lt;sys/wait.h&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;#define MYPORT 3490                 /* 监听的端口 */&lt;/span&gt;
&lt;span class="c"&gt;#define BACKLOG 10                 /* listen的请求接收队列长度 */&lt;/span&gt;

&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_fd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="o"&gt;/*&lt;/span&gt; 监听端口，数据端口 &lt;span class="o"&gt;*/&lt;/span&gt;
    &lt;span class="nb"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="o"&gt;/*&lt;/span&gt; 自身的地址信息 &lt;span class="o"&gt;*/&lt;/span&gt;
    &lt;span class="nb"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt; &lt;span class="n"&gt;their_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;/*&lt;/span&gt; 连接对方的地址信息 &lt;span class="o"&gt;*/&lt;/span&gt;
    &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sin_size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;sockfd&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 0&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;1&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;socket&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;1&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_family&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_port&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;htons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MYPORT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;         &lt;span class="o"&gt;/*&lt;/span&gt; 网络字节顺序 &lt;span class="o"&gt;*/&lt;/span&gt;
    &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s_addr&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;INADDR_ANY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="o"&gt;/*&lt;/span&gt; 自动填本机&lt;span class="n"&gt;IP&lt;/span&gt; &lt;span class="o"&gt;*/&lt;/span&gt;
    &lt;span class="n"&gt;bzero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_zero&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 8&lt;span class="p"&gt;);&lt;/span&gt;             &lt;span class="o"&gt;/*&lt;/span&gt; 其余部分置0 &lt;span class="o"&gt;*/&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;1&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bind&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;1&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BACKLOG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;1&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;listen&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;1&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;/*&lt;/span&gt; 主循环 &lt;span class="o"&gt;*/&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;1&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;sin_size&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;new_fd&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;their_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;sin_size&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_fd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;1&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;accept&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;”&lt;span class="n"&gt;Got&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="c"&gt;%s\n&amp;quot;, inet_ntoa(their_addr.sin_addr));&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; 0&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="o"&gt;/*&lt;/span&gt; 子进程 &lt;span class="o"&gt;*/&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello, world!\ n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 14&lt;span class="p"&gt;,&lt;/span&gt; 0&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;1&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;send&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nb"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_fd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;0&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nb"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_fd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;/*&lt;/span&gt;清除所有子进程 &lt;span class="o"&gt;*/&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;waitpid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;1&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;WNOHANG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 0&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;非阻塞模式&lt;/h2&gt;
&lt;p&gt;程序调用可能造成阻塞的函数时，如果会发生阻塞，这些函数返回-1并将errno设置为EAGAIN或EWOULDBLOCK，程序可继续向下运行。可能阻塞的函数对应的任务完成，则再次调用该函数时就返回0表示运行结束。&lt;/p&gt;
&lt;p&gt;非阻塞模式可以避免程序死锁，但是需要程序不断检查各个可能阻塞的函数的状态，当一个应用程序使用了非阻塞模式的套接字，它需要使用一个循环来不听的测试是否一个文件描述符有数据可读（称做polling）。应用程序不停的polling内核来检查是否I/O操作已经就绪。这将是一个极浪费CPU资源的操作，因此不能实际应用。一般非阻塞模式是与同步I/O模式共同使用的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2012/07/2.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;I/O多路复用（同步I/O模式）&lt;/h2&gt;
&lt;p&gt;使用select()、poll()等函数实现对多个socket的同步I/O操作。它能同时等待多个socket描述符，而这些socket描述符其中的任意一个进入读就绪/写就绪/出错状态，select()函数就可以返回。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2012/07/3.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;信号驱动I/O&lt;/h2&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2012/07/4.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;异步I/O&lt;/h2&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2012/07/5.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;转自AKA&lt;/p&gt;</summary><category term="Socket"></category></entry><entry><title>Linux文件系统备忘录</title><link href="http://hackecho.com/2012/07/fhs-introduction/" rel="alternate"></link><updated>2012-07-01T10:15:00-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-07-01:2012/07/fhs-introduction/</id><summary type="html">&lt;p&gt;与Windows将硬盘看做“C盘”、“D盘”几个独立的分区不同，Linux将整个文件系统看做一棵树，这棵树的树根叫做根文件系统，用/表示。各个分区通过“挂载”（Mount）以文件夹的形式访问。&lt;/p&gt;
&lt;p&gt;在/中的文件夹很多，本文介绍常见文件夹的意义。Linux的目录结构确实比较复杂，但设置合理、层次鲜明。本文以&lt;a href="http://www.pathname.com/fhs/"&gt;FHS 2.3&lt;/a&gt;为例进行介绍。&lt;/p&gt;
&lt;h2&gt;根文件系统&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;/bin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这一目录中存放了供所有用户使用的完成基本维护任务的命令。其中bin是binary的缩写，表示二进制文件，通常为可执行文件。一些常用的系统命令，如cp、ls等保存在该目录中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/boot&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里存放的是启动Linux时使用的一些核心文件。如操作系统内核、引导程序Grub等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/dev&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在此目录中包含所有的系统设备文件。从此目录可以访问各种系统设备。如CD-ROM，磁盘驱动器，调制解调器和内存等。在该目录中还包含有各种实用功能，如用于创建设备文件的MAKEDEV。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;该目录中包含系统和应用软件的配置文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/passwd&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;该目录中包含了系统中的用户描述信息，每行记录一个用户的信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/home&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;存储普通用户的个人文件。每个用户的主目录均在/home下以自己的用户名命名。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/lib&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个目录里存放着系统最基本的共享链接库和内核模块。共享链接库在功能上类似于Windows里的.dll文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/lib64&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;64位系统有这个文件夹，64位程序的库。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/lost+found&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这并不是Linux目录结构的组成部分，而是ext3文件系统用于保存丢失文件的地方。不恰当的关机操作和磁盘错误均会导致文件丢失，这意味着这些被标注为“在使用”，但却并未列于磁盘上的数据结构上。正常情况下，引导进程会运行fsck程序，该程序能发现这些文件。除了“/”分区上的这个目录外，在每个分区上均有一个lost+found目录。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/media&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可移动设备的挂载点，当前的操作系统通常会把U盘等设备自动挂载到该文件夹下。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/mnt&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;临时用于挂载文件系统的地方。一般情况下这个目录是空的，而在我们将要挂载分区时在这个目录下建立目录，再将我们将要访问的设备挂载在这个目录上，这样我们就可访问文件了。（注意在GNOME中，只有挂载到/media的文件夹才会显示在“计算机”中，挂载到/mnt不会做为特殊设备显示，详见自动挂载分区）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/opt&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;多数第三方软件默认安装到此位置，如Adobe Reader、google-earth等。并不是每个系统都会创建这个目录。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/proc&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它是存在于内存中的虚拟文件系统。里面保存了内核和进程的状态信息。多为文本文件，可以直接查看。如/proc/cpuinfo保存了有关CPU的信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/root&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是根用户的主目录。与保留给个人用户的/home下的目录很相似，该目录中还包含仅与根用户有关的条目。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/sbin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;供超级用户使用的可执行文件，里面多是系统管理命令，如fsck, reboot, shutdown, ifconfig等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/tmp&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;该目录用以保存临时文件。该目录具有Sticky特殊权限，所有用户都可以在这个目录中创建、编辑文件。但只有文件拥有者才能删除文件。为了加快临时文件的访问速度，有的实现把/tmp放在内存中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;静态的用户级应用程序等，见下。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/var&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;动态的程序数据等，见下文。&lt;/p&gt;
&lt;h2&gt;/usr目录结构&lt;/h2&gt;
&lt;p&gt;/usr通常是一个庞大的文件夹，其下的目录结构与根目录相似，但根目录中的文件多是系统级的文件，而/usr中是用户级的文件，一般与具体的系统无关。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;usr&lt;/span&gt;最早是&lt;span class="n"&gt;user&lt;/span&gt;的缩写，&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;的作用与现在的&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;相同。而目前其通常被认为是 &lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt; &lt;span class="n"&gt;Resources&lt;/span&gt; 的缩写，其中通常是用户级的软件等，与存放系统级文件的根目录形成对比。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;应注意，程序的配置文件、动态的数据文件等都不会存放到/usr，所以除了安装、卸载软件外，一般无需修改/usr中的内容。说在系统正常运行时，/usr甚至可以被只读挂载。由于这一特性，/usr常被划分在单独的分区，甚至有时多台计算机可以共享一个/usr。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/bin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;多数日常应用程序存放的位置。如果/usr被放在单独的分区中，Linux的单用户模式不能访问/usr/bin，所以对系统至关重要的程序不应放在此文件夹中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/include&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;存放C/C++头文件的目录&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/lib&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;系统的库文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/local&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;新装的系统中这个文件夹是空的，可以用于存放个人安装的软件。安装了本地软件的/usr/local里的目录结构与/usr相似&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/sbin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在单用户模式中不用的系统管理程序，如apache2等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/share&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;与架构无关的数据。多数软件安装在此。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/X11R6&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;该目录用于保存运行X-Window所需的所有文件。该目录中还包含用于运行GUI要的配置文件和二进制文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/src&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;源代码&lt;/p&gt;
&lt;h2&gt;/var目录结构&lt;/h2&gt;
&lt;p&gt;/var中包括了一些数据文件，如系统日志等。/var的存放使得/usr被只读挂载成为可能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/var/cache&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;应用程序的缓存文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/var/lib&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;应用程序的信息、数据。如数据库的数据等都存放在此文件夹。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/var/local&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;/usr/local中程序的信息、数据&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/var/lock&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;锁文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/var/log&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;日志文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/var/opt&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;/opt中程序的信息、数据&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/var/run&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;正在执行着的程序的信息，如PID文件应存放于此&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/var/spool&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;存放程序的假脱机数据（即spool data）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/var/tmp&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;临时文件&lt;/p&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pathname.com/fhs/"&gt;FHS网站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="TLDP:%20Linux%20Filesystem%20Hierarchy"&gt;TLDP: Linux Filesystem Hierarchy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Linux"></category><category term="HFS"></category></entry><entry><title>我的失败可以复制</title><link href="http://hackecho.com/2012/06/my-faile-can-be-copied/" rel="alternate"></link><updated>2012-06-23T01:05:00-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-06-23:2012/06/my-faile-can-be-copied/</id><summary type="html">&lt;p&gt;常听人说，如果你开始回忆过去，说明你老了。而我却时常会怀念过去，或者说，是忏悔。&lt;/p&gt;
&lt;p&gt;有时候会想，如果大学的前三年可以重新来过，让我们都回到那个懵懂的年纪，重新开始全新的大学生活，一定会选择一种完全不一样的生活。我一直以为，世界上有另外一个我，在过着我想过的生活，在做着我想做的事，而我却永远无法重新选择。&lt;/p&gt;
&lt;p&gt;永远不能回头，在不断的选择中，我们创造了自己的生活。然而，当我们回首时看到的却满是错误与失去，多想穿越时空告诉那时的自己，你的选择，错了。可是，这些都是没有用的，回不去的事情再勉强也是幻想，走好余下的路才是最重要的，过去的错误永远是最宝贵的财富。&lt;/p&gt;
&lt;p&gt;生命中，我们竭尽全力都无法改变的事情：倒向你的墙，离你而去的人，流逝的时间，和永远的过去。&lt;/p&gt;
&lt;p&gt;就像这句歌词一样：“如果骄傲没被现实大海冷冷拍下，又怎会懂得要多努力才走得到远方；如果梦想不曾坠落悬崖千钧一发，又怎会晓得执着的人有隐形翅牓。”&lt;/p&gt;
&lt;p&gt;所以，不要难过了。离过去越近，离未来就越远。过精彩的生活，遇到精彩的人，找到精彩的未来。&lt;/p&gt;</summary><category term="失败"></category><category term="青春"></category></entry><entry><title>我的高考</title><link href="http://hackecho.com/2012/06/my-ncee/" rel="alternate"></link><updated>2012-06-05T23:52:47-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-06-05:2012/06/my-ncee/</id><summary type="html">&lt;p&gt;后天就要高考了，但这似乎已经与我无关。那段时光已经过去三年，可每每到这个时候，都会禁不住想起当年的我，当年的18班。&lt;/p&gt;
&lt;p&gt;时间正在将过往一丝一丝地抹去，我想在淡忘之前，再次品味一下那年的生活。&lt;/p&gt;
&lt;p&gt;关键字：运动场，角落，封闭的军事化管理，星空，考试那天&lt;/p&gt;
&lt;h3&gt;运动场&lt;/h3&gt;
&lt;p&gt;每天晚饭吃过以后，大约6点半，我们会三三两两到运动场上跑步，一般是跑6圈，然后满头大汗地回到教室等待晚自修。不管天气多么热，尤其是临近6月的时候，跑道上塑胶的味道很具有冲击感，但我们都依旧坚持着。当时的想法很简单，身体好才能保证学习，而要想身体好就要锻炼。那时候跟我一起跑的通常是永明，我高三时的同桌，物理超牛逼的一个人，现在在北大学物理系。跑步完之后，有时候我们会坐在草坪上，望着天空，莫名地感叹一下高三的生活，憧憬一下美好的未来，讨论一下大学，讨论一下理想。那时候没有多余的想法，黑色的高三也没那么苦，只是觉得很充实，很带感。&lt;/p&gt;
&lt;h3&gt;角落&lt;/h3&gt;
&lt;p&gt;后来，我们在教室的位置换成了桌子和桌子相互隔开的布局，谁也不是谁的同桌。我特别向往教室最后面的角落里的那个座位，或许只是想求得一份宁静，在聒噪的高三里，能有一片属于自己的瓦尔登湖。&lt;/p&gt;
&lt;p&gt;再后来，我后面的位置成了兴华的山水宝地。6月初即将高考的时候，我们还会在角落里说一些不着边的话题，整晚整晚地讨论。晚间下课，这个角落会是一帮人的美食之地，食堂买来的烧饼、馒头，超市买来的虾皮、老干妈，偶尔还会有一些新奇的玩意儿，大家热闹地讨论着，玩笑着。&lt;/p&gt;
&lt;h3&gt;封闭的军事化管理&lt;/h3&gt;
&lt;p&gt;我们学校向河北的衡中学习，实行封闭式的军事化管理，加上我们竞争压力比较大，每个人都拼命地学习。你永远无法体会高考面对98万考生同省竞争的压力，同样的大学，对于我们的分数会高出很多。每天五点半就要起床，一直到晚上十点半，紧张、规律的生活按照预定的轨道有条不紊。&lt;/p&gt;
&lt;p&gt;不过我却很感谢这样的生活，磨练了那个时候的我们。就像永明走路一样，只有加快步伐，才能缩短浪费在路途中的时间。如今，永明走路的步伐依旧是那么快，我总也赶不上。&lt;/p&gt;
&lt;h3&gt;星空&lt;/h3&gt;
&lt;p&gt;冬天的时候，每天5点半起床，走在去教室的路上，总会抬头找北斗七星的形状。清晨的感觉，就是夜的感觉；夜的感觉，就是努力的感觉。&lt;/p&gt;
&lt;p&gt;清晨的夜，还有停车棚的自行车，留给我了永远无法磨灭的记忆。只要抬头仰望星空，就好像回到了那个时候，再来一首周杰伦的《简单爱》，我会觉得是时光倒流。&lt;/p&gt;
&lt;h3&gt;考试那天&lt;/h3&gt;
&lt;p&gt;靠！考试那天，我的嘴唇被蚊子咬了。听起来貌似很荒谬，但更荒谬的是，初中中考的那一天，我的嘴唇也被蚊子咬了。我一直觉得冥冥之中是谁在安排着，或许上辈子我与蚊子有仇吧，简直巧合的难以令人相信。而且，截至目前，我的嘴唇总共被蚊子咬过两次，就是这两次。&lt;/p&gt;
&lt;p&gt;说实话，考试那两天记忆不太深，感觉跟平常一样。语文作文搞砸了，理综没感觉，数学还不错，英语还凑合。然后，考完英语的那天下午，我们不像其他人一样，而是来到了教室估分。随后，奋斗在批阅前线的老师们发来了参考答案，那几天便疯狂地选校、填志愿。那时侯谁知道，这一选，选的是自己整个青春。&lt;/p&gt;</summary><category term="高考"></category></entry><entry><title>3 Software Architecture Style</title><link href="http://hackecho.com/2012/06/three-software-architecture-style/" rel="alternate"></link><updated>2012-06-02T22:49:56-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-06-02:2012/06/three-software-architecture-style/</id><summary type="html">&lt;p&gt;I'm heistate to compose this article for it is easy to understand and quantities of great materials have been published on net. But I think it will be a process of gaining knowledge and experience so I write it here to accept your criticism correction.&lt;/p&gt;
&lt;p&gt;This brief introduction of three software architecture style is from my homework of Software Architecture Course. Thanks for the guidance of Prof. Zhenyan Ji. All right reserved by hackecho.com.&lt;/p&gt;
&lt;p&gt;Actually there are nine SA styles right in class and in this task I'm responsible of Event Driven, SOA and C2 style. I'm very glad to share it with you and if there is anything wrong in my article please leave a comment and let's have a discussion. Thank you.&lt;/p&gt;
&lt;h3&gt;Event Driven Style&lt;/h3&gt;
&lt;p&gt;事件驱动的意思是指程序执行流程是由使用者的动作（如鼠标的按键，键盘的按键动作）或者是由其他程序的信息来决定的。事件驱动模型有三大要素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;事件源：能够接受外部事件的源体&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;侦听器：能够接受事件源通知的对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;事件处理程序：用于处理事件的对象&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般来讲有两种事件驱动控制模型：&lt;/p&gt;
&lt;p&gt;1.Broadcast models&lt;/p&gt;
&lt;p&gt;这种模型中，有两种广播方式：第一种是无目的广播，靠接收者自行决定是否加以处理或简单抛弃。第二种是选择广播式，各个组件（即事件处理程序）会在事件源中注册侦听器，当此侦听器被触发后，系统再调用相应的组件。&lt;/p&gt;
&lt;p&gt;2.Interrupt-driven models&lt;/p&gt;
&lt;p&gt;这种模型大多数应用于实时响应的系统中，在这些系统中有一个中断处理器（事件源）来监测外部的中断信号，然后再调用响应的组件（事件处理程序）处理中断。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Broadcast models&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;系统描述&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;本案例取自我们平常编程时经常使用的调试器（Debugger）工作原理。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;设计思路&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;编辑器与变量检测器向调试器注册，接收“断点事件”；一旦遇到断点，调试器发布事件，从而触发“编辑器”与“变量监测器”；这时编辑器将源代码滚动到断点处，变量监测器则更新当前变量值并显示出来。&lt;/p&gt;
&lt;p&gt;&lt;em&gt; 架构图&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2012/06/1.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Interrupt-driven models&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;系统描述&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;本案例取自我们学习的课程《操作系统基本概念》。&lt;/p&gt;
&lt;p&gt;在操作系统中，中断是用以提高计算机工作效率、增强计算机功能的一项重要技术。最初引入硬件中断，只是出于性能上的考量。如果计算机系统没有中断，则处理器与外部设备通信时，它必须在向该设备发出指令后进行忙等待(Busy waiting)，反复轮询该设备是否完成了动作并返回结果。这就造成了大量处理器周期被浪费。引入中断以后，当处理器发出设备请求后就可以立即返回以处理其他任务，而当设备完成动作后，发送中断信号给处理器，后者就可以再回过头获取处理结果。这样，在设备进行处理的周期内，处理器可以执行其他一些有意义的工作，而只付出一些很小的、切换上下文所引发的时间代价。后来被用于CPU外部与内部紧急事件的处理、机器故障的处理、时间控制等多个方面，并产生通过软件方式进入中断处理（软中断）的概念。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;设计思路&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;在硬件实现上，中断可以是一个包含控制线路的独立系统，也可以被整合进存储器子系统中。&lt;/p&gt;
&lt;p&gt;对于前者，在IBM个人机上，广泛使用可编程中断控制器（Programmable Interrupt Controller，PIC）来负责中断响应和处理。PIC被连接在若干中断请求设备和处理器的中断引脚之间，从而实现对处理器中断请求线路的复用。&lt;/p&gt;
&lt;p&gt;作为另一种中断实现的形式，即存储器子系统实现方式，可以将中断端口映射到存储器的地址空间，这样对特定存储器地址的访问实际上是中断请求。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;架构图&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;第一种实现（中断是包含控制线路的独立系统）：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2012/06/2.png" /&gt;&lt;/p&gt;
&lt;p&gt;第二种实现（中断被整合进存储器子系统中）：&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/06/3.png"&gt;&lt;img alt="" src="/static/images/2012/06/3.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;SOA&lt;/h3&gt;
&lt;p&gt;面向服务的体系结构（Service-Oriented Architecture，SOA）是一个组件模型，它将应用程序的不同功能单元（称为服务）通过这些服务之间定义良好的接口和契约联系起来。接口是采用中立的方式进行定义的，它应该独立于实现服务的硬件平台、操作系统和编程语言。这使得构建在各种这样的系统中的服务可以一种统一和通用的方式进行交互。&lt;/p&gt;
&lt;p&gt;SOA中的三种角色：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;服务提供者&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;发布服务，并对使用服务的请求进行响应&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;服务代理&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注册已经发布的服务提供者，对其进行分类，并提供服务搜索功能&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;服务请求者&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;利用服务代理查找所需服务，然后使用服务&lt;/p&gt;
&lt;p&gt;&lt;em&gt;系统描述&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;SOA本身是个概念性非常强的东西，为了更好地说明，这里以一个简单的网上买书来理解一下这个概念。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;设计思路&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;加入说一个人现在想在网上买书，流程大概是这样的：首先要登录网站，找到要买的书，然后在线付款。如果用面向对象思维去考虑，这些过程应该是一个工程的不同类。但事实上卖书的网站是不可能拿到银行的付款类并操作银行的数据库的。所以这时候我们用SOA的思维去考虑。卖书的网站提供一个服务，你可以在这里选择书并订购；银行提供一个服务，是检查你的帐户上是否有钱，并取得一定金额；此时再返回网站提供的服务进行结帐，交易成功之后，银行那边的服务也会做出结算。这样就完成了一次交易。&lt;/p&gt;
&lt;p&gt;在这个系统中，银行和网站都是服务提供者，他们将各自的服务注册到服务代理（这个可以由网站来做），然后需要用的时候请求服务即可。其间的数据大部分情况时通过XML来进行传递。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;架构图&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2012/06/4.png" /&gt;&lt;/p&gt;
&lt;h3&gt;C2&lt;/h3&gt;
&lt;p&gt;C2是一种基于构件和消息的架构风格，可用于创建灵活的、可伸缩的软件系统。可以将C2架构看做是按照一定的规则由连接件（如消息路由设备）连接的许多构件组成的层次网络：系统中的构件和连接件都有一个“顶部”和“底部”。一个构件的“顶部”或“底部”可以连接到另一个连接件的“顶部”或“底部”。对于一个连接件，和其相连的构件或连接件的数量没有限制，但是构件和构件之间不能直接相连。&lt;/p&gt;
&lt;p&gt;C2风格定义了两种类型的消息：向上发送的请求消息（Request）和向下发送的通知消息（Notification）。请求是通过向上层构件发送消息以获得某种服务，而通知则是告知构件的内部状态发生了改变。连接件负责消息的路由、过滤和广播，构件之间不存在直接的通信手段，而只能通过交换连接件发送的异步消息进行通信。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;系统描述&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;我们以《软件体系结构》这门课补课安排为例，简单理解一下C2风格。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;设计思路&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;这个例子中包含三种构件：教师构件、学生构件、教学科构件。&lt;/p&gt;
&lt;p&gt;需要补课的时候，冀老师首先分别向学生和教学科发出补课请求，并提供一个自己期望的补课时间和地点的集合；同时，冀老师分别向学生和教学科发出请求获取学生和教学科期望的补课时间和地点的集合。学生与教学科收到老师的补课请求和参数（时间和地点）后，结合自身情况和教室的使用情况，选出学生和教学科期望老师补课的时间和地点的集合后返回给老师。老师接收到学生与教学科的返回集合后，再结合自己的期望集合最后得出准确的补课时间和地点，并通知学生与教学科。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;架构图&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2012/06/5.png" /&gt;&lt;/p&gt;
&lt;p&gt;再次感谢冀振燕老师的指导，如若转载请注明出处。&lt;/p&gt;</summary><category term="Architecture"></category></entry><entry><title>Sequences and Proxy Services in WSO2 ESB</title><link href="http://hackecho.com/2012/06/sequences-and-proxy-services-in-wso2-esb/" rel="alternate"></link><updated>2012-06-02T04:32:31-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-06-02:2012/06/sequences-and-proxy-services-in-wso2-esb/</id><summary type="html">&lt;p&gt;&lt;img alt="" src="/static/images/2012/06/esb-header-logo.gif" /&gt;&lt;/p&gt;
&lt;p&gt;Recently I'm busy doing my SOA project which is using WSO2 ESB system as part of it. The official's documentation is so long that I have to find some articles that will provide a simple hello world of WSO2 ESB clearly to give me a bright view of it. Luckly, a great man, Hiranya Jayathilka, who worked in WSO2 Inc, give me a shock at the basic of this ESB system. Here is Hiranya's blog from blogspot, I copy it here since blogspot is blocked in China and I want to share it with my patners and others who may need it. &lt;a href="http://techfeast-hiranya.blogspot.jp/2009/11/wso2-esb-tips-tricks-01-sequences-and.html"&gt;Here&lt;/a&gt; is the original article source. All right reserved by Hiranya Jayathilka.&lt;/p&gt;
&lt;p&gt;The main objective of this post is to introduce two very important functional components of the ESB, namely sequences and proxy services. These are perhaps the most commonly used functional components of WSO2 ESB. They can be used to implement even the most complex of messaging systems and enterprise integration patterns using the service bus. During the course of this article I will briefly explain some of the use cases of sequences and proxy services along with some useful information on how to use them in WSO2 ESB.&lt;/p&gt;
&lt;p&gt;WSO2 ESB supports four modes of operation.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Service mediation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Message mediation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Task scheduling&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Eventing&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In the service mediation mode, WSO2 ESB acts as a proxy to a real Web Service hosted in a Web Services container like Apache Axis2 or WSO2 WSAS. The ESB exposes a virtual Web Service which can accept requests from clients. The requests are processed, mediated and forwarded to the actual service implementation by the ESB. Any responses coming from the service implementation are mediated and forwarded to the clients. Proxy services are used to get the ESB operating in this mode.&lt;/p&gt;
&lt;p&gt;In the message mediation mode, WSO2 ESB functions as a message router. It can filter, transform, drop messages or forward them to remote endpoints for further processing when operating in this mode. Sequences are used to define the message mediation behavior of the ESB. A sequence is a series of mediators, where each mediator is an entity that can accept messages and carry out a predefined task on them. WSO2 ESB provides you with a wide range of mediators designed to carry out various processing tasks on the messages. You can mix and match these available mediators to develop sequences. For instance a sequence comprising of the log mediator and the send mediator will act as a simple log-and-forward message flow. You can have any number of mediators in a sequence and a sequence can also dispatch messages to other sequences if needed.&lt;/p&gt;
&lt;p&gt;A proxy service is a combination of three sequences and a target endpoint. The target endpoint is for the actual service implementation to which the messages will be forwarded after mediation. The three sequences are as follows.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In-sequence: All the incoming requests to the proxy service are dispatched to the in-sequence. This sequence defines how the requests should be processed before forwarding them to the target endpoint.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Out-sequence: All the responses coming back from the backend service implementation are dispatched to this sequence. It defines how the responses should be handled before sending them back to the clients. The out sequence can also forward the responses to a given service endpoint, thus effectively linking up multiple services. This way a single request to the proxy service will trigger multiple service invocations. The response from the 1st service is fed to the 2nd service as the request.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fault sequence: If an error occurs during service mediation the faulty message is handed to the fault sequence for error handling work. Depending on our requirements the fault sequence can be used log the error, ignore it or send a SOAP fault back to the client indicating that something went wrong.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now that you have a basic understanding of sequences and proxy services let’s take a look at some of the use cases where these components come in handy. Proxy services can be used to expose an existing service over a different schema (message format). In scenarios like this one, proxy services can transform the messages flowing back and forth. Also since proxy services can be exposed over multiple transports they can be used to expose an existing service over a different transport. For an example we can take a simple HTTP service and expose it over JMS by creating a proxy service for the HTTP service and exposing it over JMS. The ESB will take care of switching the communication protocols. In addition, proxy services are useful in adding QoS features (security, RM etc) to ordinary message flows. As an example, we can take an unsecured service, create a proxy service for it and engage security on the proxy service to add security to the backend service implementation.&lt;/p&gt;
&lt;p&gt;Sequences can be used to audit, filter, control and transform messages flowing through a network. Certain advanced features like access control, load balancing and fail over are also possible with sequences. In WSO2 ESB all the incoming messages which are not destined to a proxy service are dispatched to the “main” sequence. The main sequence can further distribute them to other sequences and they in turns can call even more sequences. This is somewhat analogous to how a C program works. The application runtime invokes the main procedure and it in turns can call other procedures.&lt;/p&gt;
&lt;p&gt;Enough with the theory! Let’s get practical and see how to create sequences and proxy services in WSO2 ESB. Here actually you have several options. You can either use the XML based Synapse configuration language to define sequences and proxy services, or use the set of graphical tools that come with WSO2 ESB. To create a sequence graphically, first start the ESB server and logon to the management console. (By default the web based console is accessible at https://localhost:9443/carbon) Sign in as an administrator (By default the username and the password are both “admin”). Click on the “Sequences” option in the left panel. This will show you a list of existing sequences. By default the “main” sequence and the global “fault” sequence is listed on this page.&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/06/seq_list.png"&gt;&lt;img alt="" src="/static/images/2012/06/seq_list.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To create a new sequence, click on “Add Sequence”. This will bring up the on-line sequence editor. Start by giving a name to the sequence. Then go ahead and start adding mediators.&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/06/seq_editor.png"&gt;&lt;img alt="" src="/static/images/2012/06/seq_editor.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To further customize the behavior of a mediator instance click on the mediator and a dialog box will appear just below the sequence editor panel. Once you are done creating the sequence click on “Save” to save and close the editor. The newly created sequence will now show up on the list of available sequences.&lt;/p&gt;
&lt;p&gt;Ceating a proxy service is just as easy. Click on the Proxy Service link in the left panel to start the proxy service creation wizard.&lt;/p&gt;
&lt;p&gt;Simply go through the 3-step wizard and specify an in-sequence, target endpoint, out-sequence and a fault sequence for the proxy service. When specifying these items you can either import an already existing sequence/endpoint or create one on the spot by selecting the “Anonymous” option.&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/06/seq_epr.png"&gt;&lt;img alt="" src="/static/images/2012/06/seq_epr.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once you finish the wizard the new service will get created and deployed on the server. If you gave the name “FooProxy” to the service it will be exposed on the HTTP endpoint http://localhost:8280/services/FooProxy.&lt;/p&gt;
&lt;p&gt;Now if you click on the “Synapse” link on the left navigation bar you can see that the overall ESB configuration has been updated with your changes.&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/06/synapse.png"&gt;&lt;img alt="" src="/static/images/2012/06/synapse.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The UI also allows you to enable statistics collection on sequences and proxy services, enable tracing on them and modifying their configuration. Play around with the various options available to you and get familiar with sequences, proxy services and the ESB management console. We will be using these a lot in the days to come.&lt;/p&gt;
&lt;p&gt;Thanks Hiranya Jayathilka.&lt;/p&gt;</summary><category term="ESB"></category><category term="WSO2"></category></entry><entry><title>解决MySQL无法通过localhost连接问题</title><link href="http://hackecho.com/2012/05/mysql-localhost-connect-problem/" rel="alternate"></link><updated>2012-05-27T00:33:00-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-05-27:2012/05/mysql-localhost-connect-problem/</id><summary type="html">&lt;p&gt;今晚一朋友问到，为什么Mac上自己装了MySQL后只能通过127.0.0.1连接，却无法通过localhost连接？想到我以前也遇到过同样的问题，但当时因为通过127.0.0.1连接就可以解决，也就没有多在意，只记得是与mysql.sock文件的位置有关。今日本着解决问题的心态，再次检索这个问题。&lt;/p&gt;
&lt;p&gt;悲剧，前两天重装系统后，还没安装MySQL呢...不过，还记的上一篇文章吗，正好试下Homebrew神器的刀锋。&lt;/p&gt;
&lt;h3&gt;安装MySQL&lt;/h3&gt;
&lt;p&gt;依次执行下列三个命令：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;
&lt;span class="n"&gt;unset&lt;/span&gt; &lt;span class="n"&gt;TMPDIR&lt;/span&gt;
&lt;span class="n"&gt;mysql_install_db&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;verbose&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;`&lt;span class="n"&gt;whoami&lt;/span&gt;` &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;basedir&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&amp;quot;$&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;prefix&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&amp;quot; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;datadir&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;tmpdir&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;具体为什么有后两条命令，你安装的时候就知道了。&lt;/p&gt;
&lt;h3&gt;解决localhost问题&lt;/h3&gt;
&lt;p&gt;我们看它的错误提示：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Can&lt;/span&gt;’&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;connect&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="n"&gt;MySQL&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="n"&gt;through&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt; ‘&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;既然文件mysql.sock出问题了，那我们就拿它下手。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Terminal不给面子，给出一行错误提示：No such file or directory。&lt;/p&gt;
&lt;p&gt;既然文件不存在，那我们就找到它呗。（此处省略一万字）在Mac上，mysql.sock文件的正确地址是：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;终极解决办法：&lt;/p&gt;
&lt;p&gt;修改php.ini的相关配置&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ini&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;找到mysql.default_socket和mysqli.default_socket，将其值修改为/tmp/mysql.sock。保存，退出，重启Apache。&lt;/p&gt;
&lt;p&gt;OK，搞定。&lt;/p&gt;
&lt;p&gt;当然，如果你的电脑上mysql.sock和php.ini文件和我的不一样（默认的话应该一样），要修改相关命令中的路径。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;更新：&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;还有一种解决办法，创建一个符号链接过去：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="MySQL"></category></entry><entry><title>开发者神器 - Homebrew简介</title><link href="http://hackecho.com/2012/05/super-tool-homebrew/" rel="alternate"></link><updated>2012-05-25T12:28:27-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-05-25:2012/05/super-tool-homebrew/</id><summary type="html">&lt;p&gt;Homebrew&lt;a href="http://mxcl.github.com/homebrew/"&gt;官网&lt;/a&gt;页面最下方大大地写了一句话：“Homebrew is the bee’s knees, friends. So far it’s a perfect replacement for MacPorts.” 哈哈，这不是公开的挑战MacPorts是什么，不过，作为用过一段时间MacPorts的非标准程序员，个人感觉Homebrew真的要好用一些：）&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2012/05/homebrew.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;什么是Homebrew呢？Homebrew is the easiest and most flexible way to install the UNIX tools Apple didn't include with OS X. 官方的解释非常明了，Homebrew是一个包管理器，用于在Mac上安装一些OS X没有的UNIX工具（比如著名的wget）。&lt;/p&gt;
&lt;p&gt;Homebrew将这些工具统统安装到了 /usr/local/Cellar 目录中，并在 /usr/local/bin 中创建符号链接。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; $ &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;
 $ &lt;span class="nb"&gt;find&lt;/span&gt; &lt;span class="n"&gt;Cellar&lt;/span&gt;
 &lt;span class="n"&gt;Cellar&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;wget&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;1&lt;span class="p"&gt;.&lt;/span&gt;12
 &lt;span class="n"&gt;Cellar&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;wget&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;1&lt;span class="p"&gt;.&lt;/span&gt;12&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;wget&lt;/span&gt;
 &lt;span class="n"&gt;Cellar&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;wget&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;1&lt;span class="p"&gt;.&lt;/span&gt;12&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;man&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;man1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;wget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;1

 $ &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="n"&gt;bin&lt;/span&gt;
 &lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;Cellar&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;wget&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;1&lt;span class="p"&gt;.&lt;/span&gt;12&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;wget&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;安装&lt;/h3&gt;
&lt;p&gt;Homebrew是基于Ruby的，安装超简单的有木有，把下面的代码粘贴到Terminal中执行：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ruby&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &amp;quot;$&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;curl&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fsSL&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mxcl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;homebrew&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Library&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Contributions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;install_homebrew&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这个脚本会把Homebrew安装到  /usr/local 目录，因此在用Homebrew执行安装操作时都不需要 sudo ，而且一键式编译，无需参数干扰。&lt;/p&gt;
&lt;p&gt;不过，Homebrew对安装环境还是有一定要求的，比如必须安装Command Line Tools for Xcode，为了装这个东西我180MB流量又没了啊有木有！这个月已经超了9个G了有木有！（不好意思，跑题了...）&lt;/p&gt;
&lt;h3&gt;路径结构&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;          用于存放所安装程序的启动链接（相当于快捷方式）
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Cellar&lt;/span&gt;       所以&lt;span class="n"&gt;brew&lt;/span&gt;安装的程序，都将以&lt;span class="p"&gt;[&lt;/span&gt;程序名&lt;span class="o"&gt;/&lt;/span&gt;版本号&lt;span class="p"&gt;]&lt;/span&gt;存放于本目录下
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;          &lt;span class="n"&gt;brew&lt;/span&gt;安装程序的配置文件默认存放路径
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Library&lt;/span&gt;      &lt;span class="n"&gt;Homebrew&lt;/span&gt; 系统自身文件夹
&lt;span class="o"&gt;+&lt;/span&gt;–&lt;span class="n"&gt;Formula&lt;/span&gt;     程序的下载路径和编译参数及安装路径等配置文件存放地
&lt;span class="o"&gt;+&lt;/span&gt;–&lt;span class="n"&gt;Homebrew&lt;/span&gt;    &lt;span class="n"&gt;brew&lt;/span&gt;程序自身命令集
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;使用方法&lt;/h3&gt;
&lt;p&gt;神器来了，欢呼吧少年。&lt;/p&gt;
&lt;p&gt;查看brew的帮助&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装软件&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;卸载软件&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;uninstall&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;搜索软件&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;显示已经安装软件列表&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;更新软件，把所有的Formula目录更新，并且会对本机已经安装并有更新的软件用星号标明。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;更新某具体软件&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看软件信息&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;FORMULA&lt;/span&gt;&lt;span class="p"&gt;...]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;删除程序，和upgrade一样，单个软件删除和所有程序老版删除。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;cleanup&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;
&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;cleanup&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看那些已安装的程序需要更新&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;outdated&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;各位继续Enjoy，我要继续准备TOEFL去了...&lt;/p&gt;</summary><category term="Homebrew"></category></entry><entry><title>Homebrew VS MacPorts</title><link href="http://hackecho.com/2012/05/homebrew-vs-macports/" rel="alternate"></link><updated>2012-05-22T23:20:57-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-05-22:2012/05/homebrew-vs-macports/</id><summary type="html">&lt;p&gt;Source: http://tedwise.com/2010/08/28/homebrew-vs-macports/&lt;/p&gt;
&lt;p&gt;If you do development on a Mac and you have a Unix background, you immediately start noticing missing tools and utilities. OS/X doesn’t have an apt-get for package management (or even one of the lousy RPM variants). There are options though. Two of them have been around for quite a while, MacPorts and Fink.&lt;/p&gt;
&lt;p&gt;MacPorts is strongly influenced by the BSD ‘ports’ system. Ports are essentially recipes for taking source code and build scripts and making them compile and install on the target operating system. BSD ports organize the recipes and source code into a tree that make adding software easy.&lt;/p&gt;
&lt;p&gt;Fink takes a different approach. It’s based around Debian’s packaging tools and apt-get. Fink mainly manages pre-compiled/pre-built applications. So the applications you install using Fink don’t need to be compiled and built on your system.&lt;/p&gt;
&lt;p&gt;Between the two of them, MacPorts tends to be the easier solution. Software is more up to date, there are more options, it’s somewhat less intrusive into your system and you get new versions faster when Apple updates OS/X. Ironic when you consider that MacPorts code is compiled on your system while Fink is just downloading binaries.&lt;/p&gt;
&lt;p&gt;But MacPorts is still no walk in the park. Even though it’s less intrusive then Fink, it still isn’t a great citizen on OS/X. MacPorts eschews many of the system libraries and software already available in OS/X for other variants. Installing a seemingly simple utility might somehow require a new version of Perl, Python or other set of large software.&lt;/p&gt;
&lt;p&gt;Homebrew is a reaction to the complexity of MacPorts. It’s extremely simple. Homebrew appears to be targeted more at individual packages. If you want to pull in the entire world of open source software and want every package, then you’re better off with MacPorts or Fink. But if you’re looking for the occasional tool or utility, Homebrew is for you.&lt;/p&gt;
&lt;p&gt;Installation is dead simple:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;ruby&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &amp;quot;$&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curl&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fsS&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;gist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;323731&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;install_homebrew&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That downloads the installer and executes it. Homebrew is based on Ruby and the install script is no exception.&lt;/p&gt;
&lt;p&gt;By default Homebrew will try to take over your /usr/local directory. If you’ve already installed anything there (MySQL, etc.) then Homebrew will complain. You can install Homebrew anywhere, but then you’ll have to add that directory to your PATH.&lt;/p&gt;
&lt;p&gt;Homebrew also assumes that you’re on a single user system. If that’s not you, then you definitely want to install it to a user-specific location and alter your PATH. But, for most people, the default works just fine.&lt;/p&gt;
&lt;p&gt;Once installed, you control Homebrew using the brew command. You can find packages using brew search, install them using brew install and remove them using brew uninstall. Just like any other package manager, Homebrew tracks package dependencies so it will pull in dependent packages as needed and warn you if you try to uninstall a required package.&lt;/p&gt;
&lt;p&gt;The major benefits of Homebrew over MacPorts are simplicity, lack of intrusiveness, and speed. Homebrew’s recipes try very hard to use the existing tools and libraries in OS/X, so they tend to build much faster and require fewer dependent libraries. The recipes themselves are Ruby scripts and are small, simple to understand and easy to create and modify. But, honestly, if all you want is to install wget and newer versions of git and other open source tools, you’ll never need to look at or understand Homebrew’s recipes. Just brew install wget, brew install git and be happy.&lt;/p&gt;</summary><category term="Homebrew"></category><category term="MacPorts"></category></entry><entry><title>[转]如何在保证睡眠的情况下高效学习</title><link href="http://hackecho.com/2012/05/how-to-keep-alive-with-less-sleep/" rel="alternate"></link><updated>2012-05-20T18:33:03-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-05-20:2012/05/how-to-keep-alive-with-less-sleep/</id><summary type="html">&lt;p&gt;来源：http://blog.renren.com/blog/230557688/844071536&lt;/p&gt;
&lt;p&gt;少睡不是长久之计，关键还是要高效地管理时间，提供十条高效做事的经验。&lt;/p&gt;
&lt;p&gt;每天都过的很快，好像起床以后忙活几下，又到了晚上，很快又要睡觉了。To-do-list上的事好像总是做不完，有的时候积压地太多以至于都不想去碰了。每天从早到晚都是忙碌状态，但是总觉得做不了几件事，要是给我1天48小时该多好。&lt;/p&gt;
&lt;p&gt;事情太多时间不够，但是睡少了又效率低下，这实在是个悖论。似乎很多牛人都可以睡的很少，每天4-5小时睡眠，或者间歇式的睡眠，就可以高效地做事。这个境界我总是达不到，也没有想去达到。少睡不是长久之计，关键还是要高效地管理时间。&lt;/p&gt;
&lt;p&gt;我今天和一个朋友请教了这个问题，很受启发。我朋友是卡内基梅陇大学的计算机在读博士，发表了好几篇顶级论文，科研做的很牛。除学术以外，他还忙活不少其他的事，他是云飞跃留学平台的兼职编辑，他业余时间喜欢研究摄影，最近又在开发一款手机游戏，他周末也会花不少时间陪女朋友。尽管做那么多事，他告诉我说他每天都精力充沛，做事效率很高！&lt;/p&gt;
&lt;p&gt;但是他每天可以睡8小时！&lt;/p&gt;
&lt;p&gt;他讲了好几条高效做事的经验：&lt;/p&gt;
&lt;h3&gt;1、作息要规律，这是重中之重。&lt;/h3&gt;
&lt;p&gt;他的作息大致是这样的：&lt;/p&gt;
&lt;p&gt;6:00 起床和早餐&lt;/p&gt;
&lt;p&gt;7:15 – 7:30 跑步到学校&lt;/p&gt;
&lt;p&gt;7:30 – 8:15 健身&lt;/p&gt;
&lt;p&gt;8:30 – 11:30 做事&lt;/p&gt;
&lt;p&gt;11:30 – 13:00 午饭+午睡&lt;/p&gt;
&lt;p&gt;13:00 – 18:00 做事&lt;/p&gt;
&lt;p&gt;18:00 – 19:30 晚饭&lt;/p&gt;
&lt;p&gt;19:30 – 22:30 做事&lt;/p&gt;
&lt;p&gt;22:30 睡觉&lt;/p&gt;
&lt;p&gt;所以每天约有11小时在做事。他说只有作息规律了，身体机能才能达到最大的发挥。就像生产线一样，只有流程化了，效率才能提高。作息经常不规律，身体就要不断调整，这个调整很消耗能量，影响效率。就像一个GPS，总是在re-calculating，还怎么指路呢？&lt;/p&gt;
&lt;h3&gt;2、不要熬夜，熬夜伤身。&lt;/h3&gt;
&lt;p&gt;很多人觉得12点，1点睡觉没关系，只要习惯就行了，人的适应能力很好的。但是大量的医学研究表明，长期熬夜会引发很多病，而且这些病一旦爆发，往往后果很严重。我知道卡内基梅陇的人很能熬夜，刚来的时候我有几次半夜2点回家，等校车的有不少人。但后来我感觉这边的课程和科研压力很大，一直熬夜下去会一发不可收拾，我就强迫自己改变。改变前你要先明白一点：只要睡眠不减少，不管早睡晚睡，每天做事的时间实际是差不多的。&lt;/p&gt;
&lt;h3&gt;3、每天要有固定的时间锻炼，至少半小时。&lt;/h3&gt;
&lt;p&gt;锻炼可以促进新城代谢，调节身体机能。每天经常锻炼的人，虽然消耗了体力，但是换来的是精神充沛，相反那些不锻炼的人，经常觉得累。&lt;/p&gt;
&lt;h3&gt;4、做事之前多想想。&lt;/h3&gt;
&lt;p&gt;想明白你为什么做这件事，怎样做可以达到最佳的效果。很多人是拿起事情就做，兵来将挡水来土掩，一股脑的做完了事。这实际上是非常不明智而且低效的做法，因为目的不清晰就会走岔路，做事方法不优化就会浪费时间。有的时候你花5分钟多想想，可以节省你好几个小时。&lt;/p&gt;
&lt;h3&gt;5、做事不要拖。&lt;/h3&gt;
&lt;p&gt;很多人喜欢拖，事情就不断积累下来了，然后被一个又一个的deadline折磨。重要的事情一定要在合适的时间尽快处理掉。一件事如果比较耗时，要做好规划，每天做一点。&lt;/p&gt;
&lt;h3&gt;6、每天要做的事尽量写下来，不要只是放在脑中。&lt;/h3&gt;
&lt;h3&gt;7、做事要专注。&lt;/h3&gt;
&lt;p&gt;很多人做事的时候，开着renren、Facebook、weibo、QQ和其他网页，不时会去看看有什么新情况。你以为它们只会占居你很少的时间，其实这些时间碎片严重影响了你的效率。就像睡觉一样，你如果被断断续续的声音影响，你就没法进入深度睡眠。所以，做重要的事情的时候，把这些务必都关了，邮件也尽量定期去查看，免得经常被新来的邮件打断。&lt;/p&gt;
&lt;h3&gt;8、控制好做事的节奏，张弛有度。&lt;/h3&gt;
&lt;p&gt;从早到晚做事不可能保持一样的效率，如果你早上精神好，那就在早上尽量做重要的事，下午和晚上做一些相对轻松的事。在1小时内做事，也要把握节奏，可以高强度地做50分钟，然后低强度的做10分钟或者休息。道理大家都懂，但很多人一忙起来就不能自拔了。&lt;/p&gt;
&lt;p&gt;我再根据自己的经验补充2条吧：&lt;/p&gt;
&lt;h3&gt;9、如果你喜欢multi-task（多任务处理），尽量减少task之间频繁切换，并且每个task的时间要控制好。&lt;/h3&gt;
&lt;p&gt;我一般一小时内就做一个task，如果1小时到了，我通常就会换下一个（如果没有deadline限制）。长时间做一个task往往会效率低下。&lt;/p&gt;
&lt;h3&gt;10、知道什么事你能做，什么事你不能做。&lt;/h3&gt;
&lt;p&gt;我们经常想做很多事，但是精力有限，能力有限，使得我们必须做出选择。有些事你如果做不好就尽量不要去接受去承诺。选择是一种智慧，有所放弃才能保证你的睡眠。&lt;/p&gt;
&lt;p&gt;希望这些经验对你有帮助！&lt;/p&gt;</summary><category term="效率"></category></entry><entry><title>年华一度，梦如歌</title><link href="http://hackecho.com/2012/05/sing-a-song-in-my-young/" rel="alternate"></link><updated>2012-05-13T02:30:13-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-05-13:2012/05/sing-a-song-in-my-young/</id><summary type="html">&lt;p&gt;&lt;img alt="年华一度" src="/static/images/2012/05/1330396829220.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;多年以前，当我们还是孩童的时候，曾是那么的渴望着长大。长大以后，懵懵懂懂的，我们又希望能够早些成熟。而当我们都成熟之后才明白，原来，成熟真的不是一件幸福的事情，我们为此付出了太大的代价。生活的种种无奈要面对，人生的诸多曲折要经历，所以我们不得不抛却内心的纯真，挂上虚伪的笑容，冷漠着自己的视线，用伪装将自己层层包裹，时间久了，最真实的自我也就忘了。&lt;/p&gt;
&lt;p&gt;纤尘风染，俗世纷争。多么的渴望，渴望时光能够倒流回曾经，不要断断续续的奔跑，也不要迫不及待的长大。可不可以，让我再次回到孩童的岁月，手拿枯树枝，头顶凉草帽，脚穿棉布鞋，去找寻那些早就化为轻烟的尘埃，来栽植自己枯萎的心灵。&lt;/p&gt;
&lt;p&gt;我知道，这注定是个没有回应的愿望，哪怕我跪在佛前祈求五百年。我也知道，过去的始终是过去的，不管如何不舍它也不会再回来，时光的脚步又怎会为我而轻易的停顿。我只是不甘心，不甘纯真的笑颜就此沉寂，只留下一些无迹可寻的回忆，装点着自己灰暗的世界，恍如戈壁般，入眼一片荒芜。&lt;/p&gt;
&lt;p&gt;年华一度，转转兜兜间，绿了芭蕉，瘦了红叶，长了头发，也长了个子，似乎一切看得见的，都在不断变化着。而那些看不见的，譬如感情，譬如经历，想起连痕迹都变得缥缈，说起却又不知从何处开始，所以，只能让它日复一日，年复一年的累积着，沉淀着，一如灰尘般，层层叠加于故事的封面，时间长了，就变成了最初的土壤，散发出阵阵醉人的芬芳。&lt;/p&gt;
&lt;p&gt;而有的时候，感觉，回忆就像一个圆形的跑道，我们都在其中徘徊，不管如何的挣脱始终都无法走到尽头。&lt;/p&gt;
&lt;p&gt;往事幕幕，聚集于脑海，彷佛一场伤情的电影般，催发着眼角的湿润，把内心无法宣泄的伤痛，一遍又一遍的撕扯着，一遍又一遍冲刷着…&lt;/p&gt;
&lt;p&gt;虽然，回忆很美，一如妖艳的粟樱花般，迷人的外表下，却包含了致命的毒素。然，我们明知回忆有毒，却还是义无反顾的投进了回忆的海洋，只余下一颗颗晶莹的泪珠，落在灰暗的天空下，闪亮的那么耀眼。&lt;/p&gt;
&lt;p&gt;岁月匆匆流逝许多年，每当夜深人静时，我总会想起那些远去的背影，想起那些一起走过的时光，于是，我孤独的灵魂开始流浪，寂寞而又苍凉的找寻着属于自己的明天。&lt;/p&gt;
&lt;p&gt;都说，飘逝的青春，就像一首无声的律歌般，唱起有痕，说起又无言。或许，青春的旋律正如那怀念的思绪一样，看却不透，摸也不着。而我，却总是架不住思绪的来潮，控制不了情感的漫延，总会想起那些人，还有曾经的那个她。&lt;/p&gt;
&lt;p&gt;摸索着走进春日里的田野，望着周遭露出的新绿，我度着忧伤的步伐，走走停停，轻轻地滑进二月缠绵的细雨中。霎时，我就全然没有了思绪，任由雨丝肆虐着我脆弱的神经，让我再也分不清来时去路的方向。&lt;/p&gt;
&lt;p&gt;装点记忆的眉目，我落魄的文字穿梭于泛黄的宣纸间，恍如起舞于梦中的彩蝶，是那样自由的在飞翔。&lt;/p&gt;
&lt;p&gt;拉起记忆的窗帘，我似乎又听到了儿时经常听的故事。虽然，那些声音早已被时光发酵成古老的传说，但是，我却依旧如当初般，怀着虔诚的心情，沉醉于故事构成的世界，只因，那里有我最纯真的笑容，最浓烈的情愫，还有那些已经叫不出名字的可爱身影。&lt;/p&gt;
&lt;p&gt;一路前行，一路歌唱，时光已过去了很远很远，想起那些人，说起那些事，这也许不是忧伤，只是被落日隐藏的光芒，掩盖了温馨的真相。&lt;/p&gt;
&lt;p&gt;其实，真的很喜欢这样的感觉。喜欢在万籁俱寂的时候，听着音乐喝着茶；喜欢在身体犯困的时候，沉睡到那样色彩斑斓的画卷里，然后，便将心中的所有都抛却，去追逐自己的停顿的双足。&lt;/p&gt;
&lt;p&gt;年华一度水一歌。流连于半梦花开的世界，朦朦胧胧的，我仿佛看到了那些消逝的风景，幼时的身影，立时的红颜，成片的爬山虎和几只奔跑的野兔，慢慢的从记忆的湖底向我涌来。而我，却依旧无法醒来，全然忘了自己身在何方。&lt;/p&gt;
&lt;p&gt;年华如梦，梦却如歌，唱着唱着，便再也回不去了…&lt;/p&gt;
&lt;p&gt;来源：网络 文/残月&lt;/p&gt;</summary><category term="美文"></category></entry><entry><title>Python中的装饰器Decorator</title><link href="http://hackecho.com/2012/05/python-decorator/" rel="alternate"></link><updated>2012-05-11T23:38:01-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-05-11:2012/05/python-decorator/</id><summary type="html">&lt;p&gt;Stackoverflow上面有一个问题（&lt;a href="http://stackoverflow.com/questions/739654/understanding-python-decorators"&gt;Here&lt;/a&gt;），问题是这样的：&lt;/p&gt;
&lt;p&gt;如果使用如下的代码：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;makebold&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;makeitalic&lt;/span&gt;
&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;say&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;Hello&lt;/span&gt;&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;打印出如下的输出：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;b&amp;gt;&amp;lt;i&amp;gt;&lt;/span&gt;Hello&lt;span class="nt"&gt;&amp;lt;/i&amp;gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;你会怎么做？最后给出的答案是：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;def makebold(fn):
    def wrapped():
        return &amp;quot;&lt;span class="nt"&gt;&amp;lt;b&amp;gt;&lt;/span&gt;&amp;quot; + fn() + &amp;quot;&lt;span class="nt"&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;&amp;quot;
    return wrapped

def makeitalic(fn):
    def wrapped():
        return &amp;quot;&lt;span class="nt"&gt;&amp;lt;i&amp;gt;&lt;/span&gt;&amp;quot; + fn() + &amp;quot;&lt;span class="nt"&gt;&amp;lt;/i&amp;gt;&lt;/span&gt;&amp;quot;
    return wrapped

@makebold
@makeitalic
def hello():
    return &amp;quot;hello world&amp;quot;

print hello() ## 返回 &lt;span class="nt"&gt;&amp;lt;b&amp;gt;&amp;lt;i&amp;gt;&lt;/span&gt;hello world&lt;span class="nt"&gt;&amp;lt;/i&amp;gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中的@其实就是Python的装饰器。&lt;/p&gt;
&lt;p&gt;装饰器模式可以在不影响其它对象的情况下，以动态、透明的方式给单个对象添加职责，也能够处理那些可以撤销的职责。经常用于日志记录、性能测试等场合。&lt;/p&gt;
&lt;p&gt;想象一下这个很常见的场景，你写了一个方法只提供给以登陆的用户访问，你可以写以下代码：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_login&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="n"&gt;something&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这当然没什么问题，但是你又写了一个方法B，也要求只有登录用户可以访问，于是有写了以下代码：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_login&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="n"&gt;something&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;问题出来了，如果不是两个方法而是一堆方法，你可能就有点受不了啦。当然聪明的你可以想出这个方法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;pass&lt;/span&gt;
&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;pass&lt;/span&gt;
&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;login_required&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_login&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;pass&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ff&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;login_required&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;login_required&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;你可能没有想到，对于这么好用的东西，python优雅的支持，这就是@修饰符：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;login_required&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_login&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;pass&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ff&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;login_required&lt;/span&gt;
&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;pass&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;login_required&lt;/span&gt;
&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;在方法A上边写一个@修饰符，调用方法A的时候会调用修饰符后边的方法B，方法B以A方法为参数，而且需要返回一个可调用的对象，这个可调用的对象会使用A方法提供的参数执行。&lt;/strong&gt;看这个例子：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python  &lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;a&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;b&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt;

&lt;span class="nd"&gt;@a&lt;/span&gt;
&lt;span class="nd"&gt;@b&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;

&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;输出结果是：bacd&lt;/p&gt;
&lt;p&gt;我们调用c('c')的时候会先调用b(c)，b(c)打印字符"b"然后返回c，然后再调用a(c)，a(c)打印字符"a"，然后返回方法d，然后再执行d('c')，打印cd。&lt;/p&gt;
&lt;p&gt;参考资料：http://blog.csdn.net/shangzhihaohao&lt;/p&gt;</summary><category term="Decorator"></category><category term="Python"></category></entry><entry><title>近况 &amp; 忙里偷闲</title><link href="http://hackecho.com/2012/05/my-recent-life-things/" rel="alternate"></link><updated>2012-05-10T23:11:29-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-05-10:2012/05/my-recent-life-things/</id><summary type="html">&lt;p&gt;我觉得有必要记录一下生活。&lt;/p&gt;
&lt;p&gt;两年前，我对自己的生活就一个要求：“每天都要创造价值”。当时还和某某人深入探讨过，什么是价值，怎样去创造的问题。不知到某某人还记得否，当年为此想法兴高采烈，一致认为应该将其写本书，也像那谁谁一样火一把。后来遗憾的是，再也没有机会和某某人探讨这个问题了，只好躬身而行，久而久之，竟然也成了一种习惯性的思维。如果某天不能创造点价值（在自己看来），就没有勇气结束一天。不过毕竟人无完人，长期以来，这种思维导致的直接后果就是养成了晚睡的好习惯...看来必须调整一下了。&lt;/p&gt;
&lt;p&gt;最近几天，除了迫在眉睫的TOEFL、GRE外，其它时间全部沉浸在Tornado中。想起以前的时候，阿北坐在星巴克，用四五个月的时间创造了豆瓣，我就有种莫名的冲动。但我创造的不是豆瓣，而是一个中国的关于Python的开源社区。细节就不透露了，PyPub.com，敬请期待。&lt;/p&gt;
&lt;p&gt;其实我想吐槽一下Tornado，就不能有一个像样的文档吗！各种问题搞不清楚，查不到资料。还好Tornado是个轻量级的框架，还可以读一读源码找找问题。其实也是一举两得的事情，就像当我把Markdown的Python实现的源码过了一遍的时候，其语法也就了解的差不多了，也就是说，如果你把JAVA的C++源码读一遍，大抵也就可以用JAVA编程了（偷笑）。但一举两得的事往往要艰难得多，很多时候我们不愿意去做罢了。&lt;/p&gt;
&lt;p&gt;最近比较有感触的一句话：“世界是一本书，没旅行过的人只看到其中一页。”比起中规中矩的生活，我更喜欢有挑战的生活，更喜欢新的气息，我想去阅读这本书，因为我们只有这一次生命来阅读它。阅尽人世繁华，何尝不是一种人生。因为如此，也许我不会过早地结婚，但我会从结婚的那一天起，带我的爱人环游世界。&lt;/p&gt;
&lt;p&gt;嗯，忙里偷闲，简简单单寥寥数语，共勉青春年华。&lt;/p&gt;</summary><category term="生活"></category></entry><entry><title>高效人士的七种习惯（中英对照）</title><link href="http://hackecho.com/2012/05/seven-habits-of-hight-effective-people/" rel="alternate"></link><updated>2012-05-03T10:28:03-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-05-03:2012/05/seven-habits-of-hight-effective-people/</id><summary type="html">&lt;p&gt;&lt;img alt="" src="/static/images/2012/05/ogwAq.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Habit 1: Be Proactive 凡事积极主动&lt;/p&gt;
&lt;p&gt;Habit 2: Begin with the End in Mind 先定目标而后有行动&lt;/p&gt;
&lt;p&gt;Habit 3: Put First Things First 重要的事要先做&lt;/p&gt;
&lt;p&gt;Habit 4: Think Win-Win 为了大家都赢&lt;/p&gt;
&lt;p&gt;Habit 5: Seek First to Understand, Then to Be Understood 先理解别人，再让别人理解自己&lt;/p&gt;
&lt;p&gt;Habit 6: Synergize 协同合作&lt;/p&gt;
&lt;p&gt;Habit 7: Sharpen the Saw 磨亮锯子（意指不断自我提高）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;全文：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;高效人士的七种习惯&lt;/p&gt;
&lt;p&gt;斯蒂芬·科卫教授（Prof. Stephen Covey）&lt;/p&gt;
&lt;p&gt;Our character is a composite of our habits. Changing habits is hard, but can be done by tremendous commitment. A (good) habit can be defined as the intersection of knowledge, skill and desire. Change is a cycle of being and seeing (visualization).&lt;/p&gt;
&lt;p&gt;Our objective is to move progressively on a maturity continuum from dependence to independence to interdependence. Although independence is the current paradigm of our society, we can accomplish much more by cooperation and specialization. However, we must achieve independence before we can choose interdependence.&lt;/p&gt;
&lt;p&gt;我们的性格是我们的习惯的集合物。改变习惯是困难的，但只要下定特大的决心，习惯是可以改变的。一种（良好）习惯可以被定义为知识、技能和愿望的交汇点。改变即是存在和视觉的循环。&lt;/p&gt;
&lt;p&gt;我们的目标是，从依赖到独立、再到互相依赖，在成熟连续流中循序渐进。虽然独立是当前我们的社会模式，但是我们通过合作和专业化却可以取得更多的成绩。尽管如此，在能够选择相互依赖之前，我们必须取得独立。&lt;/p&gt;
&lt;h3&gt;Habit 1: Be Proactive 凡事积极主动&lt;/h3&gt;
&lt;p&gt;The first and most basic habit of a highly effective person in any environment is the habit of proactivity. Being proactive means that as human beings, we are responsible for our own lives. Our behavior is a function of our decisions, not our conditions. We can subordinate feelings to values. We have the initiative and the responsibility to make things happen.&lt;/p&gt;
&lt;p&gt;Look at the word responsibility-response-ability-the ability to choose your responses. Highly proactive people recognize that responsibility. They do not blame circumstances, conditions, or conditioning for their behavior. Their behavior is a product of their own conscious choice, based on values, rather than a product of their conditions, based on feeling. The opposite of proactive is reactive. The spirit of reactive people is the transfer of responsibility. Their language absolves them of responsibility.&lt;/p&gt;
&lt;p&gt;Proactive people focus their time and energy on their Circle of Influence (things they can control) in lieu of reacting to or worrying about conditions over which they have little or no control (Circle of Concern). In so doing,proactive people use positive energy to influence conditions and increase their Circle of Influence.&lt;/p&gt;
&lt;p&gt;在任何环境中做事效率很高的人都具有的首要以及基本的习惯是积极主动的习惯。积极主动的含义是，我们作为人类，应该对我们自己的生命负责。我们的行为不是环境而是我们做出的决定的结果。我们可以使感觉服从价值。我们有创造的主动性和责任性。&lt;/p&gt;
&lt;p&gt;看看responsibility（责任）这个词，它由response（反应）和ability（能力）两个词组成，意思是选择做出反应的能力。非常积极主动的人认识到这种责任。他们不抱怨环境、条件或者环境对他们的驯化作用。他们的行为是他们自己基于价值而有意做出选择的一种产物，而不是基于感情的、他们的条件的产物。积极主动的反义词是消极被动。消极被动者的精神是逃避责任，他们的言辞为自己开脱责任。&lt;/p&gt;
&lt;p&gt;积极主动的人将自己的时间和精力集中在自己的“势力范围”（自己可以控制的事物）之内，而不是对自己几乎不能或完全不能控制的条件（“关注范围”）做出被动的反应或担心。&lt;/p&gt;
&lt;h3&gt;Habit 2: Begin with the End in Mind 先定目标而后有行动&lt;/h3&gt;
&lt;p&gt;To begin with the end in mind means to begin each day with a clear understanding of your desired direction and destination. By keeping that end in mind you can make certain that whatever you do on any particular day does not violate the criteria you have defined as supremely important, and that each day of your life contributes in a meaningful way to the vision you have of your life as a whole.&lt;/p&gt;
&lt;p&gt;Begin with the end in mind is based on the principle that all things are created twice. There’s a mental or first creation and a physical or second creation. The second, or physical creation, follows from the first, just as a building follows from a blueprint. In our personal lives, if we do not develop our own self-awareness and become responsible for first creations, we empower other people and circumstances to shape our lives by default.&lt;/p&gt;
&lt;p&gt;Leadership is the first creation. Management is the second creation. Management is a bottom line focus: How can I best accomplish certain things? Leadership deals with the top line: What are the things I want to accomplish? In the words of both Peter Drucker and Warren Bennis, “Management is doing things right; leadership is doing the right things.” Management is efficiency in climbing the ladder of success; leadership determines whether the ladder is leaning against the right wall.&lt;/p&gt;
&lt;p&gt;先有目标而后有行动，意思是每一天开始时，你都清楚地了解自己想要实现的方向或目标。当你心怀目标，你才能做到每一个具体的日子所做的任何事情都不违反你已经确定的极其重要的标准，你生活中的每一天都在以一种积极的方式有助于达到你整个人生的愿景。&lt;/p&gt;
&lt;p&gt;“先有目标而后有行动”是建立在这样一种原理基础上的，即所有事情都经历两次创造。第一种是精神创造，第二种是物质创造。第二种或物质创造产生于第一种创造，正如先有蓝图再盖房子一样。在我们的个人生活中，如果我们不开发自我意识，不对第一种创造负责，我们就会让别人和环境错误地改变我们的人生。&lt;/p&gt;
&lt;p&gt;领导是第一种创造，管理是第二种创造。管理关注基层工作：我怎样能够完成某些事情？领导处理高层事务：那些事情是我想要完成的？用德鲁克和本尼斯两人的话，就是：”管理是把事情做得正确，领导是做正确的事情。”管理是在成功阶梯上攀登的效率，领导是确定是否把梯子放到了正确的墙上。&lt;/p&gt;
&lt;h3&gt;Habit 3: Put First Things First 重要的事要先做&lt;/h3&gt;
&lt;p&gt;What are first things? First things are those things that you, personally, find most worth doing. They move you in the right direction and help you achieve the purpose expressed in your mission statement.&lt;/p&gt;
&lt;p&gt;Put First Things First involves organizing and managing time and events according to the personal priorities established in Habit 2 (Begin with the End in Mind). Habit 2 is the first or mental creation. Habit 3, then, is the second, or physical creation. It’s the day-in, day-out, moment by moment doing it.&lt;/p&gt;
&lt;p&gt;哪些事是重要的事情？重要的事情就是那些你自己发现最值得做的事情。它们使你沿着正确的方向前进，帮助你达到你在个人使命里陈述的目标。&lt;/p&gt;
&lt;p&gt;“重要的事要先做”牵涉到根据习惯二（“先有目标而后有行动”）里所建立的个人优先事项对时间、事件进行组织和管理。习惯二是第一种或精神创造，而习惯三是第二种或物质创造。它是日进日出、每时每刻地做事。&lt;/p&gt;
&lt;h3&gt;Habit 4: Think Win-Win 为了大家都赢&lt;/h3&gt;
&lt;p&gt;In relationships and businesses, effectiveness is largely achieved through the cooperative efforts of two or more people. Marriages and other partnerships are interdependent realities, and yet people often approach these relationships with an
independent mentality, which is like trying to play golf with a tennis racket-the tool isn’t suited to the sport.&lt;/p&gt;
&lt;p&gt;Most of us learn to base our self-worth on comparisons and competition. We think about succeeding in terms of someone else failing. That is, if I win, you lose. Or if you win, I lose. There is only so much pie and if you get a big piece there is less for me. People with this type of Scarcity Mentality find it difficult to share recognition and power, and to be happy for the successes of others, especially those closest to them.&lt;/p&gt;
&lt;p&gt;Win-Win, on the other hand, is based on the paradigm that there is plenty for everybody, that one person’s success is not achieved at the expense or exclusion of the success of others. Win-Win sees life as a cooperative, not a competitive arena. Win-Win is a frame of mind and heart that constantly seeks mutual benefit in all human interactions. Win-Win means that agreements or solutions are mutually beneficial and satisfying.&lt;/p&gt;
&lt;p&gt;在社会关系和商务活动中，效率大体上都要经过两个或两个以上的人的合作努力才能取得。婚姻和其他伙伴关系是互相依赖的现实，然而人们却经常以一种独立的心态处理这些关系，如同用网球拍去打高尔夫球——使用了不适合这种体育运动的工具。&lt;/p&gt;
&lt;p&gt;我们中的多数人学会了将自我价值建立在比较和竞争之上。我们想着在别人摔倒时进行超越。这就是说，如果我赢，就是你输。或者，如果你赢，就是我输。馅饼就这么大，如果你得到一大块，我得到的就要少。怀有这种”稀缺心态”的人很难与人分享赞誉与权力，很难为别人特别是天天跟自己在一起的人获得成功而感到高兴。&lt;/p&gt;
&lt;p&gt;在另一方面，“双赢”或“大家都赢”是建立在每个人都有许多机会这个思想方式上的，即一个人并不是以牺牲别人利益或排除别人成功而取得成功。“大家都赢”把人生看作是合作而不是竞争的舞台。“大家都赢”是在所有人类共处中不断需求相互利益的一种心灵结构。“大家都赢”意味着各种约定和方案对于大家都是有益处而且是使大家都满意的。&lt;/p&gt;
&lt;h3&gt;Habit 5: Seek First to Understand, Then to Be Understood 先理解别人，再让别人理解自己&lt;/h3&gt;
&lt;p&gt;Communication is the most important skill in life. We spend most of our waking hours communicating. But consider this: You’ve spent years learning how to read and write. Years learning how to speak. But what about listening? What training or education have you had that enables you to listen so that you really, deeply understand another human being from that individuals’ own frame of reference?&lt;/p&gt;
&lt;p&gt;Seeking first to understand, or diagnosing before you prescribe, is a correct principle manifest in many areas of life. A wise doctor will diagnose before writing a prescription. A good engineer will understand the forces, the stresses at work, before designing the bridge. An effective salesperson first seeks to understand the needs of the customer before offering a product. Similarly, an effective communicator will first seek to understand another’s views before seeking to be understood.&lt;/p&gt;
&lt;p&gt;Until people feel properly diagnosed they will not be open to prescriptions. We typically seek first to be understood. Most people do not listen with the intent to understand; they listen with the intent to reply. They’re either speaking or preparing to speak. They’re filtering everything through their own paradigms,reading their autobiography into other people’s lives.&lt;/p&gt;
&lt;p&gt;沟通是人生最为重要的技能，我们将醒着的大部分时间用来沟通。但是，你要考虑这个问题：你花了许多年时间读书、认字、说话，但是学习聆听了吗？你所接受过的教育或培训，有没有课程使你能够通过聆听从而站在另一个人的角度去真正深刻地理解他？&lt;/p&gt;
&lt;p&gt;寻求先理解别人，或者是先诊断再开方，是人生许多领域正确的原则妙方。明智的大夫在开方之前先诊断。出色的工程师在设计桥梁之前先要理解力学和运营应力。有效率的销售员在推荐一种产品之前首先要寻求理解客户的需要。同样，有效率的沟通者在寻求别人理解自己之前，先要寻求理解别人的观点。人们只有在感到得到了恰当的诊断之后才会愿意接受处方。&lt;/p&gt;
&lt;p&gt;我们通常是首先要别人理解自己。大多数人不是怀着理解别人的意图去聆听，他们聆听的意图是要别人做出回答。他们要么是说话，要么是准备说话。他们用自己的模式过滤一切，以自己的经历来理解别人的生活。&lt;/p&gt;
&lt;h3&gt;Habit 6: Synergize 协同合作&lt;/h3&gt;
&lt;p&gt;Synergy is everywhere in nature. The intermingled roots of two plants growing closely together improve the quality of the soil. Two pieces of wood bonded together hold much more than the total of the weight held by each separately. The whole is
greater than the sum of its parts. One plus one equals three or more.&lt;/p&gt;
&lt;p&gt;The principle of synergy also holds true in social interactions. Two people, creatively cooperating, will be able to produce far better results than either one could alone. Synergy lets us discover jointly things that we are much less likely todiscover by ourselves. It occurs when minds stimulate each other and ideas call forth ideas. I say something that stimulates your mind; you respond with an idea that stimulates mine. I share that new idea with you, and the process repeats itself andeven builds.&lt;/p&gt;
&lt;p&gt;Synergy works. It is the crowning achievement of all the previous habits. It is effectiveness in an interdependent reality-it is teamwork, team building, the development of unity and creativity with other human beings.&lt;/p&gt;
&lt;p&gt;Valuing the differences is the essence of synergy-the mental, the emotional, the physiological differences between people. And the key to valuing those differences is to realize that all people see the world, not as it is, but as they are. When we value differences and bring different perspectives together in the spirit of mutual respect, people then feel free to seek the best possible alternative, often the Third Alternative, one that is substantially better than either of the original proposals. Finding a third alternative is not compromise, but represents a Win-win solution for both parties.&lt;/p&gt;
&lt;p&gt;协同是自然界的普遍现象。依偎在一起生长的两种植物的根交织在一起，能够改良土壤的质量。两根木棍绑在一起所承受的分量要比单独一根所承受的分量大得多。整体大于部件之和。一加一等于三甚至更多。&lt;/p&gt;
&lt;p&gt;协同原理在社会互动中也是真理。进行创造性合作的两个人所创造的成果，比两人中任何一个人单独去做要多得多。协同让我们共同发现我们个人所较少发现的东西。当主意相互碰撞、想法相互启发，协同效应就发生了。我说的事情激发你的想法，你回应的主意又对我有所启发。我与你分享一个新的主意，而这个过程不断重复，甚至有所建树。&lt;/p&gt;
&lt;p&gt;协同合作是有效的，它是在前面所有习惯基础上取得的成绩。它是存在于一种相互依赖的现实之中的效率——是团队工作，是团队建设，是与别人团结创造的发展。&lt;/p&gt;
&lt;p&gt;重视差异——人们在智力、情感、心理上的差异——是协同合作的精髓。重视差异的关键是，承认人们不是以客观存在而是以自己的认识去看待世界。当我们重视分歧，根据相互尊重的精神把不同的观点带到一起，那么大家就能够自由地寻求可能的最佳方案，通常是“第三种方案”。这种方案事实上要比原有的任何一种提议都要好。找到一个第三种方案并不是妥协，而它是代表了能使双方皆赢的答案。&lt;/p&gt;
&lt;h3&gt;Habit 7: Sharpen the Saw 磨亮锯子&lt;/h3&gt;
&lt;p&gt;Habit 7 is the habit that makes all the others possible. Sharpen the Saw means preserving and enhancing the greatest asset you have-you. It means having a balanced, systematic program for self-renewal in the four areas of our lives: physical, mental, emotional-social, and spiritual. Without this discipline, the body becomes weak, the mind mechanical, the emotions raw, the spirit insensitive, and the person selfish.&lt;/p&gt;
&lt;p&gt;This is the single most powerful investment we can ever make in life-investment in ourselves, in the only instrument we have with which to deal with life and to contribute. Yet when people get busy producing, or sawing, they seldom take time to Sharpen the Saw because maintenance seldom pays dramatic, immediate dividends.&lt;/p&gt;
&lt;p&gt;This daily Private Victory is the key to the development of the Seven Habits, and it’s completely within our control. Renewal is the principle and the process that empowers us to move on an upward spiral of growth and change, of continuous improvement.&lt;/p&gt;
&lt;p&gt;习惯七是使所有其它习惯变得可能的习惯。“磨亮锯子”意思是保存并增强你所拥有的最大资产——你。这个意思就是，在人生的四个领域——身体、智力、情感或社会、精神——制定一个平衡的、系统的自我提高计划。没有这么一条，身体将会变得虚弱，心灵将会变得死板，情感将会变得呆滞，精神将会变得迟钝，人将会变得自私。&lt;/p&gt;
&lt;p&gt;这是我们在生活中最能够进行的单一最有效果的投资——对我们自己、对我们所拥有的唯一工具进行投资。有了它，我们便可应对生活、做出贡献。&lt;/p&gt;
&lt;p&gt;这种每天都能有的“个人胜利”是开发七种习惯的关键，而且它是完全能够被我们自己所控制的。自我提高是这样一种法则和过程，它使我们能够象螺旋那样向上成长和变化，经历持续不断的改善。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;来源：网络&lt;/em&gt;&lt;/p&gt;</summary><category term="效率"></category></entry><entry><title>用Tornado实现WebSocket服务器</title><link href="http://hackecho.com/2012/05/websocket-server-with-tornado/" rel="alternate"></link><updated>2012-05-01T13:19:12-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-05-01:2012/05/websocket-server-with-tornado/</id><summary type="html">&lt;p&gt;为什么昨天才发现还有这么好的框架：）简洁，非阻塞。Tornado是一个HTTP服务器，也是一个Web开发框架，最初是由FriendFeed网站的幕后团队开发的，后被Facebook收购开源，现主要服务于Facebook。昨晚用它实现了新的WebSocket服务器，最简单的EchoBack，代码行数骤减，开发效率非常高，稳定性也比PHP略高一筹。&lt;/p&gt;
&lt;p&gt;Tornado是非阻塞的，所以我觉得对于非阻塞式IO (nonblocking IO) 和异步IO (asynchronous IO  AIO)很有必要谈一谈。&lt;/p&gt;
&lt;h3&gt;Non-blocking IO 和 Asynchronous IO&lt;/h3&gt;
&lt;p&gt;我们假设你正在写的应用程序需要去远程服务器上请求数据（比如数据库中的数据，或一些远程API），这步请求假设需要花费5秒钟的时间。在很多Web开发框架中，它们是这样处理的：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;handler_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;answ&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remote_server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; # &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;takes&lt;/span&gt; 5 &lt;span class="n"&gt;seconds&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果你在单线程中运行，那么每5秒钟你只能处理一个请求，在这5秒钟内，其它请求必须等待，也就是说，你的执行效率是0.2个/秒。这太糟糕了！&lt;/p&gt;
&lt;p&gt;当然，每人会这么做，大部分服务器会使用多线程技术来处理这个问题。假设你有20个线程，那么执行效率将能提高到4个/秒。但是众所周知，但是多线程带来非常大的内存占用和调度开销，这种增加线程的方法始终不能解决根本问题。&lt;/p&gt;
&lt;p&gt;如果使用异步IO（AIO），每秒钟处理上千个这样的请求也是轻而易举的。如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;handler_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remote_server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query_async&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response_received&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;response_received&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;answ&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;# &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;called&lt;/span&gt; 5 &lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="n"&gt;later&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其主要思想是在我们等待本次请求的结果时不阻塞，而是当结果出来时通过一个回调函数通知框架。这样，服务器就能同时处理多个请求。&lt;/p&gt;
&lt;h3&gt;WebSocket Of Tornado&lt;/h3&gt;
&lt;p&gt;Tornado自带WebSocket库，这一点要强于其它很多框架，可以让我们专心于业务逻辑而不用纠结于协议本身。Tornado的最新版现在支持最新版的WebSocket协议（&lt;a href="http://tools.ietf.org/html/rfc6455"&gt;RFC6455&lt;/a&gt;），当然也可以支持旧版，需要我们重写WebSocketHandler.allow_draft76()函数。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;websocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebSocketHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;通常我们通过继承这个类来建立一个WebSocket处理类。（以下参考&lt;a href="http://www.tornadoweb.org/documentation/websocket.html"&gt;官方文档&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;事件处理方法：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;WebSocketHandler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Invoked when a new WebSocket is opened.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;WebSocketHandler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Handle incoming messages on the WebSocket. This method must be overridden.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;WebSocketHandler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on_close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Invoked when the WebSocket is closed.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;WebSocketHandler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_subprotocol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subprotocols&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Invoked when a new WebSocket requests specific subprotocols.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出事件处理：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;WebSocketHandler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;binary&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sends the given message to the client of this Web Socket.&lt;/p&gt;
&lt;p&gt;The message may be either a string or a dict (which will be encoded as json). If the binary argument is false, the message will be sent as utf8; in binary mode any byte string is allowed.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;WebSocketHandler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Closes this Web Socket.&lt;/p&gt;
&lt;p&gt;Once the close handshake is successful the socket will be closed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置事件：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;WebSocketHandler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;allow_draft76&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Override to enable support for the older “draft76” protocol.&lt;/p&gt;
&lt;p&gt;The draft76 version of the websocket protocol is disabled by default due to security concerns, but it can be enabled by overriding this method to return True. Connections using the draft76 protocol do not support the binary=True flag to write_message.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;WebSocketHandler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_websocket_scheme&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Return the url scheme used for this request, either “ws” or “wss”.&lt;/p&gt;
&lt;p&gt;This is normally decided by HTTPServer, but applications may wish to override this if they are using an SSL proxy that does not provide the X-Scheme header as understood by HTTPServer. Note that this is only used by the draft76 protocol.&lt;/p&gt;
&lt;p&gt;最后我们以一个简单的例子结尾，这个例子将客户端所有的请求返回给该客户端。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;EchoWebSocket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;websocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebSocketHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;print&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;WebSocket&lt;/span&gt; &lt;span class="n"&gt;opened&lt;/span&gt;&amp;quot;

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;on_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="n"&gt;said&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &amp;quot; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;on_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;print&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;WebSocket&lt;/span&gt; &lt;span class="n"&gt;closed&lt;/span&gt;&amp;quot;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Tornado"></category></entry><entry><title>WebSocket新版Hybi-10协议介绍</title><link href="http://hackecho.com/2012/04/new-hybi-10-protocol-of-websocket/" rel="alternate"></link><updated>2012-04-29T19:03:08-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-04-29:2012/04/new-hybi-10-protocol-of-websocket/</id><summary type="html">&lt;p&gt;不知道问什么，网上的几乎所有关于WebSocket的讲解都是旧版协议，开源的PHP-WebSocket也早不更新了。一开始还以为是服务器程序的原因，后来发现是协议变更了。而且好不容易将握手协议更换为新版后，发现传送的数据都是乱码（见&lt;a href="http://weibo.com/1784705505/ygyi4A0Pj"&gt;这里&lt;/a&gt;），原来数据报文的格式也进行了非常大的变更！&lt;/p&gt;
&lt;p&gt;之前我们曾介绍过基于WebSocket协议的服务器实现，但那篇文章中提到的WebSocket协议标准还是草案7.5、7.6的标准，如今只有Safari支持此版本的协议，Chrome和Firefox最新版都已升级至Hybi-10（&lt;a href="http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-10"&gt;协议地址&lt;/a&gt;）。因此，我们再来介绍一下WebSocket新版协议Hybi-10。这次协议变更非常大，主要集中在握手协议和数据传输的格式上。下面我们来详细介绍一下。&lt;/p&gt;
&lt;h3&gt;握手协议&lt;/h3&gt;
&lt;p&gt;我们先来看一下大致的区别：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;最老的websocket草案标准中是没有安全key，草案7.5、7.6中有两个安全key，而现在的草案10中只有一个安全key，即将7.5、7.6中http头中的"Sec-WebSocket-Key1"与"Sec-WebSocket-Key2"合并为了一个"Sec-WebSocket-Key"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;把http头中Upgrade的值由"WebSocket"修改为了"websocket"；http头中的"-Origin"修改为了"Sec-WebSocket-Origin";&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;增加了http头"Sec-WebSocket-Accept"，用来返回原来草案7.5、7.6服务器返回给客户端的握手验证，原来是以内容的形式返回，现在是放到了http头中；另外服务器返回客户端的验证方式也有变化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;服务器生成验证的方式变化较大，我们来做一介绍。&lt;/p&gt;
&lt;p&gt;旧版：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;GET&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;1&lt;span class="p"&gt;.&lt;/span&gt;1
&lt;span class="n"&gt;Upgrade&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;WebSocket&lt;/span&gt;
&lt;span class="n"&gt;Connection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Upgrade&lt;/span&gt;
&lt;span class="n"&gt;Host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 127&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;1&lt;span class="p"&gt;:&lt;/span&gt;1337
&lt;span class="n"&gt;Origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;127&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;1&lt;span class="p"&gt;:&lt;/span&gt;8000
&lt;span class="n"&gt;Cookie&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xxxx&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;calView&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;dayCurrentDate&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;1314288000000
&lt;span class="n"&gt;Sec&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;WebSocket&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Key1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cV&lt;/span&gt;`&lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; 42#7  ^9&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt; 647  08&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="n"&gt;Sec&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;WebSocket&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Key2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;O8&lt;/span&gt; 415 8&lt;span class="n"&gt;x37R&lt;/span&gt; &lt;span class="n"&gt;A8&lt;/span&gt;   4
&lt;span class="p"&gt;;&lt;/span&gt;&amp;quot;######
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;旧版生成Token的方法如下：&lt;/p&gt;
&lt;p&gt;取出Sec-WebSocket-Key1中的所有数字字符形成一个数值，这里是1427964708，然后除以Key1中的空格数目，得到一个数值，保留该数值整数位，得到数值N1；对Sec-WebSocket-Key2采取同样的算法，得到第二个整数N2；把N1和N2按照Big-Endian字符序列连接起来，然后再与另外一个Key3连接，得到一个原始序列ser_key。Key3是指在握手请求最后，有一个8字节的奇怪的字符串“;”######”，这个就是Key3。然后对ser_key进行一次md5运算得出一个16字节长的digest，这就是老版本协议需要的token，然后将这个token附在握手消息的最后发送回Client，即可完成握手。&lt;/p&gt;
&lt;p&gt;新版：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;GET&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;1&lt;span class="p"&gt;.&lt;/span&gt;1
&lt;span class="n"&gt;Upgrade&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;websocket&lt;/span&gt;
&lt;span class="n"&gt;Connection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Upgrade&lt;/span&gt;
&lt;span class="n"&gt;Host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 127&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;1&lt;span class="p"&gt;:&lt;/span&gt;1337
&lt;span class="n"&gt;Sec&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;WebSocket&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;127&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;1&lt;span class="p"&gt;:&lt;/span&gt;8000
&lt;span class="n"&gt;Sec&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;WebSocket&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;erWJbDVAlYnHvHNulgrW8Q&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
&lt;span class="n"&gt;Sec&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;WebSocket&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 8
&lt;span class="n"&gt;Cookie&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;csrftoken&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xxxxxx&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;sessionid&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xxxxx&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;新版生成Token的方法如下：&lt;/p&gt;
&lt;p&gt;首先服务器将key（长度24）截取出来，如4tAjitqO9So2Wu8lkrsq3w==，用它和自定义的一个字符串（长度36）258EAFA5-E914-47DA-95CA-C5AB0DC85B11连接起来，然后把这一字符串进行SHA-1算法加密，得到长度为20字节的二进制数据，再将这些数据经过Base64编码，最终得到服务端的密钥，也就是ser_key。服务器将ser_key附在返回值Sec-WebSocket-Accept后，至此握手成功。&lt;/p&gt;
&lt;h3&gt;数据报文格式&lt;/h3&gt;
&lt;p&gt;旧版协议比较简单，仅仅是在原始数据前加了个’\x00′，在最后面加了个’\xFF’，即假如Client发送一个字符串’test’，实际上WebSocket Server收到的数据是：’x00test\xFF’，所以只需要剥离掉首尾那两个字符就可以了。&lt;/p&gt;
&lt;p&gt;新版的协议对这部分规定比较复杂，以下是其格式标准：（下图在Firefox可能会出现错乱，请换用Chrome）&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     &lt;span class="o"&gt;+-+-+-+-+-------+-+-------------+-------------------------------+&lt;/span&gt;
     &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;opcode&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Payload&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="n"&gt;Extended&lt;/span&gt; &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt;
     &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;4&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="p"&gt;(&lt;/span&gt;7&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;             &lt;span class="p"&gt;(&lt;/span&gt;16&lt;span class="o"&gt;/&lt;/span&gt;63&lt;span class="p"&gt;)&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt;
     &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;             &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;126&lt;span class="o"&gt;/&lt;/span&gt;127&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;1&lt;span class="o"&gt;|&lt;/span&gt;2&lt;span class="o"&gt;|&lt;/span&gt;3&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;             &lt;span class="o"&gt;|&lt;/span&gt;                               &lt;span class="o"&gt;|&lt;/span&gt;
     &lt;span class="o"&gt;+-+-+-+-+-------+-+-------------+&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
     &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;Extended&lt;/span&gt; &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; &lt;span class="n"&gt;continued&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; 127  &lt;span class="o"&gt;|&lt;/span&gt;
     &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;+-------------------------------+&lt;/span&gt;
     &lt;span class="o"&gt;|&lt;/span&gt;                               &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Masking&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;MASK&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; 1  &lt;span class="o"&gt;|&lt;/span&gt;
     &lt;span class="o"&gt;+-------------------------------+-------------------------------+&lt;/span&gt;
     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Masking&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;continued&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;          &lt;span class="n"&gt;Payload&lt;/span&gt; &lt;span class="n"&gt;Data&lt;/span&gt;         &lt;span class="o"&gt;|&lt;/span&gt;
     &lt;span class="o"&gt;+--------------------------------&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
     &lt;span class="p"&gt;:&lt;/span&gt;                     &lt;span class="n"&gt;Payload&lt;/span&gt; &lt;span class="n"&gt;Data&lt;/span&gt; &lt;span class="n"&gt;continued&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;                &lt;span class="p"&gt;:&lt;/span&gt;
     &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
     &lt;span class="o"&gt;|&lt;/span&gt;                     &lt;span class="n"&gt;Payload&lt;/span&gt; &lt;span class="n"&gt;Data&lt;/span&gt; &lt;span class="n"&gt;continued&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;                &lt;span class="o"&gt;|&lt;/span&gt;
     &lt;span class="o"&gt;+---------------------------------------------------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;FIN：&lt;/strong&gt;1位，用来表明这是一个消息的最后的消息片断，当然第一个消息片断也可能是最后的一个消息片断；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RSV1, RSV2, RSV3:&lt;/strong&gt; 分别都是1位，如果双方之间没有约定自定义协议，那么这几位的值都必须为0,否则必须断掉WebSocket连接；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Opcode:&lt;/strong&gt;4位操作码，定义有效负载数据，如果收到了一个未知的操作码，连接也必须断掉，以下是定义的操作码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;%x0 表示连续消息片断&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;%x1 表示文本消息片断&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;%x2 表未二进制消息片断&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;%x3-7 为将来的非控制消息片断保留的操作码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;%x8 表示连接关闭&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;%x9 表示心跳检查的ping&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;%xA 表示心跳检查的pong&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;%xB-F 为将来的控制消息片断的保留操作码&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Mask:&lt;/strong&gt;1位，定义传输的数据是否有加掩码,如果设置为1,掩码键必须放在masking-key区域，客户端发送给服务端的所有消息，此位的值都是1；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Payload length: &lt;/strong&gt;传输数据的长度，以字节的形式表示：7位、7+16位、或者7+64位。如果这个值以字节表示是0-125这个范围，那这个值就表示传输数据的长度；如果这个值是126，则随后的两个字节表示的是一个16进制无符号数，用来表示传输数据的长度；如果这个值是127,则随后的是8个字节表示的一个64位无符合数，这个数用来表示传输数据的长度。多字节长度的数量是以网络字节的顺序表示。负载数据的长度为扩展数据及应用数据之和，扩展数据的长度可能为0,因而此时负载数据的长度就为应用数据的长度。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Masking-key:&lt;/strong&gt;0或4个字节，客户端发送给服务端的数据，都是通过内嵌的一个32位值作为掩码的；掩码键只有在掩码位设置为1的时候存在。
&lt;strong&gt;Payload data: &lt;/strong&gt; (x+y)位，负载数据为扩展数据及应用数据长度之和。
&lt;strong&gt;Extension data:&lt;/strong&gt;x位，如果客户端与服务端之间没有特殊约定，那么扩展数据的长度始终为0，任何的扩展都必须指定扩展数据的长度，或者长度的计算方式，以及在握手时如何确定正确的握手方式。如果存在扩展数据，则扩展数据就会包括在负载数据的长度之内。
&lt;strong&gt;Application data:&lt;/strong&gt;y位，任意的应用数据，放在扩展数据之后，应用数据的长度=负载数据的长度-扩展数据的长度。&lt;/p&gt;
&lt;p&gt;以下是Python实现的解码和编码，兼容新旧版协议，仅供参考：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;send_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;raw_str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sockets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;new_version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;back_str&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="n"&gt;back_str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;\x81&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;data_length&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;raw_str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;data_length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; 125&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;back_str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_length&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;back_str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;126&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;back_str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; 8&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;back_str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; 0&lt;span class="n"&gt;xFF&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="n"&gt;back_str&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;&amp;quot;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;back_str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;raw_str&lt;/span&gt;
        &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transport&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;back_str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;back_str&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;\x00%s\xFF&amp;#39;&lt;/span&gt; &lt;span class="c"&gt;% (raw_str)&lt;/span&gt;
        &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transport&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;back_str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;parse_recv_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;raw_str&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sockets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;new_version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;code_length&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;1&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; 127

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;code_length&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; 126&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;masks&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;4&lt;span class="p"&gt;:&lt;/span&gt;8&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;8&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="n"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;code_length&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; 127&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;masks&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;10&lt;span class="p"&gt;:&lt;/span&gt;14&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;14&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;masks&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;2&lt;span class="p"&gt;:&lt;/span&gt;6&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;6&lt;span class="p"&gt;:]&lt;/span&gt;

        &lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 0
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;raw_str&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; ^ &lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;masks&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="c"&gt;%4]))&lt;/span&gt;
            &lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; 1
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;raw_str&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;xFF&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;)[&lt;/span&gt;0&lt;span class="p"&gt;][&lt;/span&gt;1&lt;span class="p"&gt;:]&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;raw_str&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="websocket"></category></entry><entry><title>24点游戏（速算24）算法</title><link href="http://hackecho.com/2012/04/algorithm-of-24-game/" rel="alternate"></link><updated>2012-04-23T19:06:49-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-04-23:2012/04/algorithm-of-24-game/</id><summary type="html">&lt;p&gt;24点游戏规则：任取1－13之间的4个数字，用＋－＊／（）连结成算式，使得式子的计算结果为24。很多人玩的都是用扑克牌玩的那种，两人各出2张牌，谁先算出来谁赢，赢家收回已经算过的4张牌。最后看谁手里的牌多。&lt;/p&gt;
&lt;p&gt;解决此问题一般使用&lt;strong&gt;穷举法&lt;/strong&gt;，即穷举4个整数和运算符的所有可能的表达式，然后对表达式求值。&lt;/p&gt;
&lt;p&gt;注：以下文字中“运算”两字都表示对＋－＊／分别计算。&lt;/p&gt;
&lt;p&gt;思路一：&lt;/p&gt;
&lt;p&gt;将前两个作为一组、后两个数作为一组，分别计算出各组的结果，再对获得的两个组结果进行运算。由于是排列，分前后两组进行运算就可满足所有可能的组合。&lt;/p&gt;
&lt;p&gt;思路二（递归）：&lt;/p&gt;
&lt;p&gt;把多元运算转化为两元运算。先从四个数中取出两个数进行运算，然后把运算结果和第三个数进行运算，再把结果与第四个数进行运算。在求表达式的过程中，最难处理的就是对括号的处理，而这种思路很好的避免了对括号的处理。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;(1) 将4个整数放入数组中，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(2) 在数组中取两个数字的排列，共有 P(4,2) 种排列。对每一个排列，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(2.1) 对 + - * / 每一个运算符，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(2.1.1) 根据此排列的两个数字和运算符，计算结果，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(2.1.2) 改表数组：将此排列的两个数字从数组中去除掉，将 2.1.1 计算的结果放入数组中，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(2.1.3) 对新的数组，重复步骤 2，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(2.1.4) 恢复数组：将此排列的两个数字加入数组中，将 2.1.1 计算的结果从数组中去除掉。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然还有很多很多其它的思路，效率也许更高。等待大家自己去探索。&lt;/p&gt;
&lt;p&gt;这里贴出一个Python实现的代码，请读者自己研究：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;需要拷贝无行号代码、查看运行结果的读者请点击：&lt;a href="http://codepad.org/DpgJbDfG"&gt;http://codepad.org/DpgJbDfG&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;funs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;+(&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;1&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;-(&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;1&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;(&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;1&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;)-&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
        &lt;span class="n"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;*(&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;1&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;0 &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ZZZ&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/(&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;1&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;0 &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ZZZ&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;(&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;1&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;)/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
 &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;1&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;])}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;funs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;1&lt;span class="p"&gt;:]).&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;3&lt;span class="p"&gt;,&lt;/span&gt;3&lt;span class="p"&gt;,&lt;/span&gt;8&lt;span class="p"&gt;,&lt;/span&gt;8&lt;span class="p"&gt;])).&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;21&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考资料：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://eidolon.iteye.com/blog/312476"&gt;《趣味编程：24点算法实现》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.csdn.net/lizhongkan/article/details/4746289"&gt;《关于24点算法的思想和代码实现》&lt;/a&gt;&lt;/p&gt;</summary><category term="24点"></category><category term="算法"></category><category term="速算24"></category></entry><entry><title>PHP中的Socket编程</title><link href="http://hackecho.com/2012/04/socket-programming-in-php/" rel="alternate"></link><updated>2012-04-17T00:46:21-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-04-17:2012/04/socket-programming-in-php/</id><summary type="html">&lt;p&gt;关于PHP socket的资料网上着实不多，或者讲的都不是很全面。为了更好地用PHP来处理socket，天堂皓月博客特地来简单总结一下其用法，尽量会做到深入浅出：）&lt;/p&gt;
&lt;h3&gt;文章结构：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Socket基础知识&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编写服务器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编写客户端&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;总结&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过这三部分你将会体验到Socket的魅力，并了解怎样去编写一个服务器，怎样通过Sockets连接到服务器，服务器怎样处理信息并将信息发送给相应的客户端。&lt;/p&gt;
&lt;p&gt;不管你信不信，只要你用过PHP，就一定用过Sockets。HTTP服务器就是一个Socket服务器，浏览器就是客户端，也就是最简单的C/S模式。&lt;/p&gt;
&lt;h3&gt;Socket基础知识&lt;/h3&gt;
&lt;p&gt;我们可以把Socket当做是一种数据结构，客户端和服务器间通过这种数据结构来交换数据。服务器开始监听连接，当客户端想要连接服务器时，会通过服务器监听的端口开启一个会话，服务器收到客户端的请求后，建立连接完毕，然后继续监听下一次连接。&lt;/p&gt;
&lt;p&gt;要产生一个Socket，你我们需要三个变量：一个协议（protocol）、一个socket类型（socket type）和一个公共协议类型（common protocol type）。下面将会详细介绍各个部分的具体内容。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;协议&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AF_INET：这是大多数用来产生socket的协议，使用TCP或UDP来传输，用在IPv4的地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AF_INET6：与上面类似，不过是来用在IPv6的地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AF_UNIX：本地协议，使用在Unix和Linux系统上，它很少使用，一般都是当客户端和服务器在同一台及其上的时候使用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Socket类型&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SOCK_STREAM：这个协议是按照顺序的、可靠的、数据完整的基于字节流的连接。这是一个使用最多的socket类型，这个socket是使用TCP来进行传输。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SOCK_DGRAM：这个协议是无连接的、固定长度的传输调用。该协议是不可靠的，使用UDP来进行它的连接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SOCK_SEQPACKET：这个协议是双线路的、可靠的连接，发送固定长度的数据包进行传输。必须把这个包完整的接受才能进行读取。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SOCK_RAW：这个socket类型提供单一的网络访问，这个socket类型使用ICMP公共协议。（ping、traceroute使用该协议）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SOCK_RDM：这个类型是很少使用的，在大部分的操作系统上没有实现，它是提供给数据链路层使用，不保证数据包的顺序&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;公共协议&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ICMP：互联网控制消息协议，主要使用在网关和主机上，用来检查网络状况和报告错误信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UDP：用户数据报文协议，它是一个无连接，不可靠的传输协议&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TCP：传输控制协议，这是一个使用最多的可靠的公共协议，它能保证数据包能够到达接受者那儿，如果在传输过程中发生错误，那么它将重新发送出错数据包。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在PHP中我们使用socket_create()函数来产生一个Socket。socket_create()函数运行成功返回一个包含Socket的资源类型，如果没有成功则返回false。&lt;/p&gt;
&lt;p&gt;1 resource socket_create(int protocol, int socketType, int commonProtocol);&lt;/p&gt;
&lt;p&gt;PHP提供了很多操作Socket的函数。现在我们来看一个例子，了解PHP是如何产生、接受和监听一个socket。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$commonProtocol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getprotobyname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;tcp&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;socket_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$commonProtocol&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;socket_bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="nx"&gt;localhost&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1337&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;socket_listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// More socket functionality to come&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我们来详细解释一下上面这个程序（基于行号）：&lt;/p&gt;
&lt;p&gt;第二行：使用公共协议名字来获取一个协议类型。在这里使用的是TCP公共协议，如果你想使用UDP或者ICMP协议，就应该把getprotobyname()函数的参数改为“udp”或“icmp”。我们也可以不使用getprotobyname()函数而是直接指定SOL_TCP或SOL_UDP。&lt;/p&gt;
&lt;p&gt;第三行：产生一个Socket并且返回一个Socket资源的实例。&lt;/p&gt;
&lt;p&gt;第四行：有了一个Socket资源的实例以后，就必须把Socket绑定到一个IP地址和某一端口上。在这里绑定socket到本地计算机（127.0.0.1）的1337端口。&lt;/p&gt;
&lt;p&gt;第五行：然后就需要监听所有进来的socket连接。&lt;/p&gt;
&lt;p&gt;这时，我们就需要了解一下PHP中Socket函数的使用方法了。官方手册的介绍非常不错（&lt;a href="http://www.php.net/manual/en/ref.sockets.php"&gt;猛戳这个链接&lt;/a&gt;），下面只是简单列举几个最常用的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;socket_accept() 接受一个Socket连接&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_bind() 把socket绑定在一个IP地址和端口上&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_close() 关闭一个socket资源&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_connect() 开始一个socket连接&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_create_listen() 在指定端口打开一个socket监听&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_create() 产生一个socket，相当于产生一个socket的数据结构&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_get_option() 获取socket选项&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_getpeername() 获取远程主机的ip地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_getsockname() 获取本地socket的ip地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_listen() 监听由指定socket的所有连接&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_read() 读取指定长度的数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_readv() 读取从分散/聚合数组过来的数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_recv() 从socket里结束数据到缓存&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_recvfrom() 接受数据从指定的socket，如果没有指定则默认当前socket&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_recvmsg() 从iovec里接受消息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_select() 多路选择&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_send() 这个函数发送数据到已连接的socket&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_sendmsg() 发送消息到socket&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_sendto() 发送消息到指定地址的socket&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_set_block() 在socket里设置为块模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_set_nonblock() socket里设置为非块模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_set_option() 设置socket选项&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_shutdown() 这个函数允许你关闭读、写、或者指定的socket&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;socket_write() 写数据到socket缓存&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于PHP Socket的基础知识就介绍到这里，还有不明白的可查看官方手册。下面介绍编写一个Socket服务器。&lt;/p&gt;
&lt;h3&gt;编写服务器&lt;/h3&gt;
&lt;p&gt;现在我们把第一个例子完善，使其能够监听一个指定的Socket并处理用户的连接。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$commonProtocol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getprotobyname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tcp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;socket_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$commonProtocol&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;socket_bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1337&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;socket_listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Accept any incoming connections to the server&lt;/span&gt;
&lt;span class="nv"&gt;$connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;socket_accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$connection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;  &lt;/span&gt; &lt;span class="nb"&gt;socket_write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;You have connected to the socket...&lt;/span&gt;&lt;span class="se"&gt;\n\r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意这不是一个Web页面，如果你尝试使用Web浏览器来运行这个脚本，那么很有可能它会超过PHP运行30秒的限时。当然你可以使用下面的代码来设置一个无限的运行时间&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_time_limit(0);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但最好的办法还是直接使用命令提示符来运行：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;php server.php&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但截至目前，上面的服务器端有&lt;strong&gt;三个问题&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;它不能接受多个连接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;它只完成唯一的一个命令。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;你不能通过Web浏览器连接这个服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在上一个代码的基础上再改进，使用下面的代码来做新服务器端：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// Set up our socket &lt;/span&gt;
&lt;span class="nv"&gt;$commonProtocol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getprotobyname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tcp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;socket_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$commonProtocol&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;socket_bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1337&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;socket_listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Initialize the buffer &lt;/span&gt;
&lt;span class="nv"&gt;$buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NO DATA&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Accept any connections coming in on this socket&lt;/span&gt;
    &lt;span class="nv"&gt;$connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;socket_accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Socket connected&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// Check to see if there is anything in the buffer&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$buffer&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Something is in the buffer...sending data...&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;socket_write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$buffer&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Wrote to socket&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;No Data in the buffer&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// Get the input&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;socket_read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;PHP_NORMAL_READ&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;socket_write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Information Received&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Buffer: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$buffer&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nb"&gt;socket_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$connection&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Closed the socket&lt;/span&gt;&lt;span class="se"&gt;\r\n\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这段程序初始化一个socket并且打开一个缓冲区收发数据。然后服务器开始等待连接，此时一旦产生一个连接，服务器将打印“Socket connected”。然后服务器检查缓冲区，如果缓冲区里有数据，服务器就把这些数据发送到连接的计算机客户端。然后服务器等待接收信息，并把接收到的信息保存，然后让连接的客户端知道信息接收成功后，服务器将关闭连接。连接关闭后，服务器将开始下一次处理连接的循环。&lt;/p&gt;
&lt;h3&gt;编写客户端&lt;/h3&gt;
&lt;p&gt;解决上面提到的第二个问题还是比较容易的。我们需要一个连接到服务器的页面来处理数据并发送到服务器。&lt;/p&gt;
&lt;p&gt;我们来看下面的代码：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// Create the socket and connect &lt;/span&gt;
&lt;span class="nv"&gt;$socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;socket_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SOL_TCP&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;socket_connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="nx"&gt;localhost&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1337&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;socket_read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;PHP_NORMAL_READ&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$buffer&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;NO&lt;/span&gt; &lt;span class="nx"&gt;DATA&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;NO&lt;/span&gt; &lt;span class="nx"&gt;DATA&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Do something with the data in the buffer &lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Buffer&lt;/span&gt; &lt;span class="nx"&gt;Data&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$buffer&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Writing&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;Socket&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Write some test data to our socket&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;socket_write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;SOME&lt;/span&gt; &lt;span class="nx"&gt;DATA\r\n&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Write&lt;/span&gt; &lt;span class="nx"&gt;failed&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Read any response from the socket&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;socket_read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;PHP_NORMAL_READ&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Data&lt;/span&gt; &lt;span class="nx"&gt;sent&lt;/span&gt; &lt;span class="nx"&gt;was&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SOME&lt;/span&gt; &lt;span class="nx"&gt;DATA&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;br&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Response&lt;/span&gt; &lt;span class="nx"&gt;was&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$buffer&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Done&lt;/span&gt; &lt;span class="nx"&gt;Reading&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;Socket&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这个例子的客户端连接到服务器后，客户端读取数据。如果这是客户端第一次连接服务器，服务器将发送“NO DATA”给客户端。如果客户端收到“NO DATA”说明其连接成功，客户端发送它的数据到服务器并等待服务器响应。一旦客户端接收到服务器的响应，客户端将把响应内容输出到屏幕上。&lt;/p&gt;
&lt;h3&gt;总结&lt;/h3&gt;
&lt;p&gt;如果还想深入了解PHP Socket，建议阅读更多的第三方资料或到PHP官方查询官方文档。今天就介绍到这里，如果有错误欢迎指正。&lt;/p&gt;
&lt;p&gt;参考资料：《PHP Game Programming》&lt;/p&gt;</summary><category term="PHP"></category><category term="Socket"></category></entry><entry><title>趣味算法面试题：男女比例问题</title><link href="http://hackecho.com/2012/04/funny-algorithm-ratio-of-male-and-femal/" rel="alternate"></link><updated>2012-04-16T19:36:47-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-04-16:2012/04/funny-algorithm-ratio-of-male-and-femal/</id><summary type="html">&lt;p&gt;阿里巴巴的一道面试题：据说澳大利亚的父母喜欢女孩，假设在澳大利亚的家庭中，如果生出来的第一个女孩，就不再生了；如果是男孩就继续生，直到生到第一个女孩为止。问若干年后，澳大利亚的男女的比例是多少？&lt;/p&gt;
&lt;p&gt;本能地反应男女比例还应该是1：1，但到底是不是呢，我们来用程序验证一下。&lt;/p&gt;
&lt;p&gt;思路：如果一个家庭生的是女孩，则继续让下一个家庭生；如果是男孩，则递归调用自己，直到结果为女孩。生男生女将由随机产生的0和1来决定。&lt;/p&gt;
&lt;p&gt;我们先看运行结果，程序代码附在文后。如果你有兴趣，可以自己实现一下。&lt;/p&gt;
&lt;h3&gt;编译环境：&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.1.00)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;运行结果：&lt;/h3&gt;
&lt;p&gt;&lt;a href="/static/images/2012/04/skitched-20120416-192726.png"&gt;&lt;img alt="" src="/static/images/2012/04/skitched-20120416-192726.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;结果很有意思，比例虽然接近于1：1，但貌似男孩总数小于女孩总数的概率要大一些。&lt;/p&gt;
&lt;h3&gt;程序代码：&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#include &amp;lt;stdio.h&amp;gt;  &lt;/span&gt;
&lt;span class="c"&gt;#include &amp;lt;stdlib.h&amp;gt;  &lt;/span&gt;
&lt;span class="c"&gt;#define MAN    1  //男孩  &lt;/span&gt;
&lt;span class="c"&gt;#define WOMAN  0  //女孩  &lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;numOfMan&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="o"&gt;//&lt;/span&gt;男孩个数  
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;numOfWoman&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="o"&gt;//&lt;/span&gt;女孩个数  

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;PrintResult&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Man&amp;#39;s number is %d, woman&amp;#39;s number is %d.\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numOfMan&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numOfWoman&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;float&lt;/span&gt; &lt;span class="n"&gt;fResult&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;numOfMan&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;numOfWoman&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Man / Woman is [%f]\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fResult&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;OneFamilyGetChild&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iChildType&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="c"&gt;%2);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MAN&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;iChildType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt;如果是男孩，则递归调用，再生一个小孩，直到生出一个女孩为止  
        &lt;span class="n"&gt;numOfMan&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;OneFamilyGetChild&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WOMAN&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;iChildType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;numOfWoman&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;child type is error!\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;0&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;StatisticsOfAllFamily&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iFamilyCount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Total family count is %d.\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iFamilyCount&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;iFamilyCount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;OneFamilyGetChild&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;PrintResult&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;srand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;StatisticsOfAllFamily&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;1000000&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; 1&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考资料：现代简明魔法&lt;/p&gt;</summary><category term="算法"></category><category term="面试题"></category></entry><entry><title>HTML5 之 WebSocket 通信协议介绍</title><link href="http://hackecho.com/2012/04/html5-websocket-communication-protocol/" rel="alternate"></link><updated>2012-04-15T01:21:50-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-04-15:2012/04/html5-websocket-communication-protocol/</id><summary type="html">&lt;p&gt;&lt;strong&gt;更新：Chrome和Firefox的WebSocket协议已更新到最新版，不再支持旧版协议。关于新版协议的介绍请看&lt;a href="http://www.hackecho.com/archives/1104.html"&gt;《WebSocket新版Hybi-10协议介绍》&lt;/a&gt;，本篇文章中的握手协议和数据报文已不再适用。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最近参与一个有关HTML5的比赛，要用到WebSocket，经过一些实验后简单总结一下WebSocket的基础用法。&lt;/p&gt;
&lt;p&gt;WebSocket是HTML5的一种新的协议，它是实现了浏览器与服务器的双向通讯。&lt;/p&gt;
&lt;p&gt;在 WebSocket API 中，浏览器和服务器只需要要做一个握手的动作，然后，浏览器和服务器之间就形成了一条快速通道。两者之间就直接可以数据互相传送。（这两小段介绍摘自维基百科）&lt;/p&gt;
&lt;h3&gt;WebSocket协议&lt;/h3&gt;
&lt;p&gt;WebSocket的协议非常简单，这也是其最大的优点之一。&lt;/p&gt;
&lt;p&gt;在客户端（如浏览器），可以利用JavaScript直接new WebSocket来实例化一个WebSocket对象，其参数格式为ws://yourdomain:port/path。WebSocket会根据这段字符串，发送Header到指定服务器端口，其数据格式大概如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;GET&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;1&lt;span class="p"&gt;.&lt;/span&gt;1
&lt;span class="n"&gt;Origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;hackecho&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; 
&lt;span class="n"&gt;Cookie&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;__utma&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;99&lt;span class="n"&gt;as&lt;/span&gt;
&lt;span class="n"&gt;Connection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Upgrade&lt;/span&gt;
&lt;span class="n"&gt;Host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hackecho&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="n"&gt;Sec&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;WebSocket&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;uRovscZjNol&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;umbTt5uKmw&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
&lt;span class="n"&gt;Upgrade&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;websocket&lt;/span&gt; &lt;span class="n"&gt;Sec&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;WebSocket&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 13
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;此时服务端应该返回的信息是：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;1&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;WebSocket&lt;/span&gt; &lt;span class="n"&gt;Protocol&lt;/span&gt; &lt;span class="n"&gt;Handshake&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Fri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;Feb&lt;/span&gt;     17&lt;span class="p"&gt;:&lt;/span&gt;38&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;GMT&lt;/span&gt;
&lt;span class="n"&gt;Connection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Upgrade&lt;/span&gt;
&lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;HackEcho&lt;/span&gt; &lt;span class="n"&gt;Server&lt;/span&gt;
&lt;span class="n"&gt;Upgrade&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;WebSocket&lt;/span&gt;
&lt;span class="n"&gt;Access&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Control&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Allow&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;hackecho&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; 
&lt;span class="n"&gt;Access&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Control&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Allow&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Credentials&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;Sec&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;WebSocket&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Accept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rLHCkw&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;SKsO9GAH&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ZSFhBATDKrU&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;
&lt;span class="n"&gt;Access&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Control&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Allow&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一旦握手成功建立连接，数据便可以通过WebSocket在服务器和客户端之间进行传送了。&lt;/p&gt;
&lt;h3&gt;WebSocket事件&lt;/h3&gt;
&lt;p&gt;&lt;a href="/static/images/2012/04/events-500x250.jpg"&gt;&lt;img alt="" src="/static/images/2012/04/events-500x250.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;客户端在握手成功后，会触发WebSocket对象的onopen事件，告诉客户端连接已经成功建立了。&lt;/p&gt;
&lt;p&gt;客户端的WebSocket对象一共绑定了四个事件：&lt;/p&gt;
&lt;p&gt;1、onopen：连接建立时触发；&lt;/p&gt;
&lt;p&gt;2、onmessage：收到服务端消息时触发；&lt;/p&gt;
&lt;p&gt;3、onerror：连接出错时触发；&lt;/p&gt;
&lt;p&gt;4、onclose：连接关闭时触发；&lt;/p&gt;
&lt;h3&gt;客户端连接的建立&lt;/h3&gt;
&lt;p&gt;这里提供一个例子来更好地理解客户端是怎样建立WebSocket连接的。例子来自于文末参考资料的第一篇文章。&lt;/p&gt;
&lt;p&gt;将下列代码保存为一个html文件，如websocket.html，在浏览器中打开。页面会自动向服务器（由http://www.websocket.org提供）连接，发送一个消息并将返回的结果显示出来，最后断开连接。&lt;/p&gt;
&lt;p&gt;通过其中的JavaScript代码即可看出用JS在本地建立连接的所有过程，比较简单，不再赘述，请大家看代码。&lt;/p&gt;
&lt;p&gt;（不知怎么回事，如果去掉行号的代码缩进会乱掉，所以只能带上行号... 网上有很多去行号方法，大家可以Google之。）&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;
    WebSocket Test
&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;language=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    var wsUri = &amp;quot;ws://echo.websocket.org/&amp;quot;;
    var output;
    function init() {
        output = document.getElementById(&amp;quot;output&amp;quot;);
        testWebSocket();
    }
    function testWebSocket() {
        websocket = new WebSocket(wsUri);
        websocket.onopen = function(evt) {
            onOpen(evt)
        };
        websocket.onclose = function(evt) {
            onClose(evt)
        };
        websocket.onmessage = function(evt) {
            onMessage(evt)
        };
        websocket.onerror = function(evt) {
            onError(evt)
        };
    }
    function onOpen(evt) {
        writeToScreen(&amp;quot;CONNECTED&amp;quot;);
        doSend(&amp;quot;WebSocket rocks&amp;quot;);
    }
    function onClose(evt) {
        writeToScreen(&amp;quot;DISCONNECTED&amp;quot;);
    }
    function onMessage(evt) {
        writeToScreen(&amp;#39;&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: blue;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;RESPONSE: &amp;#39; + evt.data + &amp;#39;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&amp;#39;);
        websocket.close();
    }
    function onError(evt) {
        writeToScreen(&amp;#39;&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;color: red;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;ERROR:&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; &amp;#39; + evt.data);
    }
    function doSend(message) {
        writeToScreen(&amp;quot;SENT: &amp;quot; + message);
        websocket.send(message);
    }
    function writeToScreen(message) {
        var pre = document.createElement(&amp;quot;p&amp;quot;);
        pre.style.wordWrap = &amp;quot;break-word&amp;quot;;
        pre.innerHTML = message;
        output.appendChild(pre);
    }
    window.addEventListener(&amp;quot;load&amp;quot;, init, false);
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;
    WebSocket Test
&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;output&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;服务器端的实现&lt;/h3&gt;
&lt;p&gt;在将WebSocket应用到实际中时，我们往往需要自己的服务器来响应各种请求以实现更加丰富的功能。从前面的协议介绍部分来看，实现一个WebSocket服务器端并不难。但本着“不重复制造轮子”的原则，我们将基于开源的&lt;a href="http://code.google.com/p/phpwebsocket/"&gt;PHPWebSocket Project&lt;/a&gt;来二次开发自己的服务器。PHPWebSocket Project中已实现握手协议部分，其它的功能将可以由我们自由添加。这里只讨论握手协议部分和一个简单的响应函数。&lt;/p&gt;
&lt;p&gt;将下列代码保存为server.php文件：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;error_reporting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;E_ALL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;set_time_limit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;ob_implicit_flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$master&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;12345&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$sockets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$master&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="err"&gt;  &lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$debug&lt;/span&gt;&lt;span class="err"&gt;  &lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$changed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$sockets&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nb"&gt;socket_select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$changed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$write&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$except&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$changed&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="err"&gt;       &lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nv"&gt;$master&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="err"&gt;           &lt;/span&gt; &lt;span class="nv"&gt;$client&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;socket_accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$master&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;           &lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$client&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;socket_accept() failed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;           &lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$client&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;       &lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;       &lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;           &lt;/span&gt; &lt;span class="nv"&gt;$bytes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;socket_recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2048&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;           &lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$bytes&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nx"&gt;disconnect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;           &lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;               &lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getuserbysocket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;               &lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;handshake&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nx"&gt;dohandshake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;               &lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;           &lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;       &lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//---------------------------------------------------------------&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nx"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$action&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lzy &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$action&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nx"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nb"&gt;socket_write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$port&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$master&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;socket_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SOL_TCP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;    &lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;socket_create() failed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nb"&gt;socket_set_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SOL_SOCKET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SO_REUSEADDR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;socket_option() failed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nb"&gt;socket_bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;                   &lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;socket_bind() failed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nb"&gt;socket_listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;                               &lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;socket_listen() failed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Server Started : &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y-m-d H:i:s&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Master socket  : &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$master&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Listening on   : &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$address&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; port &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$port&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$master&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$sockets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;uniqid&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nb"&gt;array_push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nb"&gt;array_push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$sockets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; CONNECTED!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;disconnect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$sockets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$found&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;$n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="err"&gt;       &lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nv"&gt;$found&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;is_null&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$found&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt; &lt;span class="nb"&gt;array_splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$found&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;array_search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$sockets&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nb"&gt;socket_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; DISCONNECTED!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$index&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nb"&gt;array_splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$sockets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;dohandshake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$buffer&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;Requesting handshake...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$resource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$origin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$strkey1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$strkey2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getheaders&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Handshaking...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/[^\d]*/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$replacement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$numkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;preg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$replacement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$strkey1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$numkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;preg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$replacement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$strkey2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/[^ ]*/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$replacement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$spaces&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;preg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$replacement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$strkey1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$spaces&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;preg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$replacement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$strkey2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$spaces&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;$spaces&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;$numkey&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nv"&gt;$spaces&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;$numkey&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nv"&gt;$spaces&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;       &lt;/span&gt; &lt;span class="nb"&gt;socket_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;       &lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;failed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;       &lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;hash_init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;md5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nb"&gt;hash_update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;N&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$numkey1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$spaces1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nb"&gt;hash_update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;N&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$numkey2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$spaces2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nb"&gt;hash_update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$hash_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;hash_final&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$upgrade&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;HTTP/1.WebSocket Protocol Handshake&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Upgrade: WebSocket&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Connection: Upgrade&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Sec-WebSocket-Origin: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$origin&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Sec-WebSocket-Location: ws://&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$host&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$resource&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$hash_data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nb"&gt;socket_write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$upgrade&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$upgrade&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;handshake&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$upgrade&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Done handshaking...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;getheaders&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$h&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$o&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;preg_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/GET (.*) HTTP/&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;  &lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$match&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt; &lt;span class="nv"&gt;$r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$match&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;preg_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/Host: (.*)&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;/&amp;quot;&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$match&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt; &lt;span class="nv"&gt;$h&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$match&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;preg_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/Origin: (.*)&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$match&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt; &lt;span class="nv"&gt;$o&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$match&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;preg_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/Sec-WebSocket-Key2: (.*)&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$match&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt; &lt;span class="nv"&gt;$key2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$match&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;preg_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/Sec-WebSocket-Key1: (.*)&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$match&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt; &lt;span class="nv"&gt;$key1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$match&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;preg_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;(.*?)&lt;/span&gt;&lt;span class="se"&gt;\$&lt;/span&gt;&lt;span class="s2"&gt;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$match&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$match&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$o&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$key1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$key2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;getuserbysocket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$users&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nv"&gt;$found&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$users&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="err"&gt;       &lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="nv"&gt;$found&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$found&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;function&lt;/span&gt;&lt;span class="err"&gt;    &lt;/span&gt; &lt;span class="nx"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;function&lt;/span&gt;&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="nx"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;function&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt; &lt;span class="nx"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;console&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$debug&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$debug&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$msg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;$socket&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;$handshake&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行php server.php命令启动服务器，这时服务器启动。&lt;/p&gt;
&lt;p&gt;然后我们将下列代码保存为client.html文件：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;WebSocket&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
html,body{font:normal 0.9em arial,helvetica;}
#log {width:440px; height:200px; border:1px solid #7F9DB9; overflow:auto;}
#msg {width:330px;}
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
var socket;

function init(){
    var host = &amp;quot;ws://localhost:12345/websocket/server.php&amp;quot;;
    try{
        socket = new WebSocket(host);
        log(&amp;#39;WebSocket - status &amp;#39;+socket.readyState);
        socket.onopen    = function(msg){ log(&amp;quot;Welcome - status &amp;quot;+this.readyState); };
        socket.onmessage = function(msg){ log(&amp;quot;Received: &amp;quot;+msg.data); };
        socket.onclose   = function(msg){ log(&amp;quot;Disconnected - status &amp;quot;+this.readyState); };
    }
    catch(ex){ log(ex); }
    $(&amp;quot;msg&amp;quot;).focus();
}

function send(){
    var txt,msg;
    txt = $(&amp;quot;msg&amp;quot;);
    msg = txt.value;
    if(!msg){ alert(&amp;quot;Message can not be empty&amp;quot;); return; }
    txt.value=&amp;quot;&amp;quot;;
    txt.focus();
    try{ socket.send(msg); log(&amp;#39;Sent: &amp;#39;+msg); } catch(ex){ log(ex); }
}
function quit(){
    log(&amp;quot;Goodbye!&amp;quot;);
    socket.close();
    socket=null;
}

// Utilities
function $(id){ return document.getElementById(id); }
function log(msg){ $(&amp;quot;log&amp;quot;).innerHTML+=&amp;quot;&lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;&amp;quot;+msg; }
function onkey(event){ if(event.keyCode==13){ send(); } }
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&lt;/span&gt; &lt;span class="na"&gt;onload=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;init()&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;WebSocket v2.00&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;log&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;msg&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;textbox&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onkeypress=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;onkey(event)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;send()&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Send&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;quit()&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Quit&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;Commands: hello, hi, name, age, date, time, thanks, bye&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这时在浏览器中打开client.html，即可实现一个简单的通过WebSocket连接到本地服务器然后发送消息、响应消息的应用。&lt;/p&gt;
&lt;p&gt;有兴趣的读者可以继续阅读以下参考资料：&lt;/p&gt;
&lt;h3&gt;参考资料：&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.websocket.org/echo.html"&gt;《WebSocket Echo Test》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.zendstudio.net/archives/websocket-protocol/"&gt;《websocket 通信协议》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.bingo929.com/html5-websockets.html"&gt;《HTML5 WebSockets 基础使用教程》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://zh.wikipedia.org/zh-cn/WebSocket"&gt;《WikiPedia WebSocket》&lt;/a&gt;&lt;/p&gt;</summary><category term="WebSocket"></category><category term="HTML5"></category></entry><entry><title>利用.htaccess简单实现的10个功能</title><link href="http://hackecho.com/2012/04/ten-extra-functions-with-htaccess-file/" rel="alternate"></link><updated>2012-04-12T21:12:48-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-04-12:2012/04/ten-extra-functions-with-htaccess-file/</id><summary type="html">&lt;p&gt;简单来说，htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。&lt;/p&gt;
&lt;p&gt;通过htaccess文件，可以帮我们实现一些实用的功能，这里简单列举了10个，如果有更好的欢迎补充。（顺便推荐一个&lt;a href="http://www.wangqu.org/htaccess/"&gt;htaccess文件在线生成器&lt;/a&gt;）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;防盗链&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;天堂皓月的几篇文章被人整篇复制了过去，图片地址都没变。不过数量不多，还可以承受。但对于流量较大的网站来说，图片盗链可是流量灾难。可以通过以下配置来防止别人盗用你的图片：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;RewriteBase&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;RewriteCond&lt;/span&gt; &lt;span class="c"&gt;%{HTTP_REFERER} !^$&lt;/span&gt;
&lt;span class="n"&gt;RewriteCond&lt;/span&gt; &lt;span class="c"&gt;%{HTTP_REFERER} !^http://(www.)?yoursite.com/.*$ [NC]&lt;/span&gt;
&lt;span class="n"&gt;RewriteRule&lt;/span&gt; &lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="n"&gt;gif&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;jpg&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;swf&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;flv&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;$ &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;feed&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;302&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;防止目录浏览&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有时候目录浏览是有用的，但大部分情况会有安全问题。为了让网站更安全，可以通过如下配置来禁用这个功能：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Options&lt;/span&gt; &lt;span class="n"&gt;All&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Indexes&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;301永久重定向&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;博主前段时间将uutroy.com更换为hackecho.com时，就将原域名做了301永久重定向，不但流量没有丢失，搜索引擎也迅速更新了收录。或者当要更改网站URL结构的时候，做301重定向也是一个好方法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Redirect&lt;/span&gt; 301 &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yoursite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yoursite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;archives&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;article&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;个性化 404 错误页面&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;404页面是什么就不用解释了吧，通过下面的简单配置可以自定义404页面：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;ErrorDocument&lt;/span&gt; 404 &lt;span class="o"&gt;/&lt;/span&gt;404&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;设置目录的默认页面&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;假如需要为不同的目录设置不同的默认页面，可以很容易的通过 .htaccess 实现：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;DirectoryIndex&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;基于referer来限制网站访问&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当你想屏蔽一些网站的访问时（比如垃圾评论网站），可以这样配置：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;IfModule&lt;/span&gt; &lt;span class="err"&gt;mod_rewrite.c&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
RewriteEngine on  RewriteCond %{HTTP_REFERER} spamteam.com [NC,OR]
RewriteCond %{HTTP_REFERER} trollteam.com [NC,OR]
RewriteRule .* – [F]
&lt;span class="nt"&gt;&amp;lt;/ifModule&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;限制PHP上传文件大小&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第一个是设置最大的上传文件大小，第二个是设置最大的POST请求大小，第三个PHP脚本最长的执行时间，最后一个是脚本解析上传文件的最长时间：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;php_value&lt;/span&gt; &lt;span class="n"&gt;upload_max_filesize&lt;/span&gt; 20&lt;span class="n"&gt;M&lt;/span&gt;
&lt;span class="n"&gt;php_value&lt;/span&gt; &lt;span class="n"&gt;post_max_size&lt;/span&gt; 20&lt;span class="n"&gt;M&lt;/span&gt;
&lt;span class="n"&gt;php_value&lt;/span&gt; &lt;span class="n"&gt;max_execution_time&lt;/span&gt; 200
&lt;span class="n"&gt;php_value&lt;/span&gt; &lt;span class="n"&gt;max_input_time&lt;/span&gt; 200
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;压缩文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以通过压缩文件来减少网络流量和页面装载时间：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;AddOutputFilterByType&lt;/span&gt; &lt;span class="n"&gt;DEFLATE&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;plain&lt;/span&gt;
&lt;span class="n"&gt;AddOutputFilterByType&lt;/span&gt; &lt;span class="n"&gt;DEFLATE&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="n"&gt;AddOutputFilterByType&lt;/span&gt; &lt;span class="n"&gt;DEFLATE&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;
&lt;span class="n"&gt;AddOutputFilterByType&lt;/span&gt; &lt;span class="n"&gt;DEFLATE&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;
&lt;span class="n"&gt;AddOutputFilterByType&lt;/span&gt; &lt;span class="n"&gt;DEFLATE&lt;/span&gt; &lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;
&lt;span class="n"&gt;AddOutputFilterByType&lt;/span&gt; &lt;span class="n"&gt;DEFLATE&lt;/span&gt; &lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xhtml&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;
&lt;span class="n"&gt;AddOutputFilterByType&lt;/span&gt; &lt;span class="n"&gt;DEFLATE&lt;/span&gt; &lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rss&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;
&lt;span class="n"&gt;AddOutputFilterByType&lt;/span&gt; &lt;span class="n"&gt;DEFLATE&lt;/span&gt; &lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;javascript&lt;/span&gt;
&lt;span class="n"&gt;AddOutputFilterByType&lt;/span&gt; &lt;span class="n"&gt;DEFLATE&lt;/span&gt; &lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;javascript&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;缓存文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这一点还需要解释吗？&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;FilesMatch&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;.(flv|gif|jpg|jpeg|png|ico|swf|js|css|pdf)$&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
Header set Cache-Control &amp;quot;max-age=2592000&amp;quot;
&lt;span class="nt"&gt;&amp;lt;/FilesMatch&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;添加尾部的反斜杠&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;很多人都说添加尾部反斜杠有益于SEO：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;IfModule&lt;/span&gt; &lt;span class="err"&gt;mod_rewrite.c&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
RewriteCond %{REQUEST_URI} /+[^\.]+$
RewriteRule ^(.+[^/])$ %{REQUEST_URI}/ [R=301,L]
&lt;span class="nt"&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="htaccess"></category></entry><entry><title>WordPress与Suhosin冲突的解决办法</title><link href="http://hackecho.com/2012/03/solution-to-the-conflict-of-wordpress-and-suhosin/" rel="alternate"></link><updated>2012-03-23T15:18:14-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-03-23:2012/03/solution-to-the-conflict-of-wordpress-and-suhosin/</id><summary type="html">&lt;p&gt;最近时不时收到宕机邮件，然后查一下VPS的使用情况，发现CPU飙升，IO飙升，SSH进去之后，满屏的out_of_memory（PHP进程高负载）！查各种日志都找不到具体原因，往往是重启一下VPS就好了。昨天晚上突然又出现了这种情况，于是决定好好把日志研究一下了。&lt;/p&gt;
&lt;p&gt;排除了木马和后门的因素，在syslog里发现出现最多的是这个：&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/03/wp-suhosin.jpg"&gt;&lt;img alt="" src="/static/images/2012/03/wp-suhosin.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其实至今我也不是很清楚到底是什么原因，参考了几篇网上的文章，改过之后暂时正常了。但这种情况为什么最近会出现还是个疑问。&lt;/p&gt;
&lt;p&gt;主要参考文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/droko/archive/2012/03/06/2381966.html"&gt;《PHP进程高负载》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://changblog.com/582"&gt;《大战suhosin》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://changblog.com/981"&gt;《解决wordpress引起的suhosin报错》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://core.trac.wordpress.org/ticket/13847"&gt;《WP increasing the memory above other server limit》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://demon.tw/software/suhosin-php.html"&gt;《Suhosin，PHP保护神？》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先观察些时日再说。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;补充（2012-3-23 20:40）：&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;放上我的临时解决办法：&lt;/p&gt;
&lt;p&gt;对于上面日志中的问题，原因是suhosin的memory_limit限制了脚本内存的分配。解决办法是在php.ini中搜索memory_limit关键字，修改如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;suhosin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;
&lt;span class="n"&gt;suhosin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;memory_limit&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 256&lt;span class="n"&gt;M&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;对于get和post数据大小限制的问题，修改/etc/php5/conf.d/suhosin.ini，增加下列配置：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;suhosin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;memory_limit&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 256&lt;span class="n"&gt;M&lt;/span&gt;

&lt;span class="n"&gt;suhosin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_vars&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 2000
&lt;span class="n"&gt;suhosin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_varname_length&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 512
&lt;span class="n"&gt;suhosin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_vars&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 2000
&lt;span class="n"&gt;suhosin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_name_length&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 512
&lt;span class="n"&gt;suhosin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_vars&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 2000
&lt;span class="n"&gt;suhosin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_value_length&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 1024
&lt;span class="n"&gt;suhosin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_name_length&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 512
&lt;span class="n"&gt;suhosin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_vars&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 2000
&lt;span class="n"&gt;suhosin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_totalname_length&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 1024
&lt;span class="n"&gt;suhosin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_name_length&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 512
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果此方法不生效或找到更好的办法，本文会继续更新。&lt;/p&gt;</summary><category term="Suhosin"></category></entry><entry><title>如何搭建个人独立博客</title><link href="http://hackecho.com/2012/03/how-to-create-a-personal-blog/" rel="alternate"></link><updated>2012-03-22T15:09:09-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-03-22:2012/03/how-to-create-a-personal-blog/</id><summary type="html">&lt;p&gt;最近一些朋友问起怎样搭建独立博客，想到以前自己折腾时的迷茫和走过的一些弯路，觉得有必要稍微总结一下。这里简单描述一下整体上的步骤吧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;严正声明：&lt;/strong&gt;由于文章的特殊性，其中难免会涉及到一些域名商、主机商等，绝不存在任何广告嫌疑或其它意图，特此声明。&lt;/p&gt;
&lt;p&gt;文章结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;独立博客与BSP的区别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;申请域名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;服务器主机&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;域名绑定&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装程序&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开始使用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;独立博客与BSP的区别&lt;/h3&gt;
&lt;p&gt;BSP是指Blog Service Provider，意指第三方博客服务提供商，如新浪博客、搜狐博客等。BSP提供给你的是一个写博客的平台，对于整站程序或模板都无法实现自定义，而且域名只能是二级域名或三级域名（如xxx.blog.sina.com.cn）。而独立博客之所以“独立”，是因为其高度的自定义。比如域名是顶级的，还可以自选，博客程序自己可以选择，还可以定制，模板的话也可以自由定制。只要你能想到的，都可以做到。&lt;/p&gt;
&lt;p&gt;但独立博客也有其缺点，如域名和主机要自己买，数据备份要自己做（弄不好会全站丢失数据），人气需要自己建立等等。不过这些对于我们来讲都是可以学习的，而且这些知识对于我们软件学院学生来讲迟早都要接触到，为何不早点利用呢。&lt;/p&gt;
&lt;p&gt;写独立博客还有很多很多好处，写得时间久了自然能体会到。具体可以参看这篇文章&lt;a href="http://www.hackecho.com/archives/38.html"&gt;《为什么你应该从现在开始就写博客》&lt;/a&gt;，这里呢只说一点我的小感受，就是每天晚上的时候自己都会想，今天要写什么博客呢，然后就会在脑海中把整整一天都干了些什么、学了些什么回想一遍。但大多情况都发现自己一天其实没学到什么...然后就会BS自己一下，不断告诉自己，每天都要创造价值！&lt;/p&gt;
&lt;h3&gt;申请域名&lt;/h3&gt;
&lt;p&gt;既然是独立博客，当然要有一个独立域名，所以申请域名是第一步。个人不是很建议在国内注册域名，原因大家心里都明白哈。&lt;/p&gt;
&lt;p&gt;首先是域名的选取问题。.com是比较合适的，当然也有人倡导个人博客用.me域名更酷。仁者见仁，智者见智，除了.org/.gov/.edu等专有域名外，其它都是可以的。.cn由于国家的最新政策，个人已经不允许申请了，那个cn域名白菜价的时代已经过去了：）至于域名名称，全凭个人爱好了，以前我的是uutroy.com，后来换成了现在Hackecho.com，原域名做了一个永久301重定向，依旧能用。域名最好一次选好，不要频繁更换，否则影响很大...&lt;/p&gt;
&lt;p&gt;对于域名注册商，Godaddy.com和name.com口碑不错，Godaddy支持支付宝，网上还有很多优惠码，推荐使用。&lt;/p&gt;
&lt;h3&gt;服务器主机&lt;/h3&gt;
&lt;p&gt;这是最头疼的一个问题。以前瞎折腾的时候，主机这儿吃过不少亏，总的来说，建议大家买香港或美国的主机，如果想尽情折腾可以考虑使用VPS。很重要的一点：大多数博客程序（如Wordpress）都是PHP系统，所以一定要买PHP的主机，当然如果是其它语言的系统，就买相应的主机即可。&lt;/p&gt;
&lt;p&gt;香港的主机我在衡天小张那里买过几款，使用情况还不错，ping值也不是很高，推荐一下。另外Wopus的主机也可以（新软攀峰官网的主机使用的是Wopus的VPS合租，可以&lt;a href="http://bjtuxrpf.com"&gt;点击这里&lt;/a&gt;测试）。&lt;/p&gt;
&lt;p&gt;美国主机商很多很多，我们可以选择的也很多。这里简单列举几家，因为没有全部试用过，所以不做具体评论。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Bluehost&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkhost&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HostGator&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HostMonster&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DreamHost&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;等等等等&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VPS的话推荐Linode VPS，现在我用的就是Linode Fremont机房的512配置。&lt;/p&gt;
&lt;p&gt;关于各种主机之间的差别，比如是否独立IP，DA或CPanel面板的区别，子目录绑定啥的，现在还不比完全弄明白，慢慢地也就知道了：）&lt;/p&gt;
&lt;p&gt;IDC市场水太深，涉足需谨慎。&lt;/p&gt;
&lt;h3&gt;域名绑定&lt;/h3&gt;
&lt;p&gt;有了域名，有了主机，接下来就是把域名绑定到主机上，就可以通过域名访问主机了。下面以Godaddy为例：&lt;/p&gt;
&lt;p&gt;由于Godaddy自己提供的DNS服务器在中国几乎全线被封，所以一般第一步我们要更换DNS解析服务器。我用的是国内的DNSPOD，还不错。具体怎样更改，完全又可以写篇博客了，而且网上现有的教程很多，本着高重用性的原则，这里不再赘述，请自行Google之。&lt;/p&gt;
&lt;p&gt;更改DNS服务器一般几十分钟或1-2个小时生效，然后就可以在DNSPOD里管理自己的域名解析了。&lt;/p&gt;
&lt;p&gt;最基本的是要添加两条A记录解析到主机IP，一条www的，一条@的，分别对应www.example.com和example.com。更多的请参考DNSPOD的帮助文档，非常详细。&lt;/p&gt;
&lt;p&gt;DNSPOD的解析生效速度简直就是神速，我这里一般情况下几十秒生效。当然也有几个小时生效的可能性发生，那就只能等了。&lt;/p&gt;
&lt;h3&gt;安装程序&lt;/h3&gt;
&lt;p&gt;解析生效后，就可以安装博客程序了。可以选择Wordpress，或者国人开发的Typecho或Emlog等等。我使用的是Wordpress，推荐一下，相信你也会喜欢上它的。&lt;/p&gt;
&lt;p&gt;将Wordpress的文件上传到服务器站点目录，建立好数据库，然后访问你的域名，一路“下一步”就OK了。&lt;/p&gt;
&lt;h3&gt;开始使用&lt;/h3&gt;
&lt;p&gt;OK，Enjoy it！&lt;/p&gt;</summary><category term="Wordpress"></category><category term="独立博客"></category></entry><entry><title>[转载] 给浮躁的软件业同仁</title><link href="http://hackecho.com/2012/03/letter-to-software-colleagues/" rel="alternate"></link><updated>2012-03-22T00:18:09-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-03-22:2012/03/letter-to-software-colleagues/</id><summary type="html">&lt;p&gt;&lt;strong&gt;文章来源：网络    作者：未知&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;中国有很多小朋友，他们18,9岁或21,2岁，通过自学也写了不少代码，他们有的代码写的很漂亮，一些技术细节相当出众，也很有钻研精神，但是他们被一些错误的认识和观点左右，缺乏对系统，对程序的整体理解能力，这些人，一个网上的朋友说得很好，他们实际是fans，压根没有资格称为程序员，但是据我所知，不少小网络公司的Cfans,拿着吓人的工资，做着吓人的项目，项目的结局通常也很吓人。&lt;/p&gt;
&lt;p&gt;程序员基本素质：&lt;/p&gt;
&lt;p&gt;作一个真正合格的程序员，或者说就是可以真正合格完成一些代码工作的程序员，应该具有的素质：&lt;/p&gt;
&lt;p&gt;1.团队精神和协作能力&lt;/p&gt;
&lt;p&gt;把它作为基本素质，并不是不重要，恰恰相反，这是程序员应该具备的最基本的，也是最重要的安身立命之本。把高水平程序员说成独行侠的都是在呓语，任何个人的力量都是有限的，即便如linus这样的天才，也需要通过组成强大的团队来创造奇迹，那些遍布全球的为linux写核心的高手们，没有协作精神是不可想象的。独行侠可以作一些赚钱的小软件发点小财，但是一旦进入一些大系统的研发团队，进入商业化和产品化的开发任务，缺乏这种素质的人就完全不合格了。&lt;/p&gt;
&lt;p&gt;2.文档习惯&lt;/p&gt;
&lt;p&gt;说高水平程序员从来不写文档的肯定是乳臭未干的毛孩子，良好的文档是正规研发流程中非常重要的环节，作为代码程序员，30％的工作时间写技术文档是很正常的，而作为高级程序员和系统分析员，这个比例还要高很多。缺乏文档，一个软件系统就缺乏生命力，在未来的查错，升级以及模块的复用时就都会遇到极大的麻烦。&lt;/p&gt;
&lt;p&gt;3.规范化，标准化的代码编写习惯&lt;/p&gt;
&lt;p&gt;作为一些外国知名软件公司的规矩，代码的变量命名，代码内注释格式，甚至嵌套中行缩进的长度和函数间的空行数字都有明确规定，良好的编写习惯，不但有助于代码的移植和纠错，也有助于不同技术人员之间的协作。&lt;/p&gt;
&lt;p&gt;fans叫嚣高水平程序员写的代码旁人从来看不懂，这种叫嚣只能证明他们自己压根不配自称程序员。代码具有良好的可读性，是程序员基本的素质需求。&lt;/p&gt;
&lt;p&gt;再看看整个linux的搭建，没有规范化和标准化的代码习惯，全球的研发协作是绝对不可想象的。&lt;/p&gt;
&lt;p&gt;4.需求理解能力&lt;/p&gt;
&lt;p&gt;程序员需要理解一个模块的需求，很多小朋友写程序往往只关注一个功能需求，他们把性能指标全部归结到硬件，操作系统和开发环境上，而忽视了本身代码的性能考虑，有人曾经放言说写一个广告交换程序很简单，这种人从来不知道在百万甚至千万数量级的访问情况下的性能指标是如何实现的，对于这样的程序员，你给他深蓝那套系统，他也做不出太极链的并访能力。性能需求指标中，稳定性，并访支撑能力以及安全性都很重要，作为程序员需要评估该模块在系统运营中所处的环境，将要受到的负荷压力以及各种潜在的危险和恶意攻击的可能性。就这一点，一个成熟的程序员至少需要2到3年的项目研发和跟踪经验才有可能有心得。&lt;/p&gt;
&lt;p&gt;5.复用性，模块化思维能力&lt;/p&gt;
&lt;p&gt;经常可以听到一些程序员有这样的抱怨，写了几年程序，变成了熟练工，每天都是重复写一些没有任何新意的代码，这其实是中国软件人才最大浪费的地方，一些重复性工作变成了熟练程序员的主要工作，而这些，其实是完全可以避免的。&lt;/p&gt;
&lt;p&gt;复用性设计，模块化思维就是要程序员在完成任何一个功能模块或函数的时候，要多想一些，不要局限在完成当前任务的简单思路上，想想看该模块是否可以脱离这个系统存在，是否可以通过简单的修改参数的方式在其他系统和应用环境下直接引用，这样就能极大避免重复性的开发工作，如果一个软件研发单位和工作组能够在每一次研发过程中都考虑到这些问题，那么程序员就不会在重复性的工作中耽误太多时间，就会有更多时间和精力投入到创新的代码工作中去。&lt;/p&gt;
&lt;p&gt;一些好的程序模块代码，即便是70年代写成的，拿到现在放到一些系统里面作为功能模块都能适合的很好，而现在我看到的是，很多小公司软件一升级或改进就动辄全部代码重写，大部分重复性工作无谓的浪费了时间和精力。&lt;/p&gt;
&lt;p&gt;6.测试习惯&lt;/p&gt;
&lt;p&gt;作为一些商业化正规化的开发而言，专职的测试工程师是不可少的，但是并不是说有了专职的测试工程师程序员就可以不进行自测；软件研发作为一项工程而言，一个很重要的特点就是问题发现的越早，解决的代价就越低，程序员在每段代码，每个子模块完成后进行认真的测试，就可以尽量将一些潜在的问题最早的发现和解决，这样对整体系统建设的效率和可靠性就有了最大的保证。&lt;/p&gt;
&lt;p&gt;测试工作实际上需要考虑两方面，一方面是正常调用的测试，也就是看程序是否能在正常调用下完成基本功能，这是最基本的测试职责，可惜在很多公司这成了唯一的测试任务，实际上还差的远那；第二方面就是异常调用的测试，比如高压力负荷下的稳定性测试，用户潜在的异常输入情况下的测试，整体系统局部故障情况下该模块受影响状况的测试，频发的异常请求阻塞资源时的模块稳定测试等等。当然并不是程序员要对自己的每段代码都需要进行这种完整测试，但是程序员必须清醒认识自己的代码任务在整体项目中的地位和各种性能需求，有针对性的进行相关测试并尽早发现和解决问题，当然这需要上面提到需求理解能力。&lt;/p&gt;
&lt;p&gt;7.学习和总结的能力&lt;/p&gt;
&lt;p&gt;程序员是人才很容易被淘汰，很容易落伍的职业，因为一种技术可能仅仅在三两年内具有领先性，程序员如果想安身立命，就必须不断跟进新的技术，学习新的技能。&lt;/p&gt;
&lt;p&gt;善于学习，对于任何职业而言，都是前进所必需的动力，对于程序员，这种要求就更加高了。但是学习也要找对目标，一些小coding有些codingTO就是这样的coding上只是一些Cfans们，他们也津津乐道于他们的学习能力，一会学会了asp，一会儿学会了php，一会儿学会了jsp，他们把这个作为炫耀的资本，盲目的追逐一些肤浅的，表面的东西和名词，做网络程序不懂通讯传输协议，做应用程序不懂中断向量处理，这样的技术人员，不管掌握了多少所谓的新语言，永远不会有质的提高。&lt;/p&gt;
&lt;p&gt;善于总结，也是学习能力的一种体现，每次完成一个研发任务，完成一段代码，都应当有目的的跟踪该程序的应用状况和用户反馈，随时总结，找到自己的不足，这样逐步提高，一个程序员才可能成长起来。&lt;/p&gt;
&lt;p&gt;一个不具备成长性的程序员，即便眼前看是个高手，建议也不要选用，因为他落伍的时候马上就到了。具备以上全部素质的人，应当说是够格的程序员了，请注意以上的各种素质都不是由IQ决定的，也不是大学某些课本里可以学习到的，需要的仅仅是程序员对自己工作的认识，是一种意识上的问题。&lt;/p&gt;
&lt;p&gt;那么作为高级程序员，以至于系统分析员，也就是对于一个程序项目的设计者而言，除了应该具备上述全部素质之外，还需要具备以下素质：&lt;/p&gt;
&lt;p&gt;1.需求分析能力&lt;/p&gt;
&lt;p&gt;对于程序员而言，理解需求就可以完成合格的代码，但是对于研发项目的组织和管理者，他们不但要理解客户需求，更多时候还要自行制定一些需求，为什么这么说呢？&lt;/p&gt;
&lt;p&gt;一般而言，进行研发任务，也许是客户提出需求，也许是市场和营销部门提出的需求，这时候对于研发部门，他们看到的不是一个完整的需求，通常而言，该需求仅仅是一些功能上的要求，或者更正规些，可能获得一个完整的用户视图；但是这都不够，因为客户由于非技术因素多一些，他们可能很难提出完整和清晰，或者说专业性的性能需求，但是对于项目组织者和规划者，他必须能够清醒认识到这些需求的存在并在完成需求分析报告的时候适当的提出，同时要完整和清晰的体现在设计说明书里面，以便于程序员编码时不会失去这些准则。&lt;/p&gt;
&lt;p&gt;程序设计者必须正确理解用户需求所处的环境，并针对性做出需求的分析，举例而言，同样一个软件通过ASP租用方式发布和通过License方式发布，性能需求可能就是有区别的，前者强调的是更好的支撑能力和稳定性，而后者则可能更强调在各种平台下的普适性和安装使用的简捷性。&lt;/p&gt;
&lt;p&gt;2.项目设计方法和流程处理能力&lt;/p&gt;
&lt;p&gt;程序设计者必须能够掌握不少于两到三种的项目设计方法（比如自顶至下的设计方法，比如快速原型法等等），并能够根据项目需求和资源搭配来选择合适的设计方法进行项目的整体设计。设计方法上选择不当，就会耽误研发周期，浪费研发资源，甚至影响研发效果。&lt;/p&gt;
&lt;p&gt;一个程序设计者还需要把很多功夫用在流程图的设计和处理上，他需要做数据流图以确立数据词典；他需要加工逻辑流图以形成整体的系统处理流程。一个流程有问题的系统，就算代码多漂亮，每个模块多精致，也不会成为一个好的系统。当然，做好流程分析并选择好项目设计方法，都需要在需求分析能力上具有足够的把握。&lt;/p&gt;
&lt;p&gt;3.复用设计和模块化分解能力&lt;/p&gt;
&lt;p&gt;这个似乎又是老调重谈，前面基本素质上不是已经说明了这个问题吗？作为一个从事模块任务的程序员，他需要对他所面对的特定功能模块的复用性进行考虑，而作为一个系统分析人员，他要面对的问题复杂的多，需要对整体系统按照一种模块化的分析能力分解为很多可复用的功能模块和函数，并针对每一模块形成一个独立的设计需求。举个例子，好比是汽车生产，最早每辆汽车都是独立安装的，每个部件都是量身定做的，但是后来不一样了，机器化大生产了，一个汽车厂开始通过流水线来生产汽车，独立部件开始具有一定的复用性，在后来标准化成为大趋势，不同型号，品牌甚至不同厂商的汽车部件也可以进行方便的换装和升级，这时候，汽车生产的效率达到最大化。软件工程也是同样的道理，一个成熟的软件行业，在一些相关项目和系统中，不同的部件是可以随意换装的，比如微软的许多桌面软件，在很多操作模块（如打开文件，保存文件等等）都是复用的同一套功能模块，而这些接口又通过一些类库提供给了桌面应用程序开发者方便挂接，这就是复用化的模块设计明显的一个佐证。&lt;/p&gt;
&lt;p&gt;将一个大型的，错综复杂的应用系统分解成一些相对独立的，具有高度复用性的，并能仅仅依靠几个参数完成数据联系的模块组合，是作为高级程序员和系统分析员一项最重要的工作，合适的项目设计方法，清晰的流程图，是实现这一目标的重要保证。&lt;/p&gt;
&lt;p&gt;4.整体项目评估能力&lt;/p&gt;
&lt;p&gt;作为系统设计人员，必须能够从全局出发，对项目又整体的清醒认识，比如公司的资源配置是否合理和到位，比如工程进度安排是否能最大化体现效率又不至于无法按期完成。评估项目整体和各个模块的工作量，评估项目所需的资源，评估项目可能遇到的困难，都需要大量的经验积累，换言之，这是一种不断总结的累计才能达到的境界。在西方一些软件系统设计的带头人都是很年长的，比如4，50岁，甚至更老，他们在编码方面已经远远不如年轻人那样活络，但是就项目评估而言，他们几十年的经验积累就是最重要和宝贵的财富。中国缺这么一代程序员，主要还不是缺那种年纪的程序员，而是那种年纪的程序员基本上都是研究单位作出来的，都不是从专业的产品化软件研发作出来的，他们没有能积累那种产品化研发的经验，这也是没有办法的事情。&lt;/p&gt;
&lt;p&gt;5.团队组织管理能力&lt;/p&gt;
&lt;p&gt;完成一个项目工程，需要团队的齐心协力，作为项目设计者或研发的主管人，就应当有能力最大化发挥团队的整体力量，技术管理由于其专业性质，不大同于一般的人事管理，因为这里面设计了一些技术性的指标和因素。&lt;/p&gt;
&lt;p&gt;首先是工作的量化，没有量化就很难做到合适的绩效考核，而程序量化又不是简单的代码行数可以计算的，因此要求技术管理人员需要能真正评估一个模块的复杂性和工作量。&lt;/p&gt;
&lt;p&gt;其次是对团队协作模式的调整，一般而言，程序开发的协作通常分为小组进行，小组有主程序员方式的，也有民主方式的，根据程序员之间的能力水平差距，以及根据项目研发的需求，选择合适的组队方式，并能将责权和成员的工作任务紧密结合，这样才能最大发挥组队的效率。&lt;/p&gt;
&lt;p&gt;一个代码水平高的人，未必能成为一个合格的项目研发主管，这方面的能力欠缺往往是容易被忽视的。&lt;/p&gt;
&lt;p&gt;综上可以看到，作为一个主管研发的负责人，一个项目设计者，所需要具备的素质和能力并不是程序代码编写的能力，当然一般情况下，一个程序员通过不断的总结提高达到了这种素质的时候，他所具有的代码编写能力也已经相当不简单了，但是请注意这里面的因果关系，一个高水平的项目设计者通常已经是代码编写相当优秀的人了，但是并不是一个代码相当优秀的程序员就可以胜任项目设计的工作，这里面存在的也不是智商和课本的问题，还是在于一个程序员在积累经验，逐步提升的时候没有意识到应当思考哪方面的东西，没有有意识的就项目的组织和复用设计进行揣摩，没有经常性的文档习惯和总结习惯，不改变这些，我们的合格的项目设计者还是非常欠缺。&lt;/p&gt;
&lt;p&gt;另外，为防止有无聊的人和我较真，补充一点，本文针对目标是作商业化的软件项目和工程，那些科研机构的编程高手，比如算法高手，比如图象处理高手，他们的工作是研究课题而非直接完成商业软件（当然最终间接成为商业产品，比如微软研究院在作的研究课题），因此他们强调的素质可能是另外的东西，这些人（专家），并不能说是程序员，不能用程序员的标准去衡量。&lt;/p&gt;
&lt;p&gt;最后补充一点东西，一个软件项目研发的设计流程是怎样的呢？以通常标准的设计方法为例，（不过笔者喜欢快速原型法）。&lt;/p&gt;
&lt;p&gt;第一个步骤是市场调研，技术和市场要结合才能体现最大价值。&lt;/p&gt;
&lt;p&gt;第二个步骤是需求分析，这个阶段需要出三样东西，用户视图，数据词典和用户操作手册。用户视图是该软件用户（包括终端用户和管理用户）所能看到的页面样式，这里面包含了很多操作方面的流程和条件。数据词典是指明数据逻辑关系并加以整理的东东，完成了数据词典，数据库的设计就完成了一半多。用户操作手册是指明了操作流程的说明书。&lt;/p&gt;
&lt;p&gt;注意，用户操作流程和用户视图是由需求决定的，因此应该在软件设计之前完成，完成这些，就为程序研发提供了约束和准绳，很遗憾太多公司都不是这样做的，因果颠倒，顺序不分，开发工作和实际需求往往因此产生隔阂脱节的现象。&lt;/p&gt;
&lt;p&gt;需求分析，除了以上工作，笔者以为作为项目设计者应当完整的做出项目的性能需求说明书，因为往往性能需求只有懂技术的人才可能理解，这就需要技术专家和需求方（客户或公司市场部门）能够有真正的沟通和了解。&lt;/p&gt;
&lt;p&gt;第三个步骤是概要设计，将系统功能模块初步划分，并给出合理的研发流程和资源要求。作为快速原型设计方法，完成概要设计就可以进入编码阶段了，通常采用这种方法是因为涉及的研发任务属于新领域，技术主管人员一上来无法给出明确的详细设计说明书，但是并不是说详细设计说明书不重要，事实上快速原型法在完成原型代码后，根据评测结果和经验教训的总结，还要重新进行详细设计的步骤。&lt;/p&gt;
&lt;p&gt;第四个步骤是详细设计，这是考验技术专家设计思维的重要关卡，详细设计说明书应当把具体的模块以最‘干净’的方式(黑箱结构）提供给编码者，使得系统整体模块化达到最大；一份好的详细设计说明书，可以使编码的复杂性减低到最低，实际上，严格的讲详细设计说明书应当把每个函数的每个参数的定义都精精细细的提供出来，从需求分析到概要设计到完成详细设计说明书，一个软件项目就应当说完成了一半了。换言之，一个大型软件系统在完成了一半的时候，其实还没有开始一行代码工作。那些把作软件的程序员简单理解为写代码的，就从根子上犯了错误了。&lt;/p&gt;
&lt;p&gt;•第五个步骤是编码，在规范化的研发流程中，编码工作在整个项目流程里最多不会超过1/2，通常在1/3的时间，所谓磨刀不误砍柴功，设计过程完成的好，编码效率就会极大提高，编码时不同模块之间的进度协调和协作是最需要小心的，也许一个小模块的问题就可能影响了整体进度，让很多程序员因此被迫停下工作等待，这种问题在很多研发过程中都出现过。编码时的相互沟通和应急的解决手段都是相当重要的，对于程序员而言，bug永远存在，你必须永远面对这个问题，大名鼎鼎的微软，可曾有连续三个月不发补丁的时候吗？从来没有！&lt;/p&gt;
&lt;p&gt;第六个步骤是测试&lt;/p&gt;
&lt;p&gt;测试有很多种：按照测试执行方，可以分为内部测试和外部测试；按照测试范围，可以分为模块测试和整体联调；按照测试条件，可以分为正常操作情况测试和异常情况测试；按照测试的输入范围，可以分为全覆盖测试和抽样测试。以上都很好理解，不再解释。&lt;/p&gt;
&lt;p&gt;总之，测试同样是项目研发中一个相当重要的步骤，对于一个大型软件，3个月到1年的外部测试都是正常的，因为永远都会又不可预料的问题存在。&lt;/p&gt;
&lt;p&gt;完成测试后，完成验收并完成最后的一些帮助文档，整体项目才算告一段落，当然日后少不了升级，修补等等工作，只要不是想通过一锤子买卖骗钱，就要不停的跟踪软件的运营状况并持续修补升级，知道这个软件被彻底淘汰为止。&lt;/p&gt;
&lt;p&gt;写这些步骤算不上卖弄什么，因为实话讲我手边是一本《软件工程》，在大学里这是计算机专业的必修课程，但是我知道很多程序员似乎从来都只是热衷于什么《30天精通VC》之类的，他们有些和我一样游击队出身，没有正规学过这个专业，还有一些则早就在混够学分后就把这些真正有用的东西还给了老师。&lt;/p&gt;
&lt;p&gt;fans乱嚷嚷，混淆视听，实际上真正的技术专家很少在网上乱发帖子的，如笔者这样不知天高地厚的，其实实在是算不上什么高手，只不过看不惯这种对技术，对程序员的误解和胡说，只好挺身而出，做拨乱反正之言，也希望那些还fans们能认真想想，走到正途上，毕竟那些聪明的头脑还远远没有发挥应有的价值。沉迷于一些错误人士的coding&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;从程序员升级到工程师大多数象我这样对软件有浓厚兴趣的人，毕业后义无反顾地走进了企业，开始了程序员的生涯。那时，我们迷恋“大全”、“秘籍”一类的书籍，心中只有代码。当我看到一行行枯燥的代码变成了能够打电话的设备，变成了屏幕上漂亮的表格，变成了动听的音乐，成就感油然而生。我觉得自己也是一个出色的程序员了。在用户的机房中苦熬三昼夜解决软件的bug，也成了一种可以夸耀的资历。五年前的某一天，我把曾经让我兴奋自豪的大量代码和少得可怜的文档移交之后，来到了华为。这里有更多的年轻人，我如鱼得水，可以充分发挥自己的想象力。依然是代码，依然是匆匆地在纸上记下稍纵即逝的灵感（我们把它称作文档），依然是无休止地和bug作斗争。当有一天，一个新来的同事拿着署着我的大名的文档，小心翼翼地来问我时，我发现自己好象有点不认识它了。我心里有点沮丧，再看看代码，发现文档上记录的一些灵感已面目全非。我当时不知道那位新来的同事感受如何，但我从那时起，好象意识到什么。现在来看，那时的很多事情都是事倍功半。&lt;/p&gt;
&lt;p&gt;去年年底，公司派我到印度从事项目开发，学习印度的软件开发管理方法。一种久违的冲动在心底升起。印度，我已去过两次，虽说是走马观花，但是，印象还是比较深刻。我在访问过程中和印度的工程师交流过，他们言谈中透着自信。他们给我讲解正在做的软件的测试环境，给我看他们写的单元测试文档。当我看到一个软件模块的单元测试用例有三百多页时，我觉得心里很是沉重。当我第三次踏上这片土地时，我又见到了熟悉的人们，明亮的眼睛，温和的笑容，随意的穿着，风驰电掣的摩托，还有大学校园中穿着拖鞋，手抱书本的年轻人。&lt;/p&gt;
&lt;p&gt;我也见到了我的项目经理，一个个子较高，瘦瘦的年轻人，据说刚从美国回来，已工作了五、六年。我听了心里很高兴，这回要一招一式地学两手。需求分析的时间是一个月，项目经理和我们（实际上代表客户）讨论了proposal中的内容，确定每一项都是需要的。然后他把模块大致划分了一下，开始进入计划中的学习阶段。每个人在学习阶段要写出功能描述的胶片，给其他人讲解，不知不觉中，项目组的所有人对项目有了整体的了解。&lt;/p&gt;
&lt;p&gt;他还安排了一些培训，如他们公司的软件开发模型、项目组中各角色的定义，以后及时的培训不断，只要项目组中有需求，他总是把qa或相关的人请来，培训很专业。需求分析完成后提交了一份四十多页的文档，当我看到这份英文文档中我写的部分整整齐齐地列在其中时，我的感觉很复杂，有些喜悦，但更多的是苦涩，我以前怎么就从来没有这样做过需求分析呢。&lt;/p&gt;
&lt;p&gt;在我写文档的过程中，qa给我们培训过srs的写作模板，后来我还是不放心，让他们一个有经验的工程师写了一段，我们再琢磨着照着写。这份srs虽然是多个人合写，但风格一致，内容详实。更为可贵的是，一直到最后，这份需求分析的内容都没有改过，以至于我们没有机会走一下他们的需求更改流程。&lt;/p&gt;
&lt;p&gt;需求分析是项目的第一阶段，第二阶段的开发时间要根据需求分析的结果来确定。当对方的首席技术官（相当于我们业务部的总体组长）来和我们讨论计划时，他们已列出了对每个模块的代码行数的预测，可能存在的风险。根据他们公司的生产率－－300行/人月，他得出了项目第二阶段需要多少周。&lt;/p&gt;
&lt;p&gt;我们当时就提出了异议：1）公司对该项目需求很急；2）每月300行是否太少；3）我们还有下载的源代码参考。他解释说，300行/人月是使得项目能达到他们质量标准的经验数据，考虑到有源代码参考，生产率最多不能超过350行/人月。&lt;/p&gt;
&lt;p&gt;当他问我们公司的生产率时，我脑袋里转了三个圈，没敢多说，大概六、七百行吧。他沉默了一会儿，然后坚定地说，我们这个计划是建立在确保质量的基础上的，我想你们到印度来开发软件，首先看中的应该是我们印度公司的质量保证。我知道你们不缺乏软件开发人员，你们为什么不选择下载的软件呢。几句话说到了我的痛处，现在国内的弟兄们还在为使用下载软件移植的产品四处奔波呢！&lt;/p&gt;
&lt;p&gt;随后的开发活动有条不紊，我们老老实实地跟着做。系统测试计划、用例，概要设计，集成测试计划、用例，详细设计，单元测试计划、用例，编码，单元测试，集成测试，系统测试。一个完整的v模型开发过程，其中每个过程都有review。当我们对一些设计的方法不太明白时，项目经理给我们发来了相关的资料，我不知道他当时是怎么想的，一些基本的分析、设计方法是十年，甚至二十年前的软件工程书中就讲到的，印度每个计算机专业的人员都是必修这些内容的。而我们除了对一些具体协议的代码很熟之外，对这些常用的方法似乎一无所知。我感到一些羞愧，进城直奔书店，把他给我开列的书找了出来，晚上躺在床上，仔细研读，我仿佛突然又遇到了能给我指点迷津的良师益友。现在印度所已形成了强烈的学习风气。我回来后也推销了700多本书，这些书教我们如何用工程化的方法开发软件，是成为一个软件工程师必读的资料。&lt;/p&gt;
&lt;p&gt;我们的项目经理的计划控制能力很强，当有什么影响到项目计划的事情发生时，如人员辞职、实验室搬家、某一模块预测不准（该模块是我们预测的），他总是采取必要的措施，减少延期，调整计划。刚开始，我们对他们每天上午11点，下午4点下楼喝咖啡还有点意见，后来也跟着喝去了，原来，喝咖啡时的交流非常丰富，从项目管理到设计方法，从技术发展到风土人情，无所不包，对我们互相之间的理解，对团队的气氛很有帮助。我们项目的qa也在适当的时候出现在我们的面前，我们对她的工作只有一些感性认识。她每次参加会议时，手里时常拿着一个check list，项目经理准备相应的资料，回答一些问题，她打着勾，或写着项目经理的解释。她给我们做培训时也很耐心，体现出很好的职业素养，我至今还在怀念她给我们的帮助。&lt;/p&gt;
&lt;p&gt;我从事软件开发已有九个年头了，可我现在仍然不能说自己是个合格的软件工程师，更不用谈什么合格的管理者。我看到一份报道说，瑞士洛桑一权威机构把中国的科技综合竞争力从原来的第十三位调到二十多位，原因是他们调整了一些评估标准，其中有一条是中国合格工程师的可获得性非常低。想着弟兄们熬红的双眼，四处奔波升级的疲惫身影，我有一个强烈的愿望：快把我们自己升级成合格的工程师吧!&lt;/p&gt;
&lt;p&gt;（全文系转载，但原作者未知。如果侵犯到您的合法权益，请尽快联系我）&lt;/p&gt;</summary><category term="程序员"></category></entry><entry><title>第一个HackEcho爬虫诞生记</title><link href="http://hackecho.com/2012/03/born-of-the-first-hackecho-spider/" rel="alternate"></link><updated>2012-03-18T22:24:29-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-03-18:2012/03/born-of-the-first-hackecho-spider/</id><summary type="html">&lt;p&gt;几天前开始折腾爬虫时，确立的目标是第一个目标是要把同学异泪的博客爬下来。然而折腾了几天，断断续续始终没能写出一个完整的爬虫来。本来打算今天下午完成，结果下午有课又耽搁了。六点一下课，便冲进了图书馆，于是，七点的时候，第一个HackEcho爬虫诞生了，并完整的爬下了目标博客的前212篇文章并保存到了SQLite里。lol，见下图：&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/03/sqliteyilee-1.png"&gt;&lt;img alt="" src="/static/images/2012/03/sqliteyilee-1.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Scrapy的爬取速度还是非常惊人的，弱弱的校园无线网，整个过程只用了20秒多一点。&lt;/p&gt;
&lt;p&gt;当然，爬取的数据也不多，具体只有以下几项：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;scrapy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Field&lt;/span&gt;

&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;YileeItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    # &lt;span class="n"&gt;DEFINE&lt;/span&gt; &lt;span class="n"&gt;THE&lt;/span&gt; &lt;span class="n"&gt;FIELDS&lt;/span&gt; &lt;span class="n"&gt;FOR&lt;/span&gt; &lt;span class="n"&gt;YOUR&lt;/span&gt; &lt;span class="n"&gt;ITEM&lt;/span&gt; &lt;span class="n"&gt;HERE&lt;/span&gt; &lt;span class="n"&gt;LIKE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    # &lt;span class="n"&gt;NAME&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FIELD&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;release_time&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;content_html&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Field&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当然，之所以抓取这么快，主要是因为只抓取了文本内容，对于动态的内容没有处理。下一步研究怎样处理页面内的JavaScript和一些动态请求的内容，这样爬虫就更完善了。&lt;/p&gt;
&lt;p&gt;最后，推荐一款SQLite的管理工具 &lt;a href="http://code.google.com/p/sqlite-manager/"&gt;SQLite Manager&lt;/a&gt;，它其实是一款火狐插件，但非常好用，不喜欢在命令行里操作SQLite的朋友可以试一下。&lt;/p&gt;</summary><category term="Scrapy"></category></entry><entry><title>[转]快速构建实时定向抓取集群</title><link href="http://hackecho.com/2012/03/how-to-build-real-time-directional-crawl-cluster/" rel="alternate"></link><updated>2012-03-10T00:53:15-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-03-10:2012/03/how-to-build-real-time-directional-crawl-cluster/</id><summary type="html">&lt;p&gt;定义：&lt;/p&gt;
&lt;p&gt;首先，我们定义一下定向抓取，定向抓取是一种特定的抓取需求，目标站点是已知的，站点的页面是已知的。本文的介绍里面，主要是侧重于如何快速构建一个实时的抓取系统，并不包含通用意义上的比如链接分析，站点发现等等特性。&lt;/p&gt;
&lt;p&gt;在本文提到的实例系统里面，主要用到linux+mysql+redis+django+scrapy+webkit，其中scrapy+webkit作为抓取端，redis作为链接库存储，mysql作为网页信息存储，django作为爬虫管理界面，快速实现分布式抓取系统的原型。&lt;/p&gt;
&lt;h3&gt;名词解析：&lt;/h3&gt;
&lt;p&gt;1.抓取环：抓取环指的是spider在存储中获取url，从互联网上下载网页，然后将网页存储到数据库里面，最后在从存储里面获取下一个URL的一个流程。&lt;/p&gt;
&lt;p&gt;2.Linkbase：链接库的存储模块，包含一般的链接信息；是抓取系统的核心，使用redis存储。&lt;/p&gt;
&lt;p&gt;3.&lt;a href="http://www.w3school.com.cn/xpath/index.asp"&gt;XPATH&lt;/a&gt;：一门在 XML 文档中查找信息的语言，XPath 可用来在 XML 文档中对元素和属性进行遍历， 是 W3C XSLT 标准的主要元素。使用XPATH以及相关工具lib进行链接抽取和信息抽取。&lt;/p&gt;
&lt;p&gt;4.XPathOnClick：一个chrome的插件，支持点击页面元素，获取XPATH路径，用于编辑配置模板。&lt;/p&gt;
&lt;p&gt;5.&lt;a href="http://redis.io/"&gt;Redis&lt;/a&gt;：一个开源的KV的内存数据库，具备很好的数据结构的特征和很高的存取性能。用于存储linkbase信息&lt;/p&gt;
&lt;p&gt;6.&lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt;：爬虫管理工具，用于模板配置，系统监控反馈。Django在这里主要是用来管理一个数据库，使用Admin功能。&lt;/p&gt;
&lt;p&gt;7.Pagebase：页面库，主要是存储网页抓取的结果，以及页面抽取的结果，和dump交互，使用mysql实现。&lt;/p&gt;
&lt;p&gt;8.&lt;a href="http://scrapy.org/"&gt;Scrapy&lt;/a&gt;：一个开源的机遇twisted框架的python的单机爬虫，该爬虫实际上包含大多数网页抓取的工具包，用于爬虫下载端以及抽取端。&lt;/p&gt;
&lt;p&gt;9.列表页：指的商品页面之外的所有页面&lt;/p&gt;
&lt;p&gt;10.详情页：比如商品B2C的抓取中，特指商品页面，比如：http://item.tmall.com/item.htm?id=10321272374&lt;/p&gt;
&lt;h3&gt;系统架构&lt;/h3&gt;
&lt;p&gt;一：存储 redis+mysql&lt;/p&gt;
&lt;p&gt;链接库（linkbase）是抓取系统的核心，基于性能和效率的考虑，本文采用基于内存的redis和磁盘的mysql为主，对于linkbase主要是存储抓取必须的链接信息，比如url，anchor，等等；对于mysql，则是存放抓取的网页，便于后续的抽取和处理。&lt;/p&gt;
&lt;p&gt;a)PageBase：使用Mysql分库分表，存放网页，如下图：&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/03/pagebase0.png"&gt;&lt;img alt="" src="/static/images/2012/03/pagebase0.png" /&gt;&lt;/a&gt; b)Linkbase：使用Redis集群，存储linkbase信息。&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/03/linkbase1.png"&gt;&lt;img alt="" src="/static/images/2012/03/linkbase1.png" /&gt;&lt;/a&gt; 几个基本的数据结构：&lt;/p&gt;
&lt;p&gt;1：抓取队列 (candidate list)&lt;/p&gt;
&lt;p&gt;分为待抓取的url队列和更新的url队列；队列存放urlhash，使用redis的list数据结构，对于新提取的url，push到对应的列表里面，对于spider抓取模块，从list pop得到。对于一个站点而言，抓取队列有两种类型：列表页抓取队列和详情页抓取队列。&lt;/p&gt;
&lt;p&gt;2：链接库 (linkbase)&lt;/p&gt;
&lt;p&gt;链接库实际上是存储链接信息的DB；Key是urlhash，Value是linkinfo，包含url，purl，anchor，xpath。。。；在redis使用hash存储，直接存放在redis的里面。KV链接库，不区分页面类型。&lt;/p&gt;
&lt;p&gt;3：已抓取集合（crawled_set）&lt;/p&gt;
&lt;p&gt;已抓取集合指的是当前已经下载的页面的urlhash，存放已经抓取的网页，使用redis的set实现，set的key是urlhash，score是时间戳，已抓取集合主要是用来记录哪一些页面已经抓取和抓取的时间，用于后续的更新页面调度以及抓取信息的统计。同抓取队列一样，每一个站点有两种类型的已抓取集合，详情页和列表页&lt;/p&gt;
&lt;p&gt;二：调度模块：&lt;/p&gt;
&lt;p&gt;调度模块是抓取系统的关键，调度系统的好坏决定了抓取系统的效率；这块是主要是在redis linkbase之上的数据结构，主要有抓取队列、抓取集合、抓取优先级等等数据结构组成；对于一个抓取循环来说：获取URL，提交到抓取模块的待抓取队列，启动抓取，抓取完成之后对新链接进行抽取，最后进入等待抓取的队列里面。&lt;/p&gt;
&lt;p&gt;调度系统的基本配置：&lt;/p&gt;
&lt;p&gt;a)频率（间隔多少秒）&lt;/p&gt;
&lt;p&gt;b)各个抓取列表的选取比例：get_detail，mod_detail，get_list，mod_list&lt;/p&gt;
&lt;p&gt;链接抽取：抽取页面的链接，进行除重，对于新的链接，插入到待抓取列表里&lt;/p&gt;
&lt;p&gt;内容抽取：按照模块的配置XPATH，抽取页面信息，并写入到pagebase中。&lt;/p&gt;
&lt;p&gt;离线调度：按照更新的比例，从crawled_set里面，定期选取url进入Mod队列里面进行刷新。&lt;/p&gt;
&lt;p&gt;三：抓取模块：&lt;/p&gt;
&lt;p&gt;抓取模块是抓取的必要条件，抓取模块来说，重要的是应付互联网上各式的问题，以及如何实现对对方站点的ip平衡，当然，这块是和调度系统的紧密结合的，对于抓取模块而言，本文主要使用scrapy工具包里面的下载模块。&lt;/p&gt;
&lt;p&gt;首先，抓取模块从linkbase获取对应站点的抓取url，进行页面下载，然后将页面信息写回到pipeline中，并完成链接抽取和页面抽取，同时调用调度模块，插入到linkbase和pagebase中。&lt;/p&gt;
&lt;p&gt;下载端设计：&lt;/p&gt;
&lt;p&gt;IP：每台机器需要配置多个物理公网IP，下载的时候，随机选择一个IP下载
抓取频度调整：读取配置文件，按照配置文件的抓取频率进行选取url&lt;/p&gt;
&lt;p&gt;四：配置界面：&lt;/p&gt;
&lt;p&gt;配置界面主要是对抓取系统的管理和配置，包括：站点feed、页面模块抽取、报表系统的反馈等等。&lt;/p&gt;
&lt;p&gt;类似于通用的抓取架构，本文提到的抓取系统架构如下图：&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/03/archicture1.png"&gt;&lt;img alt="" src="/static/images/2012/03/archicture1.png" /&gt;&lt;/a&gt; 一个完整的抓取数据流：&lt;/p&gt;
&lt;p&gt;1：用户提供种子URL&lt;/p&gt;
&lt;p&gt;2：种子URL进入linkbase中新URL队列中&lt;/p&gt;
&lt;p&gt;3：调度模块选取url进入到抓取模块的待抓取队列中&lt;/p&gt;
&lt;p&gt;4：抓取模块读取站点的配置文件，按照执行的频率进行抓取&lt;/p&gt;
&lt;p&gt;5：抓取的结果返回到pipeline接口中，并完成连接的抽取&lt;/p&gt;
&lt;p&gt;6：新发现的连接在linkbase里面进行dedup，并push到linkbase的新URL模块里面&lt;/p&gt;
&lt;p&gt;7：调度模块选取url进入抓取模块的待抓取队列，goto 4&lt;/p&gt;
&lt;p&gt;8：end&lt;/p&gt;
&lt;h3&gt;系统扩展&lt;/h3&gt;
&lt;p&gt;本文提到的抓取系统，核心是调度和存储模块；其中，抓取，存储，调度都是通过数据进行交互的，因此，模块之间可以任意平行扩展，对于系统规模来说，只需要平行扩展mysql和redis存储服务集群以及抓取集群即可。当然，简单的扩展会带来一些问题：比如垃圾列表页的泛滥，链接库的膨胀等等问题，这些问题后续再讨论吧。&lt;/p&gt;
&lt;p&gt;enjoy&lt;/p&gt;</summary><category term="Django"></category><category term="Scrapy"></category><category term="定向抓取"></category></entry><entry><title>带偏好的爬虫——优先级队列</title><link href="http://hackecho.com/2012/03/preferences-spider-with-priority-queue/" rel="alternate"></link><updated>2012-03-07T15:18:37-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-03-07:2012/03/preferences-spider-with-priority-queue/</id><summary type="html">&lt;p&gt;有时候URL队列不一定要符合“先进先出”的方式，而是把重要的URL优先进行抓取。这种策略也叫做页面选择（Page Selection）。&lt;/p&gt;
&lt;p&gt;那么怎样来判断网页的重要性呢？&lt;/p&gt;
&lt;p&gt;其因素很多，主要有链接的欢迎度、链接的重要度和平均链接深度、网站质量、历史权重等。&lt;/p&gt;
&lt;p&gt;链接的欢迎度主要由反向链接（Backlinks）的数量和质量决定，我们定义为IB(P)。&lt;/p&gt;
&lt;p&gt;链接的重要度，是一个关于URL字符串的函数，仅仅考察字符串本身，比如认为".com"和"home"的URL重要度比".cc"和"map"高，我们定义为IL(P)。&lt;/p&gt;
&lt;p&gt;平均连接深度，计算出全站的平均链接深度，然后认为距离种子站点越近的重要性越高。我们定义为ID(P)。&lt;/p&gt;
&lt;p&gt;如果定义网页的重要性为I(P)，那么其重要度有下面的公式决定：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;IB&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;IL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中，X和Y两个参数用来调整IB(P)和IL(P)的比例大小，ID(P)由宽度优先的遍历规则保证，因此不作为重要的指标函数。&lt;/p&gt;
&lt;p&gt;实现优先爬虫最简单的方式可以使用优先级队列实现TODO表，并且把每个URL的重要性作为队列元素的优先级。&lt;/p&gt;</summary><category term="优先级队列"></category><category term="爬虫"></category></entry><entry><title>梦想，不是说说而已</title><link href="http://hackecho.com/2012/02/dreams-not-just-words/" rel="alternate"></link><updated>2012-02-29T01:23:42-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-02-29:2012/02/dreams-not-just-words/</id><summary type="html">&lt;p&gt;&lt;strong&gt;原文/meiya，转载时有删减。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们是否有为梦想真正的实干一把？&lt;/p&gt;
&lt;p&gt;我从西藏回来以后，我在空间中上传了一些旅行时拍的照片，一个大学同学在很多照片下留了言。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“最近在看《藏地密码》太让我有遐想了。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;“这里的天怎么可以如此的蓝，这里的水像是在画里流淌。”&lt;/p&gt;
&lt;p&gt;“湖面像是银盘一样，天啊，我爱死了你拍的每一张照片了！”&lt;/p&gt;
&lt;p&gt;“你走过这桥的时候啥感觉啊？”&lt;/p&gt;
&lt;p&gt;“啊呀，这就是传说中的八廊街的玛吉阿米啊！”&lt;/p&gt;
&lt;p&gt;这个同学是大学睡在我上铺的姐妹，她比我更想去西藏旅行，当年有好多个夜晚我们兴奋地聊着西藏，聊着西藏旅行的梦想，她说她从高中起就想去西藏旅行了。&lt;/p&gt;
&lt;p&gt;我记得去年9月12号，当我背着装有相机、衣服和睡袋的大包，走在去地铁站的路上偶遇她和她男友的情景。他们把我送到地铁口，和我拥抱道别，对我说加油，祝我长途旅行愉快，因为内心的激动混合着离别时的哀愁，记得当时我还忍不住掉了眼泪。&lt;/p&gt;
&lt;p&gt;这个女同学，梦想去西藏旅行，高中想了三年，大专想了三年，毕业之后又想了三年，现在还在继续梦想着，我希望她不是只是想想而已，只是说说而已，能终有一天亲身感受西藏如此蓝的天和如此安静的湖水，坐着火车亲眼看看撒满阳光，像银盘一样的措那湖，能走一走林芝尼洋河上的吊桥，去传说中八廊街的玛吉阿米餐厅翻看别人写的情书或者自己写一封情书。&lt;/p&gt;
&lt;p&gt;你说自己喜欢读书，让我给你列书单，方便你按照书单去采购，你还问我哪里有那么多时间看书；你说自己梦想的职业是广告文案，但是总是找不到机会，问我如何成为一个文案，应该具备哪些素质；你说你一直梦想一个人去长途旅行，但是没钱，父母又觉得太危险……&lt;/p&gt;
&lt;p&gt;其实我已经厌倦了你们这样说说而已的把戏，也许是我太悲观，我觉得就算我告诉你们如果去做，你们也不会按照我说的去做，因为你们根本什么都不做。&lt;/p&gt;
&lt;p&gt;我开始渐渐清楚自己的优势在于：我不是个仅仅会想想而已，说说而已的人，我有我的行动力。以下说的话，也许有人会觉得我在炫耀，但却都是事实。&lt;/p&gt;
&lt;p&gt;我从小就喜欢看书，但是我却很少买过书，直到大学毕业一年之后才开始有些钱买书，之前看的书不是向朋友借的就是在图书馆借的，现在我依然买得少，看得多，还是会定期跑图书馆，并且很享受在图书馆的时光。&lt;/p&gt;
&lt;p&gt;在成为一个合格的广告文案之前，我用了两年半的时间自考了广告学本科，并且拿到了学位证；毕业后在广告公司上班，月入只有1500的文案助理工作干了14个月，尽管我做了正式文案所有的工作。&lt;/p&gt;
&lt;p&gt;说实话，早上起来晨跑真的是件不容易的事情，尤其是冬天。我每次起床跑步之前都会经过剧烈而痛苦的挣扎，每次都是在“再不起床我就不爱你了”的自我分裂和鞭挞声中艰难穿衣。但是我又是多么喜欢跑步的感觉啊，只要起来跑过一次，我的心情就会飞扬，跑步的里程数就又多了一点。&lt;/p&gt;
&lt;p&gt;我为独自去西藏旅行存了一年的钱，跑了一年的步，辞职到出发只有4天时间准备：一天时间用来取钱，买火车票；一天时间用来借背包，借相机，借手电筒，买冲锋衣，买打折睡袋，买食品；一天时间用来看攻略，逛论坛，设计路线，预定青年旅舍；还有一天时间用来打包，收拾行李。&lt;/p&gt;
&lt;p&gt;我要感谢我的朋友W，没有他的推动和支持我没那么有行动力。现在我甚至觉得我应当做得更有行动力一些，放一个旅行背包在鞋架上，想旅行的时候甚至不用脱鞋进房间，拎包就走。&lt;/p&gt;
&lt;p&gt;我想起一个笑话，相信很多人都知道。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有个人每隔三两天就到教堂祈祷，而且他的祷告词几乎每次都相同。第一次他到教堂时，跪在圣坛前，虔诚地低语：“上帝啊，请念在我多年来敬畏您的份上，让我中一次彩票吧！阿门。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;几天后，他又垂头丧气回到教堂，同样跪着祈祷：“上帝啊，为何不让我中彩票？我愿意更谦卑地来服侍你，求您让我中一次彩票吧！阿门。”&lt;/p&gt;
&lt;p&gt;又过了几天，他再次出现在教堂，同样重复他的祈祷。如此周而复始，不间断地祈求着。到了最后一次，他跪着：“我的上帝，为何您不垂听我的祈求？让我中一次彩票吧！只要一次，让我解决所有困难，我愿终身奉献，专心侍奉您……”&lt;/p&gt;
&lt;p&gt;就在这时，圣坛上发出一阵宏伟庄严的声音：“我一直垂听你的祷告。可是最起码你也该先去买一张彩票吧！”&lt;/p&gt;
&lt;p&gt;你想中奖那首先至少该买一张彩票；你想生个孩子遗传自己优良的基因，有对象的前提下你至少需要辛苦干上几次吧；你想梦想成真那首先该为梦想行动起来，做点什么吧！&lt;/p&gt;
&lt;p&gt;二十多年来，不止十个人跟我说过他们喜欢美术，想学画画，梦想成为服装设计师，但是他们中却没有一个真正的会去学美术，会用自己逛街上网打游戏的时间去画一两张设计图。他们总有各种各样的现实困难阻碍他们：画画的学费很贵，自己的时间不够，找不到好的老师等等。从来没有真正为了这个“想学画画”像文章开头提到的那个男生一样实干过。&lt;/p&gt;
&lt;p&gt;你发来邮件说想写一手好文章，问我如何做到？我相信你是想的，只是或许还没有那么想，没有到会利用业余时间去试着真正的学一学写作，试着读一本经典的好书，试着伏在电脑前不和MSN、QQ、微信上的人聊天，不玩豆瓣不上人人不刷微博不浏览草榴认认真真写一篇文章，或者拿个本子安安静静地坐在图书馆写上一篇日记。&lt;/p&gt;
&lt;p&gt;你总是会有许多理由，没时间，上班太辛苦，家里吵看不进书，最近在谈恋爱静不下心来等等。所以你永远也写不出好文章，永远只是想写而已。&lt;/p&gt;
&lt;p&gt;现实中有一部分人对于自己喜欢的东西，对于自己的梦想，只是说说而已，想想而已，没有丝毫的行动力。这个时候我常怀疑他们说的喜欢是不是真的喜欢，还只是人云亦云。你说你爱上一个姑娘，却连表白的勇气都没有，也没有为她做过任何一件事情，只是天天想她，我就会怀疑你并不是真的那么爱她，不爱一个人并不是可耻的，但是假装深爱一个人却是相当可耻的。&lt;/p&gt;
&lt;p&gt;也许你也不是没有梦想，只是没有梦想成真的行动力。&lt;/p&gt;
&lt;p&gt;真正有行动力的人不需要别人告诉他如果做，因为他已经在做了，就算碰到问题，他也会自己想办法，自己动手去解决或者主动寻求可以帮助他的人，而不是等着别人来告诉自己怎么做，等着别人为自己解决问题。&lt;/p&gt;
&lt;p&gt;我觉得你首先要学习独立思考，花一点时间面对自己，想一下自己喜欢什么，内心的梦想是什么。不要别人说想环游世界，你就说你的梦想是环游世界；不要看到别人跑超级马拉松你就说你也想去跑超级马拉松；不要看到别人是个广告人你就想做广告人，你以为广告人很牛逼吗？“不做总统就做广告人！”这句话是骗人的，其实广告人是最苦逼的，但是因为是真的热爱，一切苦逼都可以苦中作乐。&lt;/p&gt;
&lt;p&gt;因为一直在找理由一直在拖延，没有梦想成真的行动力，所以你总是羡慕别人这样，羡慕别人那样，一辈子活在对别人的羡慕之中，最后你只有一个由无数个“想想而已”“说说而已”集合组成的乏味空洞的人生。我常常告诫自己：想做一件事就要立刻行动起来，不然就跟那些徒有羡慕之情却给自己诸多理由毫无行动的人们一个样。&lt;/p&gt;
&lt;p&gt;有个北京的小伙子想去德国柏林看女友，选择仅仅依靠陌生人的帮助，一路“搭便车”的旅行方式，历经1万6千多公里、13个国家，穿越中国、中亚和欧洲，直到柏林。最后在柏林的广场上偶遇了自己的女友，与她紧紧相拥。这件事不仅录制成纪录片在旅游卫视播出，还出了一本书叫《搭车去柏林》。小伙子说过这样一句话：“有些事，你现在不做，永远也不会去做。”&lt;/p&gt;
&lt;p&gt;很多人都说现实束缚了自己，其实在这个世界上，我们一直都可以有很多选择，生活的决定权也一直都在自己手上，只是我们自己缺乏行动而已。&lt;/p&gt;</summary><category term="旅行"></category><category term="梦想"></category></entry><entry><title>初探Scrapy的架构</title><link href="http://hackecho.com/2012/02/glimpse-of-the-architechture-of-scrapy/" rel="alternate"></link><updated>2012-02-27T13:40:39-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-02-27:2012/02/glimpse-of-the-architechture-of-scrapy/</id><summary type="html">&lt;p&gt;本文由&lt;a href="http://www.hackecho.com"&gt;天堂皓月&lt;/a&gt;翻译自&lt;a href="http://doc.scrapy.org/en/latest/topics/architecture.html"&gt;这篇文章&lt;/a&gt;，转载请注明出处。&lt;/p&gt;
&lt;p&gt;这篇文章将描述Scrapy的架构设计以及它各组件之间的配合。因有些地方发觉翻译之后反不如原文简练易懂，因此部分地方保留了原文。&lt;/p&gt;
&lt;h3&gt;概览&lt;/h3&gt;
&lt;p&gt;下面这幅图简单描述了Scrapy的整体架构，其中绿色的箭头表示Scrapy的数据处理流程。（点击图片可放大）&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/02/scrapy_architecture.png"&gt;&lt;img alt="" src="/static/images/2012/02/scrapy_architecture.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;组件介绍&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Scrapy Engine（Scrapy引擎）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Scrapy引擎主要负责控制各个组件之间的数据处理过程，并在特定动作发生时触发相应的事件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scheduler（调度控制器）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;调度控制器从Scrapy引擎接受请求，并将请求列入队列，当Scrapy引擎发出请求时再返回给引擎。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Downloader（下载器）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下载器主要负责获取网页并将网页返回给Scrapy引擎和Spiders。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Spiders（蜘蛛）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Spiders are custom classes written by Scrapy users to parse responses and extract items (aka scraped items) from them or additional URLs (requests) to follow.Each spider is able to handle a specific domain (or group of domains).&lt;/p&gt;
&lt;p&gt;For more information see &lt;a href="http://doc.scrapy.org/en/latest/topics/spiders.html#topics-spiders"&gt;&lt;em&gt;Spiders&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Item Pipeline（项目管道）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Item Pipeline is responsible for processing the items once they have been extracted (or scraped) by the spiders. Typical tasks include cleansing, validation and persistence (like storing the item in a database).&lt;/p&gt;
&lt;p&gt;For more information see &lt;a href="http://doc.scrapy.org/en/latest/topics/item-pipeline.html#topics-item-pipeline"&gt;&lt;em&gt;Item Pipeline&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Downloader middlewares（下载器中间件）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Downloader middlewares are specific hooks that sit between the Engine and the Downloader and process requests when they pass from the Engine to the Downloader, and responses that pass from Downloader to the Engine. They provide a convenient mechanism for extending Scrapy functionality by plugging custom code.&lt;/p&gt;
&lt;p&gt;大致意思是说，下载器中间件是位于Scrapy引擎和下载器之间的特殊钩子，负责处理Scrapy引擎与下载器之间的请求及响应。通过自定义代码可以方便地拓展Scrapy的功能。&lt;/p&gt;
&lt;p&gt;For more information see &lt;a href="http://doc.scrapy.org/en/latest/topics/downloader-middleware.html#topics-downloader-middleware"&gt;&lt;em&gt;Downloader Middleware&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Spider middlewares（蜘蛛中间件）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Spider middlewares are specific hooks that sit between the Engine and the Spiders and are able to process spider input (responses) and output (items and requests). They provide a convenient mechanism for extending Scrapy functionality by plugging custom code.&lt;/p&gt;
&lt;p&gt;具体含义可参考下载器中间件。&lt;/p&gt;
&lt;p&gt;For more information see &lt;a href="http://doc.scrapy.org/en/latest/topics/spider-middleware.html#topics-spider-middleware"&gt;&lt;em&gt;Spider Middleware&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Data flow（&lt;strong&gt;数据处理&lt;/strong&gt;）&lt;/h3&gt;
&lt;p&gt;The data flow in Scrapy is controlled by the Engine, and goes like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The Engine opens a domain, locates the Spider that handles that domain, and asks the spider for the first URLs to crawl.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Engine gets the first URLs to crawl from the Spider and schedules them in the Scheduler, as Requests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Engine asks the Scheduler for the next URLs to crawl.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Scheduler returns the next URLs to crawl to the Engine and the Engine sends them to the Downloader, passing through the Downloader Middleware (request direction).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once the page finishes downloading the Downloader generates a Response (with that page) and sends it to the Engine, passing through the Downloader Middleware (response direction).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Engine receives the Response from the Downloader and sends it to the Spider for processing, passing through the Spider Middleware (input direction).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Spider processes the Response and returns scraped Items and new Requests (to follow) to the Engine.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Engine sends scraped Items (returned by the Spider) to the Item Pipeline and Requests (returned by spider) to the Scheduler&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The process repeats (from step 2) until there are no more requests from the Scheduler, and the Engine closes the domain.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Event-driven networking（事件驱动的网络框架）&lt;/h3&gt;
&lt;p&gt;Scrapy是由&lt;a href="http://twistedmatrix.com/trac/"&gt;Twisted &lt;/a&gt;编写的一个基于Python事件驱动的网络框架，采用非堵塞的方式（a.k.a.异步）处理并发。&lt;/p&gt;
&lt;p&gt;如果要获取更多关于异步编程和Twisted的信息，请参考下面两条链接。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://twistedmatrix.com/projects/core/documentation/howto/async.html"&gt;Asynchronous Programming with Twisted&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://jessenoller.com/2009/02/11/twisted-hello-asynchronous-programming/"&gt;Twisted - hello, asynchronous programming&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Scrapy"></category><category term="Python"></category></entry><entry><title>配置MacVim的Pyhton编程环境</title><link href="http://hackecho.com/2012/02/macvim-with-python/" rel="alternate"></link><updated>2012-02-25T22:27:25-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-02-25:2012/02/macvim-with-python/</id><summary type="html">&lt;p&gt;文章由&lt;a href="http://www.hackecho.com"&gt;天堂皓月&lt;/a&gt;翻译自&lt;a href="http://paintincode.blogspot.com/2011/04/mac-vim-setup-for-python-programming.html"&gt;这篇文章&lt;/a&gt;，图片均来自原作者，转载请注明出处。&lt;/p&gt;
&lt;p&gt;已经有很多博客介绍怎样配置Vim的Python编程环境了，这周末我将这些优秀的文章读了一遍，并将我在MacVim配置python编程环境的步骤记录在这篇文章里。&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/02/macvim_python.png"&gt;&lt;img alt="" src="/static/images/2012/02/macvim_python.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;安装MacVim和Python&lt;/h3&gt;
&lt;p&gt;下列两种方式中的任一种均可用来安装MacVim。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方式一：通过Mac ports&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先确保你的Mac ports是最新版：&lt;/p&gt;
&lt;p&gt;1 $ sudo port -v selfupdate&lt;/p&gt;
&lt;p&gt;安装：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$ &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;macvim&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;cscope&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;python26&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;方式二：自己编译&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$ &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;b4winckler&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;macvim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;
$ &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;macvim&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;
$ &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pythoninterp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;macsdk&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;6
$ &lt;span class="n"&gt;make&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后键入：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$ &lt;span class="n"&gt;open&lt;/span&gt; &lt;span class="n"&gt;MacVim&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Release&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;并把MacVim图表拖到/Applications文件夹。&lt;/p&gt;
&lt;p&gt;(source: &lt;a href="https://github.com/b4winckler/macvim/wiki/Building"&gt;MacVim Github&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;外观&lt;/h3&gt;
&lt;p&gt;默认的主题似乎不是那么吸引人。我发现黑色背景对眼睛更好一点，亮色的背景对眼睛刺激性太强。要安装一个新的配色的话，首先需要新建一个文件夹：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$ &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后，到&lt;a href="http://www.vim.org/scripts/script_search_results.php?keywords=&amp;amp;script_type=color+scheme&amp;amp;order_by=creation_date&amp;amp;direction=descending&amp;amp;search=search"&gt;这里&lt;/a&gt;选择一个配色方案，将下载下来的.vim文件放到刚刚新建的文件夹中。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.vim.org/scripts/script.php?script_id=2536"&gt;Lucius这个配色&lt;/a&gt;还不错，而且支持亮色和蓝色方案。我们将lucius放到colors文件夹中，然后编辑.vimrc文件，开启语法高亮并设置主题。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$ &lt;span class="n"&gt;mv&lt;/span&gt; &lt;span class="n"&gt;lucius&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;
$ &lt;span class="n"&gt;vi&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vimrc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;内容如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;nocompatible&lt;/span&gt;
&lt;span class="n"&gt;syntax&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;
&lt;span class="n"&gt;colorscheme&lt;/span&gt; &lt;span class="n"&gt;lucius&lt;/span&gt;
&amp;quot;&lt;span class="n"&gt;colorscheme&lt;/span&gt; &lt;span class="n"&gt;mustang&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dark&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;对于字体，可以这样设置：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;gfn&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Monaco&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;h12&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;下面是一些其它有用的设置：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;tabstop&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;4
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;shiftwidth&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;4
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;expandtab&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;softtabstop&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;4
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;smartindent&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;autoindent&lt;/span&gt;

&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;hlsearch&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;incsearch&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;showmatch&lt;/span&gt;

&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;在新标签中打开文件&lt;/h3&gt;
&lt;p&gt;通常情况下，在Terminal中键入"vi a_new_file"会在一个新的窗口中打开文件。你也许想将新的文件在一个新的tab中打开。&lt;/p&gt;
&lt;p&gt;编辑mvim:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$ &lt;span class="n"&gt;vi&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mvim&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将下列语句添加在最上方.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;tabs&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后将文件末尾的if结构替换为下面的语句：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# Last step: fire up vim.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$gui&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;$tabs&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;$binary&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;serverlist&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;VIM&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]];&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
&lt;span class="err"&gt;  &lt;/span&gt; &lt;span class="n"&gt;exec&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$binary&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="n"&gt;$opts&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tab&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;silent&lt;/span&gt; &lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:+&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;$@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;exec&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$binary&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="n"&gt;$opts&lt;/span&gt; &lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:+&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;$@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt; 
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="err"&gt;   &lt;/span&gt; &lt;span class="n"&gt;exec&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$binary&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;$opts&lt;/span&gt; &lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:+&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;$@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;CTags and Tag List&lt;/h3&gt;
&lt;p&gt;安装ctags：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$ &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;ctags&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装taglist：&lt;/p&gt;
&lt;p&gt;在&lt;a href="http://www.vim.org/scripts/script.php?script_id=273"&gt;这里&lt;/a&gt;下载taglist，并将taglist.vim复制到~/.vim/plugin&lt;/p&gt;
&lt;p&gt;在~/.vimrc中添加：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;filetype&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;
&lt;span class="n"&gt;filetype&lt;/span&gt; &lt;span class="n"&gt;plugin&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在你的项目目录中运行ctags来生成tags文件，文件中包含了所有类、成员和函数的位置信息。例如，我们在"my_django_project"中运行：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$ &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;my_django_project&lt;/span&gt;
$ &lt;span class="n"&gt;ctags&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在.vimrc中，我们将绑定到ctags命令实现快捷的生成tags文件：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;nnoremap&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;!&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ctags&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;kinds&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="/static/images/2012/02/tag_list.png"&gt;&lt;img alt="" src="/static/images/2012/02/tag_list.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于ctags的更多用法请Google之。&lt;/p&gt;
&lt;p&gt;在MacVim中，键入:TlistToggle来打开tag list.使用组合键来在窗口之间切换，当光标停留在某个变量上时可以用来跳到变量的定义，用回到之前的位置。在tag list窗口中按空格键打开相应的方法签名。对于tag list中的所有快捷键，参照&lt;a href="http://vim.wikia.com/wiki/Browsing_programs_with_tags"&gt;这篇文章&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;Omni Complete&lt;/h3&gt;
&lt;p&gt;如果你之前用过Visual Studio或Eclipse等IDE，我想你已经知道Omni Complete是干什么的了。&lt;/p&gt;
&lt;p&gt;在~/.vimrc中添加下列代码来打开vim中python的自动完成。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;autocmd&lt;/span&gt; &lt;span class="n"&gt;FileType&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;omnifunc&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pythoncomplete&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="/static/images/2012/02/omni_complete.png"&gt;&lt;img alt="" src="/static/images/2012/02/omni_complete.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Task list&lt;/h3&gt;
&lt;p&gt;在你的代码中标记TODO和FIXME是个良好的习惯，TaskList插件为我们完成这一任务。&lt;/p&gt;
&lt;p&gt;在&lt;a href="http://www.vim.org/scripts/script.php?script_id=2607"&gt;这里&lt;/a&gt;下载，然后复制到~/.vim/plugin文件夹。&lt;/p&gt;
&lt;p&gt;在MacVim中键入:TaskList打开列表。&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/02/task_list.png"&gt;&lt;img alt="" src="/static/images/2012/02/task_list.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Pyflakes&lt;/h3&gt;
&lt;p&gt;Pyflakes用来分析并找出python程序中的错误，对于我来讲这个插件必不可少。&lt;/p&gt;
&lt;p&gt;在&lt;a href="http://www.vim.org/scripts/script.php?script_id=2441"&gt;这里&lt;/a&gt;下载，然后解压到~/.vim/文件夹：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$ &lt;span class="n"&gt;unzip&lt;/span&gt; &lt;span class="n"&gt;pyflakes&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zip&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="/static/images/2012/02/pyflakes.png"&gt;&lt;img alt="" src="/static/images/2012/02/pyflakes.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;SnipMate&lt;/h3&gt;
&lt;p&gt;TextMate最酷的功能之一就是snippet，如键入"for"按下Tab键就可以自动将for语句块生成。用SnipMate插件，Vim也可以做到这一点。&lt;/p&gt;
&lt;p&gt;在&lt;a href="http://www.vim.org/scripts/script.php?script_id=2540"&gt;这里&lt;/a&gt;下载，解压到~/.vim/文件夹。&lt;/p&gt;
&lt;p&gt;^_^&lt;/p&gt;
&lt;p&gt;更多有趣有用的插件请参考原文，这里不再一一翻译。但其插件不限于原文介绍的那些，大家如果有什么私家珍藏的插件欢迎分享：）&lt;/p&gt;</summary><category term="MacVim"></category><category term="Python"></category></entry><entry><title>找不到libmysqlclient.18.dylib库的解决办法</title><link href="http://hackecho.com/2012/02/solution-to-missing-libmysqlclient-18-dylib/" rel="alternate"></link><updated>2012-02-18T21:16:56-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-02-18:2012/02/solution-to-missing-libmysqlclient-18-dylib/</id><summary type="html">&lt;p&gt;一个问题刚刚搞定（&lt;a href="http://www.hackecho.com/archives/779.html"&gt;见这里&lt;/a&gt;），另一个问题接踵而来。感谢万能的StackOverFlow.&lt;/p&gt;
&lt;p&gt;问题描述：&lt;/p&gt;
&lt;p&gt;在Python Shell中，执行 import MySQLdb ，出现如下提示：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MySQLdb&lt;/span&gt;  
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  
&lt;span class="n"&gt;File&lt;/span&gt; &amp;quot;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; 1&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  
&lt;span class="n"&gt;File&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bdist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;macosx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;6&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;intel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;egg&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;MySQLdb&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; 19&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="n"&gt;File&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bdist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;macosx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;6&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;intel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;egg&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;_mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; 7&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  
&lt;span class="n"&gt;File&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bdist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;macosx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;6&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;intel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;egg&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;_mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; 6&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__bootstrap__&lt;/span&gt;  
&lt;span class="n"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zhaoyulee&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;eggs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;MySQL_python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;1&lt;span class="p"&gt;.&lt;/span&gt;2&lt;span class="p"&gt;.&lt;/span&gt;3&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;py2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;7&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;macosx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;6&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;intel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;egg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;_mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 2&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;Library&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;loaded&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;libmysqlclient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;18&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dylib&lt;/span&gt;  
&lt;span class="n"&gt;Referenced&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zhaoyulee&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;eggs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;MySQL_python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;1&lt;span class="p"&gt;.&lt;/span&gt;2&lt;span class="p"&gt;.&lt;/span&gt;3&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;py2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;7&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;macosx&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;10&lt;span class="p"&gt;.&lt;/span&gt;6&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;intel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;egg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;_mysql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;  
&lt;span class="n"&gt;Reason&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解决办法：&lt;/p&gt;
&lt;p&gt;Just creat a symbolic link to the library.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libmysqlclient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;18&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dylib&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libmysqlclient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;18&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dylib&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考资料：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/6383310/python-mysqldb-library-not-loaded-libmysqlclient-18-dylib"&gt;《Python mysqldb: Library not loaded: libmysqlclient.18.dylib》&lt;/a&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="MySQL"></category></entry><entry><title>Mac OS X上装MySQL for Python的辛酸经历</title><link href="http://hackecho.com/2012/02/install-mysql-for-python-on-mac/" rel="alternate"></link><updated>2012-02-18T20:44:35-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-02-18:2012/02/install-mysql-for-python-on-mac/</id><summary type="html">&lt;p&gt;折腾了一下午，只为一个MySQL for Python...&lt;/p&gt;
&lt;p&gt;记得寒假的时候在家就为装这个折腾了半天，遇到的是同样的问题，但后来稀里糊涂装好了，也没有做笔记。没想到今天又遇到了相同的问题，解决之后，特地记下解决方法。相信跟我同样问题的人很多，而网上却丝毫找不到相关的资料...&lt;/p&gt;
&lt;p&gt;首先说一下安装环境：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;操作系统：Mac OS X Lion&lt;/p&gt;
&lt;p&gt;Python版本：2.7&lt;/p&gt;
&lt;p&gt;MySQL for Python版本：1.2.3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;问题：&lt;/h3&gt;
&lt;p&gt;编译MySQL for Python的源码时，出现如下错误提示：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;unable&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;execute&lt;/span&gt; &lt;span class="n"&gt;gcc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;4&lt;span class="p"&gt;.&lt;/span&gt;2&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;such&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;
&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; ‘&lt;span class="n"&gt;gcc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;4&lt;span class="p"&gt;.&lt;/span&gt;2′ &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后第一反应当然是Google之，关于这个error的结果还真不少，但是，如果您正在读这篇文章，就请把Google或百度结果页面关掉吧。我可以非常肯定的告诉你，前几十页之内，没有一个搜索结果可以解决这个问题！&lt;/p&gt;
&lt;p&gt;这个问题的原因，其实是与苹果系统的GCC编译器有关（其实苹果的gcc编译器叫做LLVM，还有一段非常的历史，我记得在某期的《程序员》杂志上看到过，有兴趣的读者可以看这篇文章&lt;a href="http://www.programmer.com.cn/9436/"&gt;《Mac OS X 背后的故事（八）三好学生Chris Lattner的LLVM编译工具链》&lt;/a&gt;。）关于我的一系列苦逼的修复过程我就不重复了，直接公布解决办法吧。&lt;/p&gt;
&lt;h3&gt;解决办法：&lt;/h3&gt;
&lt;p&gt;做连接gcc-4.2到命令llvm-gcc-4.2即可。（当然，这只是一种最笨的方法，更高明方法还没想到）&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;llvm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gcc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;4&lt;span class="p"&gt;.&lt;/span&gt;2 &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gcc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;4&lt;span class="p"&gt;.&lt;/span&gt;2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这条命令的关键是：连接源一定要是llvm-gcc-4.2，不能是gcc，否则会出现更多搜都搜不到的错误！&lt;/p&gt;
&lt;p&gt;然后运行编译命令：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;安装成功：&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Processing&lt;/span&gt; &lt;span class="n"&gt;dependencies&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;MySQL&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;1&lt;span class="p"&gt;.&lt;/span&gt;2&lt;span class="p"&gt;.&lt;/span&gt;3  
&lt;span class="n"&gt;Finished&lt;/span&gt; &lt;span class="n"&gt;processing&lt;/span&gt; &lt;span class="n"&gt;dependencies&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;MySQL&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;1&lt;span class="p"&gt;.&lt;/span&gt;2&lt;span class="p"&gt;.&lt;/span&gt;3
&lt;/pre&gt;&lt;/div&gt;</summary><category term="MySQL"></category><category term="Python"></category></entry><entry><title>Mac下GBK与UTF8编码文件的批量转换</title><link href="http://hackecho.com/2012/02/convertion-of-gbk-and-utf8-on-mac/" rel="alternate"></link><updated>2012-02-17T00:34:02-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-02-17:2012/02/convertion-of-gbk-and-utf8-on-mac/</id><summary type="html">&lt;p&gt;下载了一个Python改写的C语言100例，结果原作者使用的编码都是GBK，而我现在使用的Sublime Text 2和Textmate等都不支持GBK编码，导致打开全是乱码。网上也没有找到相应的转换工具，只好另辟蹊径。&lt;/p&gt;
&lt;p&gt;关键时刻还是 Terminal 给力，介绍一条shell命令：iconv&lt;/p&gt;
&lt;p&gt;就不细细介绍了，看下面的例子，就都懂了：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;iconv&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt; # 显示可识别的编码名称
&lt;span class="n"&gt;iconv&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;./&lt;/span&gt;&lt;span class="n"&gt;infomation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt; # 显示可识别的编码名称，将信息存入&lt;span class="n"&gt;infomation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;文件中
&lt;span class="n"&gt;iconv&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;GB2312&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;UTF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;8 &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; # 转换&lt;span class="n"&gt;GB2312&lt;/span&gt;编码的文件&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;为&lt;span class="n"&gt;UTF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;8编码，存入&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="n"&gt;iconv&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;GB2312&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;BIG5&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; # 转换&lt;span class="n"&gt;GB2312&lt;/span&gt;编码的文件&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;为&lt;span class="n"&gt;BIG5&lt;/span&gt;编码，存入&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;进入正题，我们先cd进入保存所有文件的文件夹，然后执行下列命令：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nb"&gt;find&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt; &lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;iconv&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;GB18030&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;UTF8&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{}.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&amp;quot; &lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面命令中的GB18030，如果你转换前的编码为GB2312，将 GB18030 代替为 GB2312 即可。&lt;/p&gt;
&lt;p&gt;OK，搞定！&lt;/p&gt;
&lt;h3&gt;补充说明：&lt;/h3&gt;
&lt;p&gt;这只是为&lt;strong&gt;批量转换&lt;/strong&gt;而生的方法，如果只是转换一两个文件，则可以直接在右键菜单中选择 服务-&amp;gt;转换选定的简体中文文件 即可。当然，也可以用一款支持GBK的编辑器打开文件后存储一份新的UTF8格式的文件即可。&lt;/p&gt;</summary><category term="GBK"></category><category term="Mac"></category><category term="UTF8"></category></entry><entry><title>[原创Chrome插件]去除Google搜索结果的自动跳转</title><link href="http://hackecho.com/2012/02/how-to-remove-auto-jump-in-google-search-results/" rel="alternate"></link><updated>2012-02-15T17:54:52-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-02-15:2012/02/how-to-remove-auto-jump-in-google-search-results/</id><summary type="html">&lt;p&gt;也许大家和我有一样的体验，在“我们这儿”使用Google搜索时，本来一切正常，突然因为点击了某条结果而导致连接被重置... 不管是与Google的结果统计有关，还是与网络内容审查有关，总之这种跳转极大的影响了我们的使用体验。&lt;/p&gt;
&lt;p&gt;网络上有很多解决办法，比如采用先访问&lt;a href="http://www.google.com/ncr"&gt;www.google.com/ncr&lt;/a&gt;的方法，有将浏览器首选语言更改为英语（美国）的方法，但这些方法都不是最稳定最保险的。为了治本，我们来研究一下此跳转的原理。请看下图：&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/02/1.jpg"&gt;&lt;img alt="" src="/static/images/2012/02/1.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原来，对于每个链接，都有一个onmousedown事件，当我们点击鼠标时，真正的链接地址就会被跳转。&lt;/p&gt;
&lt;p&gt;于是，解决办法：去掉每个a标签的onmousedown事件。&lt;/p&gt;
&lt;p&gt;使用这款插件后，效果如下：&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/02/2.jpg"&gt;&lt;img alt="" src="/static/images/2012/02/2.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可以看到：每个a标签的onmousedown事件都被去掉了，点击后链接直接打开！&lt;/p&gt;
&lt;p&gt;当然，这只是非常简单的一个小功能，后续有机会的话会加入更多的功能，敬请期待：）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;插件下载地址&lt;/strong&gt;：暂无 &lt;/p&gt;</summary><category term="Chrome"></category></entry><entry><title>无折腾，不生活</title><link href="http://hackecho.com/2012/02/no-struggle-no-life/" rel="alternate"></link><updated>2012-02-13T20:09:08-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-02-13:2012/02/no-struggle-no-life/</id><summary type="html">&lt;p&gt;看看这几天都折腾了些啥...&lt;/p&gt;
&lt;p&gt;1.换博客程序，更换域名&lt;/p&gt;
&lt;p&gt;开学前，抱着“无折腾，不生活”的态度，将博客的程序换成了国人开发的Emlog。整个转换过程基本用了一天时间，网上可以找到很多emlog转Worpdress的程序，但逆向的话却很少。最后，采取了一种最笨的方法，将文章一篇一篇手工复制...不过也正好借此机会整理下文章。至于评论，由于数量多而且分散，更恐怖的是有级联关系（即谁回复了谁的关系），但看了一下发现两个程序的评论表差不多，便用PHP写了个小脚本将评论迁移了过来。当然，经过修复无数个小bug之后，博客终于又全新上线了。&lt;/p&gt;
&lt;p&gt;不过你也许看到了，现在的博客依旧是WordPress...因为后来我又折腾回来了...不解释。&lt;/p&gt;
&lt;p&gt;遗憾的是，在折腾过程中，一不小心将最新的备份给 rm -rf 掉了，因此博客所有的数据只能还原到2011年12月底。不过幸运的是，在转换程序的时候在本地还有一次数据导入，因此又找回了几篇文章，但最新的一些评论却永远丢失了...&lt;/p&gt;
&lt;p&gt;哦对了，还换了个域名：hackecho.com，原来域名还有一年多到期，进行了301永久重定向到新域名，原来的二级域名因指向不同的host，依旧有效。 &lt;/p&gt;
&lt;p&gt;2.VPS，重装重装重装&lt;/p&gt;
&lt;p&gt;以前就特爱好重装系统，现在虽然换了Mac，但寒假里还是把人们号称五年不用重装的MAC OS重装了下（一度怀疑我有程序洁癖，比如写代码时必须缩进有序，否则就会抓狂...因此总想重装系统，否则也会抓狂...）。&lt;/p&gt;
&lt;p&gt;这两天开始玩儿VPS了，于是又是无止境的重装，可恶的是LNMP环境编译一次得很长时间，每次都望着满屏滚动的代码独自惆怅...后来想了个办法，吃饭前 screen -S 一下，然后就可以关电脑了，等回来的时候便编译完成了，多线程就是好！&lt;/p&gt;
&lt;p&gt;3.折腾各种编辑器&lt;/p&gt;
&lt;p&gt;Mac下始终还没找到一款顺手的编辑器，不仅十分地怀念曾经的Notepad++。Vim只用来简单地改改代码，用于Project的话我还没到那水平。于是前两天做新软攀峰的官方网站，不得不搬出了庞大的Zend Studio。先后试用了很多号称无敌的编辑器，但都找不回原来使用Notepad++时的酣畅淋漓...&lt;/p&gt;
&lt;p&gt;最近发现一款编辑器，初次使用感觉还不错，叫Sublime Text 2。对于现在的功能需求已经大大足够了，不过看官网说明也貌似是很强大的样子。来张图吧，无图无真相：&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2012/02/CF85A78E-C780-4558-BCBB-6BA50A26F2A4.png"&gt;&lt;img alt="" src="/static/images/2012/02/CF85A78E-C780-4558-BCBB-6BA50A26F2A4.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;生活就要爱折腾，技术更要爱折腾。&lt;/p&gt;
&lt;p&gt;无折腾，不生活！不过下次一定会记住要备份好数据...&lt;/p&gt;</summary><category term="折腾"></category></entry><entry><title>Git 学习笔记</title><link href="http://hackecho.com/2012/01/git-notes/" rel="alternate"></link><updated>2012-01-29T23:35:33-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-01-29:2012/01/git-notes/</id><summary type="html">&lt;p&gt;学习Git的笔记，会不定期更新。&lt;/p&gt;
&lt;p&gt;我的Github地址：&lt;a href="https://github.com/uutroy"&gt;https://github.com/uutroy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先推荐两篇非常好的入门：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://gitimmersion.com/"&gt;Git Immersion&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.ralfebert.de/tutorials/git/#commit_a"&gt;Git Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般流程：取代码 → 更新到最新版本 → 修改代码 → 提交&lt;/p&gt;
&lt;h2&gt;Creating a new repository&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;$ git init&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;取代码及修改全局设置&lt;/h2&gt;
&lt;p&gt;git在创建提交的时候会记录你的名字和email地址，所以你应该告诉git这些内容。可以使用’git config’命令来设置，如果传递参数’-global’ ，它会将这些值记录在~/.gitconfig文件里，作为这些配置的默认值。&lt;/p&gt;
&lt;p&gt;设置用户名与邮箱&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git config –global user.name “name”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;git config –global user.email “username@email.com”&lt;/p&gt;
&lt;p&gt;查看设置值&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git config user.name&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从已有的git库中提取代码&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git clone git@github.com:appname.git myrepo&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;每次更改代码的操作&lt;/h2&gt;
&lt;p&gt;更新本地代码到最新版本（需要merge才能合到本地代码中）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git fetch&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;合并更新后的代码到本地&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git merge&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;更新代码方式的另一种方法(git pull是git fetch和git merge命令的一个组合)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git pull&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;修改代码后，查看已修改的内容&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git diff –cached&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将新增加文件加入到git中&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git add file1 file2 file3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从git中删除文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git rm file1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;git rm -r dir1&lt;/p&gt;
&lt;p&gt;提交修改&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git commit -m ‘this is memo’&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果想省掉提交之前的 git add 命令，可以直接用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git commit -a -m ‘this is memo’&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;commit和commit -a的区别,：&lt;/p&gt;
&lt;p&gt;commit -a相当于：&lt;/p&gt;
&lt;p&gt;第一步：自动地add所有改动的代码，使得所有的开发代码都列于index file中&lt;/p&gt;
&lt;p&gt;第二步：自动地删除那些在index file中但不在工作树中的文件&lt;/p&gt;
&lt;p&gt;第三步：执行commit命令来提交&lt;/p&gt;
&lt;p&gt;提交所有修改到远程服务器：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git push&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;其它常用命令&lt;/h2&gt;
&lt;p&gt;显示commit日志&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git log&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不仅显示commit日志，而且同时显示每次commit的代码改变。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git log -p&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;回滚代码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git revert HEAD&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你也可以revert更早的commit，例如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git revert HEAD^&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将branchname分支合并到当前分支中。(如果合并发生冲突，需要自己解决冲突)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git merge branchname&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决冲突&lt;/p&gt;
&lt;p&gt;当merge命令自身无法解决冲突的时候，它会将工作树置于一种特殊的状态，并且给用户提供冲突信息，以期用户可以自己解决这些问题。当然在这个时候，未发生冲突的代码已经被git merge登记在了index file里了。如果你这个时候使用git diff，显示出来的只是发生冲突的代码信息。&lt;/p&gt;
&lt;p&gt;在你解决了冲突之前，发生冲突的文件会一直在index file中被标记出来。这个时候，如果你使用git commit提交的话，git会提示：filename.txt needs merge&lt;/p&gt;
&lt;p&gt;在发生冲突的时候，如果你使用git status命令，那么会显示出发生冲突的具体信息。&lt;/p&gt;
&lt;p&gt;在你解决了冲突之后，你可以使用如下步骤来提交：&lt;/p&gt;
&lt;p&gt;第一步(如果需要增加文件)：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git add file1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第二步：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git commit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考资料：&lt;a href="http://blog.enjoyrails.com/2008/12/31/git%E4%B8%80%E5%88%86%E9%92%9F%E6%95%99%E7%A8%8B/"&gt;《Git一分钟教程》&lt;/a&gt;&lt;/p&gt;</summary><category term="Git"></category></entry><entry><title>Python之禅 - The Zen of Python</title><link href="http://hackecho.com/2012/01/the-zen-of-python/" rel="alternate"></link><updated>2012-01-24T01:36:01-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-01-24:2012/01/the-zen-of-python/</id><summary type="html">&lt;p&gt;初入门Python，在学习Django的数据库操作时被告知，Django在选择所有数据时不是用的SELECT * ，而是会显式地列出所有字段，原因是这样会加快查询速度，同时遵循了Python的一个信条：明确比不明确好。那么Python的这些信条(Zen)到底都有哪些呢，我们来看一下。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在Python Shell中输入 import this 就可以打开The Zen of Python了&lt;/strong&gt;，下面是主要内容：&lt;/p&gt;
&lt;h2&gt;The Zen of Python, by Tim Peters&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Beautiful is better than ugly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Explicit is better than implicit.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Simple is better than complex.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Complex is better than complicated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flat is better than nested.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sparse is better than dense.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Readability counts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Special cases aren’t special enough to break the rules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Although practicality beats purity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Errors should never pass silently.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unless explicitly silenced.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the face of ambiguity, refuse the temptation to guess.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There should be one– and preferably only one –obvious way to do it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Although that way may not be obvious at first unless you’re Dutch.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now is better than never.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Although never is often better than &lt;em&gt;right&lt;/em&gt; now.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the implementation is hard to explain, it’s a bad idea.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the implementation is easy to explain, it may be a good idea.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Namespaces are one honking great idea — let’s do more of those&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;浅显易懂，就不再翻译了。共勉。&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>Wordpress提示填写FTP信息的解决办法</title><link href="http://hackecho.com/2012/01/solution-to-need-of-ftp-account-in-wordpress/" rel="alternate"></link><updated>2012-01-14T14:37:12-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-01-14:2012/01/solution-to-need-of-ftp-account-in-wordpress/</id><summary type="html">&lt;p&gt;在上一篇文章《&lt;a href="http://www.hackecho.com/archives/710.html"&gt;VPS折腾记&lt;/a&gt;》中提到在升级Wordpress或添加删除主题和插件的时候需要填写FTP账户信息的问题，提示一般如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;要执行请求的操作，WordPress 需要访问您网页服务器的权限。 请输入您的 FTP 登录凭据以继续。 如果您忘记了您的登录凭据（如用户名、密码），请联系您的网站托管商。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一般情况下，虚拟主机很少会出现这样的情况，如果使用 VPS 的话，这种情况就会比较多。主要原因是网站服务器运行PHP的用户和Wordpress文件夹的所有者不一样，目的就是为了安全，Wordpress在升级时会创建一个临时文件看看owner是不是和当前运行的PHP是否一样，如果不一样，就会出现这个界面。&lt;/p&gt;
&lt;p&gt;第一种解决办法很简单，就是直接在wp-config.php 中加入FTP的配置代码：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// ** FTP SETTINGS FOR AUTO-UPDATE ** //&lt;/span&gt;
&lt;span class="n"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="no"&gt;FTP_HOST&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="no"&gt;FTP_USER&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="err"&gt;帐号’&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="no"&gt;FTP_PASS&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="err"&gt;密码’&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当然我们更想从根本上解决问题，那么第二种个方法，就要从用户组下手了。&lt;/p&gt;
&lt;p&gt;针对有高级管理权限的用户，如服务器或 VPS 等管理员，只需将 PHP 和网站目录设置成同一个用户组即可。一般是 www 用户组跑 PHP，所以将网站所在目录内所有文件夹和文件设置成www用户组即可，输入命令：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;chown&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="n"&gt;www&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;wwwroot&lt;/span&gt;  
&lt;span class="n"&gt;chgrp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="n"&gt;www&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;wwwroot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;记住将上述命令中的网站目录路径改为自己的路径即可。&lt;/p&gt;</summary><category term="Wordpress"></category></entry><entry><title>VPS折腾记</title><link href="http://hackecho.com/2012/01/vps-struggle/" rel="alternate"></link><updated>2012-01-14T13:58:58-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2012-01-14:2012/01/vps-struggle/</id><summary type="html">&lt;p&gt;实在不爽虚拟主机的性能问题和每天几十封宕机警告，而且主机的一切环境都是虚拟主机商配置好的，没有自由发挥的余地。于是果断决定给博客找个好点的VPS，也为以后博客改版做准备。当然，还有VPN哈哈。&lt;/p&gt;
&lt;p&gt;因为Linode VPS口碑还不错，而且支持ipv6，所以就选它了。折腾了整整一下午一晚上，终于把小博客搬了过来，简单总结一下整个过程以备忘。&lt;/p&gt;
&lt;h2&gt;SSH登陆&lt;/h2&gt;
&lt;p&gt;在Windows上，可以使用Putty来使用SSH。在Mac上，可以直接使用Terminal。命令很简单：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ssh username@server -p portNumber&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;后面的-p portNumber只在主机不是使用标准端口时需要加上，使用时将username和server替换成自己的用户名和地址就可以了。&lt;/p&gt;
&lt;h2&gt;安装LNMP&lt;/h2&gt;
&lt;p&gt;网上普遍说LNMP比LAMP性能要好，虽然我这个小博客也没多少流量，但无折腾不生活，趁年轻多折腾折腾。&lt;/p&gt;
&lt;p&gt;可以选择自己一个一个配置，也可以选择&lt;a href="http://lnmp.org/"&gt;LNMP一键安装包&lt;/a&gt;。当然折腾的前提是要稍微熟悉它，所以暂时用一键安装包了。官方给出了详细的安装步骤（见&lt;a href="http://lnmp.org/install.html"&gt;这里&lt;/a&gt;），这里就不再赘述。对于安装中遇到的各种问题，请看本文第五部分。&lt;/p&gt;
&lt;p&gt;安装完后记住将Nginx和PHP升级到最新版，安装包中的不是最新版。&lt;/p&gt;
&lt;h2&gt;安装Wordpress&lt;/h2&gt;
&lt;p&gt;不知为何，按照LNMP官方教程安装VSFTPD总是不成功，于是放弃之安装了PureFTPd。Wordpress更新时需要FTP支持，所以先配置FTP（这不是必然的，是有一定原因的。）。PureFTPd是直接使用一键安装包中的集成版，非常方便。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;./pureftpd.sh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后根据提示输入相关信息即可。完成后访问http://hackecho.com/ftp即可进行配置，当然首先是给自己添加一个FTP账号了。&lt;/p&gt;
&lt;p&gt;WordPress的安装比较简单，也就是下载、解压，然后访问即可自动安装。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;wget http://cn.wordpress.org/wordpress-3.3.1-zh_CN.tar.gz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;tar zxvf wordpress-3.3.1-zh_CN.tar.gz&lt;/p&gt;
&lt;p&gt;安装完成后，将先前的博客中的内容导出，在新博客中导入即可。（在导入的过程中出现一个问题，新的系统不识别导出的xml文件，而xml文件是完全没有问题的。经过多次尝试无果，这里采用的方式是直接将原先的整个数据库搬了过来。但直接般库会出现很多问题，一定要仔细修复。）&lt;/p&gt;
&lt;h2&gt;配置伪静态&lt;/h2&gt;
&lt;p&gt;一切都完成后发现博客只有主页可以访问，而其余所有页面都是404。原来是在原先的系统中固定链接采用了自定义结构，而到这里没有对服务器进行伪静态规则配置，所以无法解析地址。尝试改回Wordpress的默认固定链接就可以了，但这会导致博客内所有n页面的地址都发生变化，弄不好谷歌百度会K站的。所以，还是还原回原来的配置吧。&lt;/p&gt;
&lt;p&gt;主要参考了这两篇文章《&lt;a href="http://www.ccvita.com/319.html"&gt;Nginx的Rewrite配置&lt;/a&gt;》《&lt;a href="http://www.ccvita.com/336.html"&gt;Nginx下WordPress的Rewrite&lt;/a&gt;》，完成了伪静态配置。Nginx和Apache还是有区别的。&lt;/p&gt;
&lt;p&gt;以下是我的.htaceess内容：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; $&lt;span class="n"&gt;request_filename&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;rewrite&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;.*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; $1&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; $&lt;span class="n"&gt;request_filename&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;rewrite&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;.*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; $1&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;!&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; $&lt;span class="n"&gt;request_filename&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;rewrite&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;.*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后记得在Nginx配置文件中的server块中include进去，重启Nginx。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/etc/init.d/nginx restart&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;遇到的问题及解决办法&lt;/h2&gt;
&lt;p&gt;1、Wordpress无法更新（插件和系统）、无法下载安装插件&lt;/p&gt;
&lt;p&gt;检查目录权限。一般文件夹为755，但我设置成755还是不可以，直接将wp-content文件加777后可以了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;chmod -R 777 wp-content&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2、LNMP安装后出现502 Bad Gateway问题&lt;/p&gt;
&lt;p&gt;这个问题在&lt;a href="http://bbs.vpser.net/thread-1144-1-5.html"&gt;这篇帖子&lt;/a&gt;里有详细的叙述，但也许是人品问题，PHP无法编译和启动。后来经过无数次尝试，发现只要将VPS的系统安装为Ubuntu 10.04即可，我原先安装的是ubuntu 11.10。有相同问题的朋友可以试一下。&lt;/p&gt;
&lt;p&gt;3、提示无法定位WordPress Content目录(wp-content)&lt;/p&gt;
&lt;p&gt;在wp-config.php中加入如下代码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;if(is_admin()) {add_filter(‘filesystem_method’, create_function(‘$a’, ‘return “direct”;’ ));define( ‘FS_CHMOD_DIR’, 0751 );}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;问题继续发现中，如果大家还有其它什么问题，欢迎一起讨论。&lt;/p&gt;</summary><category term="VPS"></category></entry><entry><title>[转]一点学习方法总结（作者：乱雪）</title><link href="http://hackecho.com/2011/12/some-tips-of-learning/" rel="alternate"></link><updated>2011-12-27T17:03:17-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-12-27:2011/12/some-tips-of-learning/</id><summary type="html">&lt;p&gt;摘自“绿色兵团”论坛。（&lt;a href="http://baike.baidu.com/view/994419.htm#sub7225157"&gt;点击查看绿色兵团组织介绍&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;早已经习惯熬夜的我，今天，我学到很多东西，也明白很多，所以写下此文。&lt;/p&gt;
&lt;p&gt;我没有师傅，也没有拜过师，只有老师，是现实生活中学校的计算机老师，并非网上找的所谓的“高手”，有人问过我，没有师傅怎么学习？难道学习技术就一定要找师傅吗？找师傅你们的条件就是技术好，无非就是多入侵了几个站的，试问他们能帮助你们什么？帮助引导你们犯罪吗？再说高一点，就是一些精通一门甚至几门技术的，他们是真正高手，但是他们又能帮助你们什么？技术革新太快，科技日益进步，我们如果想立足就一定要不断学习知识，即使技术再高超，也需要学习技术，否则到头会落后，那么他们也需要学习，但是我没见几个真正的高手是有师傅的，即使有，也没有对他太多帮助，学习是靠自己的。换个角度，你是高手，别人找你当师傅，天天问一堆简单的问题，你有耐心回答吗？没有人会耐心回答你的，更没有耐心教你什么，既然是高手，他们不会把时间放在你身上的，而是放在更深入的地方 !&lt;/p&gt;
&lt;p&gt;从中美黑客大战以后，网上许多界内的人不断建立组织，黑客站点到处是，培训班自然也不少，其实，那些VIP教程说难听点只是堆垃圾。你去参加培训班甚至是浪费钱，甚至被骗，当然肯定是学的到东西的，不过你花钱学的网上很多。网络资源丰富，教程和文章当然很多，所以没必要花钱去培训，当你要学某技术时，先在网上看看文章、搜索下视频，然后对这门技术有所了解后，或者熟悉后，可以买书，结合看书和在电脑上实际操作，效果很好的。&lt;/p&gt;
&lt;p&gt;学网络安全不要听别人所说的开始从编程、系统原理、网络结构等学起走，如果你是个初学者，一来就给你本编程语言的书，你会看得懂吗？你会学的起走吗？除非你是天才，三年前我接触网络时，也就是我开始学计算机时，是从黑客技术开始的，当时我没有任何人教我、指导我，我是从工具开始的，如果你想学好技术，兴趣是重要的，一开始就扔个你本程序语言书会打击你对技术上的信心，反而，如果用工具，比如明小子之类的，入侵某个站以后，会觉得有很大成就感，从而增大了你对学技术的信心和兴趣，当你熟练掌握工具以后，你要学会勤于思考，你应该想想这个工具是怎么实现这个功能的，为什么这样做会入侵到这个站点，这个漏洞又是怎么形成的，比如SQL注入，你应该思考为什么要加and 1=1、and 1=2来判断，为什么这样做就会查询到数据库内容，它是怎么形成这个漏洞的，这时你会知道要涉及到ASP方面的内容，如果你有了兴趣就可以从ASP下手，然后慢慢的学习其他语言。&lt;/p&gt;
&lt;p&gt;自己解决问题永远是个最好的办法，比如你系统出了某问题，你就去QQ群里到处叫，去问好友，耐心的会以几句话给你说，不耐心的根本不理你，如果你花时间等别人告诉你答案时，还不如花时间多在网上搜索下，百度和谷歌永远是你最好的老师，比如系统错误提示，你可以把提示的内容在搜索引擎里搜索，答案很快找到，在解决过程中你又学到了知识了。&lt;/p&gt;
&lt;p&gt;学技术不需要天赋的，我没既没有技术的天赋，也不聪明，只是花的时间比别人多，当别人熬夜甚至通宵打游戏时，我却又学到了很多东西，我不需要游戏，也不打游戏，如果你酷爱游戏，那就更要学技术了，要做到先是你打别人的游戏，最后到别人打你的游戏，当然这也不可能是人人都能做到的。如果你认为一个玩电脑的人不懂电脑无所谓，那么我告诉你，你错了，当你帐号被偷后，当你电脑中毒，当你游戏无法正常运行后，你会怎么办？难道抱着电脑去找别人修，还是打电话请人来修呢？或许这些都是些简单的问题，我们只需要花点点功夫和时间就能学会的东西，完全靠自己解决。&lt;/p&gt;
&lt;p&gt;我有一米多高的计算机书，我没有看完一本，父母说我是浪费，我不这样认为的，书上的东西很多我看不懂，就拿我最熟练精通的ASP来说吧，我买了两本书，前面的基础部分我看的懂，后面的全部看不懂，我全是靠多写代码，不懂就百度。我觉得一本书不需要看完它，因为书上的内容总是有限的，看书只看关键部分。&lt;/p&gt;
&lt;p&gt;不要死记硬背，很多技术到后来总是会明白其中的，学技术掌握的是方法而不是硬背，拿五笔说吧，一开学时老师让我们学五笔，但是我拼音打得很快就可以不学，在练习文章时可以发现打拼音会有明显的差别，很多陌生的字和难找的字，于是我决定学五笔，我是期中才学的，大概花了两三个星期，就达到班上比较好的名次了，他们却花了半学期来练习和背字根，至今我只背的到两句简单的字根，多熟悉键盘，掌握其中的规律就可以的。&lt;/p&gt;
&lt;p&gt;学技术不是一时的激情，别今天就说大话我一定要学好技术，一定要精通什么什么的，技术从浅到深，你会感觉到好玩和枯燥，越深就越显的很枯燥，很多人因此放弃，但是越深学好了就越有趣，如果你真要学好技术，就一定要坚持，到了深入的时候不要想着多恐怖，多困难，往好的方向想，想想学好后。不要听别人说某某某技术很难学，也别因为听说它太难学而恐惧，不敢学，没有面对下你怎么知道就难学呢？拿我学PHP来说，早听说过PHP很难的，有的人甚至很夸张，一直犹豫学不学的我最终还是选择学了，学后我才知道PHP不难学，相反个人觉得比ASP更简单，我花了几个月掌握ASP基本，PHP我只花了一个多星期掌握基本。学黑客也一样的，新手们不要以为黑客这个东西很神秘，真正学了以后你会发现除了本质上的安全问题，还是有很多问题出在管理员身上，他们有时太疏忽了。&lt;/p&gt;
&lt;p&gt;学习黑客不一定就要入侵很多站和计算机才算高手，相反掌握了技术去防范他才算真正的高手，更不能用技术去解决问题，比如谁惹到你了，你就声称要入侵了他的计算机，入侵只是一种深入学习计算机和加固安全的方法。&lt;/p&gt;
&lt;p&gt;不要问谁入门应该先学什么什么语言，如果你刚入门就学语言，那我实在很佩服你，等你技术到一定级别再去接触语言吧。也不要问刚开始学语言应该学哪门语言，看自己能力，如果你偷懒，那学VB吧，VB和ASP很相像，学好了VB再去学ASP，但是我要说，C语、汇编是必不可少的，你可以在后面慢慢学。&lt;/p&gt;
&lt;p&gt;逛论坛并不是好方法，别以为某某组织在界内名气很大，经常呆在那就会学到东西，至少我没有泡过论坛，甚至我自己站的论坛也很少去，更别说发帖了，如果你计算机出某个问题，去发帖还不如靠自己去找答案，别人交流的东西不一定是你看得懂的，毕竟每个人技术有限，花时间学你自己需要、感兴趣的吧！&lt;/p&gt;
&lt;p&gt;学技术更应该简单化，我是这样的，学脚本就是这样学的，你脑袋里只要记住，脚本语言不就是写入数据库-查询数据库内容-显示出来，这是核心部分，中间的什么判断、安全过滤之类的暂时别管。&lt;/p&gt;
&lt;p&gt;学好了一门语言就别担心学其他的语言了，因为编程语言结构之类的都大同小异，要是你会了一门语言再学其他的学起感觉太难那就是你自己的问题了。&lt;/p&gt;
&lt;p&gt;再说说现在新手的一个通病，许多人认为认识很多高手，自己的QQ等级高一点，就让人感觉很牛，QQ等级拿来有什么用？难道多个星星月亮你的技术就一定很好？认识那么多高手究竟是你很牛还是认识的那些高手很牛？为什么你不能象他们学习下呢？&lt;/p&gt;
&lt;p&gt;搞技术的不光技术要好，要知道在这个社会，老板不光只要你的技术，如果你的技术很好，其他很差有什么用？老板要的是个综合性好的人才，长期面对计算机会很内向的，甚至是一种心理疾病，所以建议你学学心理学，不说学太深，至少能解决自己的心理问题，然后多很各行各业的人交流，从他们身上学到自己没有的优点，三人行必有我师。身体也是最重要的，谁都知道长期面对电脑不运动对身体有害，还是要适当运动下，由于我从小体育不好，也没什么体育上爱好，所以只有靠其他的方式活动下了，这点我做不到，但希望你们可以做到。&lt;/p&gt;
&lt;p&gt;确定一个方向尤其重要，当你要学哪门技术的时候就一定要坚持学下去，别今天这学了一点又不学了，明天又去学其他的，有理想是好的，但是不要门门都会，但门门都掌握不好，特别是编程，要的不是学的多，而是学的精。&lt;/p&gt;
&lt;p&gt;看文章是个好习惯，虽然计算机上看文章的确难受甚至枯燥，但文章里有很多好东西，坚持看完一篇文章吧，但有的你不会全部看懂的，没关系，今天看不懂明天可能就懂了。&lt;/p&gt;
&lt;p&gt;不要经常和别人交流技术，毕竟两人水平不同，常常会争个面红耳赤，甚至有时丢面子，交流不一定要交流技术，多学学别人的好处、别人的学习方法。&lt;/p&gt;
&lt;p&gt;如果哪天你累了，看什么技术方面的东西都看不进去，什么也不想学，那么请你休息下，晚上早点睡，多出去走走，做做运动，然后慢慢接触技术，找回激情。&lt;/p&gt;
&lt;p&gt;我能说的也就这么多了，今天我才发现我还缺少很多很多东西，我还需要学习很多很多东西，技术更新太快了，让人接受不过来，还没喘气又得继续了，所以特写下此文，希望对大家有所帮助，别再迷茫了，如果以后有什么问题可以找我，但是别再问我技术问题，也别找我拜师，学习靠自己，自学会成才的，关键是看你付出的，希望通过此文能引导大家，我不能在技术上帮助大家，也只有把自己的学习方法总结一下了，自学会走很多的弯路，但这些弯路是个过程，你在成功中的路，如果你觉得你花了很多时间学技术，却感觉没有学到什么东西，那么你问你自己一句：你尽力去学了吗？&lt;/p&gt;
&lt;p&gt;乱雪&lt;/p&gt;</summary><category term="学习"></category></entry><entry><title>使用PHP将CSDN泄露数据导入数据库</title><link href="http://hackecho.com/2011/12/insert-csdn-user-account-info-into-database-with-php/" rel="alternate"></link><updated>2011-12-23T16:00:05-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-12-23:2011/12/insert-csdn-user-account-info-into-database-with-php/</id><summary type="html">&lt;p&gt;有幸得到了CSDN泄露的600多万条用户数据，这可是做大容量数据测试和分析的好材料啊。但虽然是.sql文件，里面却是以纯文本保存的所有数据，而且以固定格式保存。这对于数据存储来讲没有任何问题，但如此大的纯文本文件，检索起来可就不是一般的慢啊（不信你拉一下滚动条试试，准死）！今天正好看到好友异泪在用Java写个小程序想将这些数据导入到MySQL里，于是索性也用PHP实现一个，正好借机对比一下PHP和Java的数据处理性能问题。&lt;/p&gt;
&lt;p&gt;原理很简单，因为原文件中每行保存一个用户，而且用户名、密码和邮箱之间都是以“#”分隔的，这样的话操作起来非常方便。&lt;/p&gt;
&lt;p&gt;Let's begin!&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;执行环境：&lt;/strong&gt;&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Mac&lt;/span&gt; &lt;span class="n"&gt;OS&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="n"&gt;Lion&lt;/span&gt; 10&lt;span class="p"&gt;.&lt;/span&gt;7&lt;span class="p"&gt;.&lt;/span&gt;2 &lt;span class="o"&gt;|&lt;/span&gt; 2&lt;span class="p"&gt;.&lt;/span&gt;8 &lt;span class="n"&gt;GHz&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;Core&lt;/span&gt; &lt;span class="n"&gt;i7&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; 4 &lt;span class="n"&gt;GB&lt;/span&gt; 1333 &lt;span class="n"&gt;MHz&lt;/span&gt; &lt;span class="n"&gt;DDR3&lt;/span&gt;
&lt;span class="n"&gt;PHP&lt;/span&gt; 5&lt;span class="p"&gt;.&lt;/span&gt;3&lt;span class="p"&gt;.&lt;/span&gt;1 &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;MySQL&lt;/span&gt; 5&lt;span class="p"&gt;.&lt;/span&gt;1&lt;span class="p"&gt;.&lt;/span&gt;44 &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Apache&lt;/span&gt; 2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;源代码如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（执行前，请在php.ini中将内存最大配额和最大执行时间等调高一点，否则会出错。）&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;  
&lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Content-Type: text/html; charset=utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="c1"&gt;//计算页面执行时间的runtime类  &lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;runtime&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;   
&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;$StartTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;$StopTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;get_microtime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;   
&lt;span class="p"&gt;{&lt;/span&gt;   
&lt;span class="k"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$usec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$sec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;microtime&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;   
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;$usec&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;$sec&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;   
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;   
&lt;span class="p"&gt;{&lt;/span&gt;   
&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;StartTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_microtime&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;   
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;   
&lt;span class="p"&gt;{&lt;/span&gt;   
&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;StopTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_microtime&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;   
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;spent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;   
&lt;span class="p"&gt;{&lt;/span&gt;   
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;round&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;StopTime&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;StartTime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;  

&lt;span class="nv"&gt;$runtime&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;runtime&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="nv"&gt;$runtime&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;开始连接数据库...&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="nv"&gt;$connect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nb"&gt;mysql_connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;root&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;root&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="k"&gt;die&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Unable to connect database server!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
&lt;span class="nb"&gt;mysql_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;set names &amp;#39;utf8&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$connect&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
&lt;span class="nv"&gt;$select&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;mysql_select_db&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;csdn&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$connect&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Can not connect this DB!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;开始打开文件...&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="nv"&gt;$fp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;fopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./csdn.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$fp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="k"&gt;echo&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;文件不存在&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;开始读入文件并写入数据库...&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;feof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$fp&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="nv"&gt;$singleline_explode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;fgets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$fp&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;  
&lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$singleline_explode&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;  
&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$singleline_explode&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;  
&lt;span class="nv"&gt;$mail&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$singleline_explode&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;  
&lt;span class="nb"&gt;mysql_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;INSERT INTO `csdn` (`id`, `username`, `password`,`mail`) VALUES (NULL, &amp;#39;&lt;/span&gt;&lt;span class="si"&gt;$username&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="si"&gt;$password&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;$mail&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;span class="nb"&gt;fclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$fp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="nb"&gt;mysql_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$connect&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;完成啦！！！&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

&lt;span class="nv"&gt;$runtime&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;页面执行时间: &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$runtime&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;spent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; 毫秒&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;最后的执行结果如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/12/未命名.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/12/未命名2.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;也就是说，用PHP执行导入，一共6427525条数据，用时7分40秒左右。&lt;/p&gt;
&lt;p&gt;关于Java呢，我没做测试，异泪也是在无法忍受80分钟导入了13万条数据的速度，只好暂时停止。期待异泪到时候为我们做的所有语言的导入速度比较，地址：&lt;a href="http://www.yilee.info"&gt;异泪的博客&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;网上有大牛直接用SQL Programing导入，5分钟搞定，下一步可能试试Shell脚本，据说很不错哦！&lt;/p&gt;</summary><category term="CSDN账号"></category></entry><entry><title>[转] 旅行，写作，编程</title><link href="http://hackecho.com/2011/12/journal-writing-and-programming/" rel="alternate"></link><updated>2011-12-11T17:44:47-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-12-11:2011/12/journal-writing-and-programming/</id><summary type="html">&lt;p&gt;感谢外刊IT评论翻译这篇文章，原文地址：&lt;a href="http://www.aqee.net/traveling-writing-programming/"&gt;《旅行，写作，编程》&lt;/a&gt; ，转载请注明原作者地址。&lt;/p&gt;
&lt;p&gt;概括起来，今年到目前为止，我所做的事情包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;花了10个月的时间做世界环游，途经非洲，东南亚，澳洲，中南美洲里的17个国家和地区。这次旅行的主题就是冲浪和摄影。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;出席在香港，日本，美国和伦敦举行的会议&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启程时给O’Reilly出版公司写了一本书，书名叫做《&lt;a href="http://bit.ly/uFbFJR"&gt;JavaScript Web Applications&lt;/a&gt;》&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;另外写了一本关于&lt;a href="http://arcturo.github.com/library/coffeescript/"&gt;CoffeeScript&lt;/a&gt;的书，很快就会由O’Reilly公司出版。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;写了大量的开源库，例如&lt;a href="http://spinejs.com/"&gt;Spine&lt;/a&gt;, &lt;a href="https://spinejs.com/mobile"&gt;Spine.Mobile&lt;/a&gt;, &lt;a href="http://maccman.github.com/gfx"&gt;GFX&lt;/a&gt;, 和 &lt;a href="http://github.com/maccman/juggernaut"&gt;Juggernaut&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;筹划了一个创业公司的框架&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;出席伦敦2011&lt;a href="http://futureofwebapps.com/london-2011/"&gt;FOWA&lt;/a&gt;会议&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最后，我在&lt;a href="https://twitter.com/about/employees"&gt;Twitter&lt;/a&gt;公司找到了一份工作&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么，让我从一年前开始，那是2010年9月，我刚好从一个我合作创办的公司里出来，尽管这段经历是很有价值的，但无休无止的长时间苦干让我精疲力尽。我回到了英格兰，需要对未来做一些思考。我一直有一个梦想——移居美国(几年就好)，所以，我在Google记事本上写了下面的话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;人生的选择：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;去纽约哥伦比亚大学深造&lt;/p&gt;
&lt;p&gt;坏处 - 非常昂贵，并不一定能学到什么真正有用的东西，无聊?&lt;/p&gt;
&lt;p&gt;好处 - 那是一个纽约的大学！&lt;/p&gt;
&lt;p&gt;写一本书，申请 01 签证&lt;/p&gt;
&lt;p&gt;坏处 - 需要大量的时间，有风险&lt;/p&gt;
&lt;p&gt;好处 - 对事业有好处，有趣&lt;/p&gt;
&lt;p&gt;等待。去纽约度一次假(3个月)。等待创业签证。&lt;/p&gt;
&lt;p&gt;很容易 - 不是那么有趣&lt;/p&gt;
&lt;p&gt;也许选第二个，不行就选3？&lt;/p&gt;
&lt;p&gt;最终我选择了2，我已经对JavaScript web应用研究了很久，我要写一本这方面的书，为什么不边做环游世界的旅行、边写书呢？这也是我一个梦想呀。我从oneworld买了一份环游世界的机票(比你们想象的要便宜)，决定下周去我的第一站，南非。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/12/rtw.png" /&gt;&lt;/p&gt;
&lt;p&gt;如果你从来没有到过非洲，你应该去一次。那里的景色原始而美丽，对那些没有体验过这种景色的人，你很难用言语描绘明白。几年前我就喜欢上了南方，那时我在东海岸做了一个为期3个月的冲浪旅行。这次，我只有一个月的时间，穿越特兰斯凯，从开普敦到德班。当我在南非旅行时，我的写作也开始了，把早期向O’Reilly提交的书的框架里的数章填充了材料。&lt;/p&gt;
&lt;p&gt;特兰斯凯是南非非常具有乡野特色的地方，到处是连绵的小山，一些小村庄和土堆的茅屋。他们仍然沿袭着酋长制度，有一个首领，大多数的当地人靠捕鱼为生。我们在高低不平的土路上颠了两天才到达我心仪的地方，一个美丽的海湾，叫做咖啡湾(Coffee Bay)。在那里，我休整了一下，从网上下载了一些相关资料，为更远的海湾远征做准备。&lt;/p&gt;
&lt;p&gt;我还清晰的记得我们走了数里地来到那个未开垦的海滩，我们从那些一个个被黄沙和小丘孤立的村庄穿行而过。有一个地方，我们要过一条大河，我们需要游过去，我把背包举过头顶，以免里面的相机和iPod遇到水。非洲是一个让你脱离尘世的地方，解放你的思想，重新认识人生最重要的东西是什么。&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2011/12/DSC_0164.jpg"&gt;&lt;img alt="" src="/static/images/2011/12/DSC_0164.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下一站是香港，在那里，我度过了我的21岁生日，接着，我从陆路由新加坡到越南河内。很多人不相信香港70%的面积由自然公园覆盖，我徒步走了几条精彩的景观路线，非常的精彩壮观，比如：香港龙脊。有几天，我在&lt;a href="http://boot.hk/"&gt;boot.hk&lt;/a&gt;这个网站上闲逛，这是一个协作工作的网站，我顺便教了一个同行的游客如何使用ruby。然后，到了夜里，我跟Soho里的一些&lt;a href="http://couchsurfing.org/"&gt;冲浪爱好者&lt;/a&gt;狂欢到凌晨。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/12/DSC_0032.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;从泰国到柬埔寨到越南是我这次旅行中做喜欢的部分，如果你从没有到过亚洲，你绝对应该去一次。这些国家非常的漂亮，气候非常的好，食物美味可口，人们非常友善。吴哥窟是世上最神奇的地方之一，每个人都应该去看看。是&lt;a href="http://stuckincustoms.com/"&gt;Trey Ratcliff的照片&lt;/a&gt;把我吸引到了那里，我的很多其它旅游目的地也是受了他的影响。那个家伙是很多旅游地的第一宣传者。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/12/DSC_0031.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;在一些无名的小博客中，我听有人说过一个很远的美丽的小岛，在柬埔寨的海边。说小岛的Sihanoukville这个地方有个酒吧，说只能坐小渔船到那里。我，还有几个非常好的朋友，乘坐晚上的大巴，开始寻找这个传说中的酒吧。搜索差不多进行了一整天，每一个问过的酒吧都把我们指向另外一个酒吧。最终，我们问了出来，并在第二天早晨做短程巴士去了那个地方。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/12/DSC_0039.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;上面的照片上是海岸边一个10美元一晚的小木屋。从当地居民区离开后，我们的队伍像小岛上唯一的人，我们随性自由的奔跑。白天我们懒懒的躺在海滩上，吃着岛上厨师准备的鲜美可口的水果沙拉，在夜晚，我们在到处是浮游生物的海里游泳。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/12/DSC_0115.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;下一站是越南，我们沿着湄公河支流来到一个边界上的小镇，我们是这里唯一的西方人，交流成了最大的问题。幸运的是，我们发现一个也许是镇上唯一会说英语的人，他骑车当我们的向导。当我的信用卡被那里的一个自动取款机吞掉了后，他提供了我很大的帮助！&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/12/DSC_0059.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;我们的队伍分成了几路，在我到达越南时，我的书正在按计划完成，进行的非常顺利。此时，我在西贡多待了几周，让我在书的好几章上有了重大的进展，正好是中国旧历新年，气氛非常的壮观热闹。&lt;/p&gt;
&lt;p&gt;接着是日本，澳大利亚，新西兰和夏威夷。我很难把我所有的感受都在这篇文章里写出来，但说这是此生难忘的一段历程是不为过的。把如此多的美景都放到一个国家里，太让人赞叹了,我说的正是新西兰。我最喜爱的一段记忆是沿着Wanaka的一个湖边在阳光下跑步，还有就是背着食物和生活用品，徒步数天穿越Routeburn的大山。在这个国家的旅途中，我结识了好几个值得一生相伴的好友。这是一个真正的天堂。&lt;/p&gt;
&lt;p&gt;就在我环绕新西兰的南部岛屿时，我的书终于完成了，提交给了技术编辑校对。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/12/DSC_0096.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;接下来是纽约和旧金山，这两个神奇的地方到处是天才的程序员，有些人我很幸运的认识。Techcrunch Disrupt办的很精彩(我高度推荐hackathon)。&lt;/p&gt;
&lt;p&gt;在从纽约到旧金山的中途停留期间，我在各种公司了进行了不少的求职面试，最终在Twitter公司找到了一份做前端开发的工作。要在那里和杰出的团队一起工作，我不能不高兴的颤抖，而去旧金山，同样也是我此生的一个梦想。&lt;/p&gt;
&lt;p&gt;当签证的事办下来了后，我去了中、南美洲旅行，同时开发了我的一个小工程：一个JavaScript MVC框架库，叫做&lt;a href="http://spinejs.com/"&gt;Spine&lt;/a&gt;。我到了哥斯达黎加，巴拿马，秘鲁，Bolvia，和阿根廷。 秘鲁是我的最爱，尽管那里的海拔给我带来了不少麻烦，我大部分的时间都在探险。下面的图片是哥斯达黎加传说中神奇猎鹰，是在我爬下世界最深的峡谷时拍到的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/12/DSC_0027.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;当我在哥斯达黎加时，微博上有个叫Roberto的家伙给我发了条信息，说他读了我的书，问我是否有兴趣一起冲浪。我欣然同意，坐上去圣何塞的汽车，在几天后和他会了面。那天我们一起在他海边的公寓里开发Spine和Ruby项目，使用移动硬盘，用汽车电源给笔记本充电。当电量不足后，让太阳能板补充能量，我们去冲浪。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/12/DSC_0300.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;我推荐大家去写一本书，特别是边旅游边写书。可以想象，如果我不去旧金山去看一看，我可能还在旅途中，做顾问，去创业。当作家并不能让你直接的挣到很多钱，但它绝对能提升你的身份地位，给你带来很多潜在的机会。事实上，写作过程让我真正享受的是，我可以认真深入的研究一个题目。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/12/DSC_0069.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;这一年是我这辈子目前为止最好的一年，而我感觉今后的一年会更好。当我如今定居下来后，我并没有感觉旅行对我的吸引力减少了；我始终把签证放到一个口袋里，而另一个口袋里装着钱包，当召唤降临，随时准备离开。&lt;/p&gt;
&lt;p&gt;可是，这篇文章并不是关于我的旅行，它是要发送一个信号：&lt;/p&gt;
&lt;p&gt;对于程序员来说，有个得天独厚的条件，就是这种职业可以远程工作或边旅游边工作，这是其它职业办不到的。当然，也不都是这样，在我的旅途中，我没有碰到第二个跟我的做法相似的程序员。这种情况让人悲哀。我想向程序员们送出的信息是，不要再找借口了，行动起来，你可以做到。一个人只有一生，我可以向你保证，这样的生活才不枉世间走这一遭。&lt;/p&gt;
&lt;p&gt;就像我，我感到极度的幸运，能这样的生活，去发现我的热情所在，去做每天我喜欢做的事情。你可以看出，大部分我现在的境遇并非偶然或侥幸，这是计划，追求，工作的结果。&lt;/p&gt;
&lt;p&gt;一份汗水，一份收成。&lt;/p&gt;
&lt;p&gt;这篇文章的目标不是做一些自我陶醉似的炫耀和大话，而是向大家演示如何立下目标，鼓励大家去做相似的事情。想清楚你现在的处境，这一年内你想得到什么，制定出一系列具体的能让你到达这些目标的步骤。追随你的梦想。&lt;/p&gt;</summary><category term="旅行"></category><category term="写作"></category><category term="编程"></category></entry><entry><title>关于多级分类的一个思考</title><link href="http://hackecho.com/2011/11/thinking-of-multi-level-classification/" rel="alternate"></link><updated>2011-11-19T21:39:56-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-11-19:2011/11/thinking-of-multi-level-classification/</id><summary type="html">&lt;p&gt;最近做的几个项目都设计到了多级分类，不太清楚数据表怎样设计。经过一番探究后，发现一般有以下几种解决方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;每级分类一张表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只有一张分类表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一张分类名称表+一张分类关系表&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第三种方法是参考了Wordpress本身的分类方法，个人感觉用在手里的项目中有点大材小用，于是主要目标是在前两种中选择一种。&lt;/p&gt;
&lt;p&gt;首先来看第一种，这是一般最先想到的方法，而且相对比较简单。但马上一想就会发现这种方法的弊端，如果只有两级分类还可以凑合，但如果涉及到多级分类或无限极分类就麻烦了，如果是五级分类就会有五张表，这明显不以维护而且不符合数据库设计原则。&lt;/p&gt;
&lt;p&gt;再来看第二种方案：&lt;/p&gt;
&lt;p&gt;如果只有一张表，那么我们必须能够标识各个分类之间的层次关系，层级等级。第一次的设计是这样的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cid&lt;/p&gt;
&lt;p&gt;cname（分类名称）&lt;/p&gt;
&lt;p&gt;parentcid（上级分类ID）&lt;/p&gt;
&lt;p&gt;cat_level（当前分类层次）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;貌似很完美的样子，而且支持无限级分类。但在使用过程中发现一个问题：虽然有一个分类层次，但排序后它们的层次还是无法直接显示出来。（在其中一个项目中曾经使用过这种方法，当时的解决方案是在View层又加了一次排序来动态的生成HTML代码，每次排序都要遍历一次父类，很恐怖。）。于是，第二次设计修改如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cid&lt;/p&gt;
&lt;p&gt;cname（分类名称）&lt;/p&gt;
&lt;p&gt;parentcid（上级分类ID）&lt;/p&gt;
&lt;p&gt;cat_level（当前分类层次）&lt;/p&gt;
&lt;p&gt;cat_path（当前分类路径）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其中增加了一个字段分类路径，意思是当前分类到顶级分类的完整路径，以一级ID,二级ID，…..，当前级ID的格式存储。如1,2,2。这样的好处是，我们按分类路径进行一下排序会发现它自然地按照层级关系读取出数据来了，层次清晰，简单明了。&lt;/p&gt;
&lt;p&gt;好了，先说到这儿，关于更多的多级分类的数据表设计我们以后再深入讨论。&lt;/p&gt;</summary><category term="多级分类"></category></entry><entry><title>那些年与编程和计算机有关的小事儿</title><link href="http://hackecho.com/2011/11/childhood-of-programming-and-computer/" rel="alternate"></link><updated>2011-11-17T01:57:09-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-11-17:2011/11/childhood-of-programming-and-computer/</id><summary type="html">&lt;p&gt;不知道写这种文章算不算回忆录，因为说回忆录未免有些早。记得初中的时候写过一本《我的小学回忆录》，将从入学一年级第一天起开始能想起来的人和事都记录了下来，如今这本未出版的手写书已不知去向，小学的记忆也越来越模糊。忽然想不如趁着现在对一些往事还尚存记忆，稍微回忆一下，也算对自己的鼓励吧。&lt;/p&gt;
&lt;p&gt;从小就是一个对电脑比较感兴趣的人，有时候兴趣是没有理由的，因为那时周围很多同学使用电脑仅限于聊QQ和半条命，而我却对除此之外的一些其它东西有着非常浓厚的兴趣。印象比较深的是买了很多很多的电脑书籍，当时最惬意的事情就是趴在桌前，做完作业后看那本比砖头还厚的《电脑医院》，一看就是四五个小时，后来还照葫芦画瓢写了个破坏注册表的.reg脚本，号称是我制造的第一个电脑病毒！&lt;/p&gt;
&lt;p&gt;由于很多电脑名词不明白，便买书、查资料。什么《注册表终极操作》、《BIOS配置指南》、《电脑上网故障1000问》、《榨干你的电脑》等等，还有全年的《电脑迷》、《电脑爱好者》、《IT新闻周刊》和不怎么看得懂的《CHIP新电脑》等。尤记得当时第一次重装系统时的激动，第一次电脑崩溃时的伤心，第一次编译通过一个程序，第一次入侵别人电脑等等的第一次，现在回想起来，真有一番体味。&lt;/p&gt;
&lt;p&gt;跟所有少年一样，在当时那个年龄段，都有一个黑客梦。当时最崇拜的人是陈盈豪，因为他的CIH病毒第一次颠覆了我的观念：病毒原来还可以破坏硬件设备！不过我始终没有去静下心来潜心研究那些汇编代码，不过那段经历确实小小地满足了一个少年的黑客梦，至少，成功盗过QQ，成功入侵肉鸡植入灰鸽子，成功进入某网站根目录....不过作为一个遵循黑客守则的少年，盗来的QQ一个都没动过，灰鸽子也没干过不好的事情，入侵网络更是进一下就退出了而已。&lt;/p&gt;
&lt;p&gt;当然，后来不再继续研究“黑客”，开始研究正道。但之前crack、0day的一些经历还是让我学到了很多很多东西。永远感激一个论坛，让我得以成长，著名的看雪论坛。&lt;/p&gt;
&lt;p&gt;说到后来的编程，不得不提到Delphi 7，这是成功生产出我人生中第一款像样软件的工具和语言。当时其实什么也不懂，也不知道什么是面向对象，什么是数据库，也没又编程基础，但好在Delphi 7有很多例子，结果照猫画虎竟也做出了我的处女作软件，是一款心理测试的程序，叫做“美丽预测”。当时还加了注册码，哈哈，现在想想真是有意思。当时比较火的软件站有天空和华军，于是便试着做了一些投递。只有很少一部分软件站收录了“美丽预测”，而现在，这款软件已经在网上完全找不到踪影了，不过在家里的电脑里，永远珍藏着它的所有源代码和所有版本。感谢当时用到的SetupFactory和其它各类工具。当时我初三。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/11/200910181953287680.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;后来有一段时间我下载了最新版的Delphi，结果发现已经不再是使用Pascal了。Delphi 7还是那个永远的Delphi 7，因为它是记忆中的经典，至少对于我来说，是的。&lt;/p&gt;
&lt;p&gt;再后来，有了基础，便开始接触到MS的VS系列，其实这不是第一次接触VS系列，真正的第一次接触还是在小学时，传统的DOS机器上的Fox。时间太久，以至于都不记得Fox是用来干嘛的了，只记得黑屏白字和打出的一张张表格（貌似是数据表吧）。图形界面出来后，虽然带来的极大的方便，但那种没有鼠标，清一色的方正牌机器，黑屏白字和大大的显示器，还是我对电脑的第一印象呢。&lt;/p&gt;
&lt;p&gt;接下来，我也不知道何时起，开始迷上了互联网编程。当时傻傻地用FrontPage做了自己的“李昭谕工作室”网站，还帮同学做了“某某军事图片网站”，当时是用扫描仪一张一张将图片扫描进电脑，然后用扫描仪自带的编辑软件编辑图片（当时不会PS），然后一张张放到网页做好链接等等。当时感觉FrontPage简直就是神器啊！什么都可以做，乐此不疲。直至后来，开始学习了HTML和CSS后，才发现用记事本手动写网页才是最好的方法，FP和DW都是浮云。不过那段回忆真得很美好，当时所有做好的网站都已经打包放在家里的电脑上，偶尔去看看，看看当时傻傻的我。&lt;/p&gt;
&lt;p&gt;这大概就是童年时代一些与编程和计算机有关的小事儿了，当然不是全部，还有很多经典的回忆片段没有写下来，还有一些经典的工具软件没有记下来。不过还是在此缅怀一下那些逝去的经典软件，那些经典的黑客工具，还有那些逝去的记忆。&lt;/p&gt;</summary><category term="Delphi7"></category><category term="编程"></category></entry><entry><title>用SSH远程登录Linux</title><link href="http://hackecho.com/2011/11/login-to-linux-with-ssh/" rel="alternate"></link><updated>2011-11-10T23:43:36-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-11-10:2011/11/login-to-linux-with-ssh/</id><summary type="html">&lt;p&gt;今天配好服务器，发现如果直接远程连接主机无法打开控制台，于是果断采用SSH来登录。很简单，只需几步：&lt;/p&gt;
&lt;p&gt;首先需要在服务器安装SSH的服务器端。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;openssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ubuntu中默认安装了OpenSSH的client端，我们不用重复安装。如果需要安装，只需将上述命令中的server改为client即可。&lt;/p&gt;
&lt;p&gt;安装好后启动OpenSSH。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后确认一下SSH Server是否启动。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;ssh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果只有ssh-agent那ssh-server还没有启动。&lt;/p&gt;
&lt;p&gt;最后就是登录了：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt; 202&lt;span class="p"&gt;.&lt;/span&gt;112&lt;span class="o"&gt;.***.***&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中username是用户名，后面是服务器IP。&lt;/p&gt;
&lt;p&gt;接下来会提示输入密码，然后就成功登录到服务器了。经测试，可以使用sudo -i取得管理员权限，可以执行脚本。哈哈，enjoy it！&lt;/p&gt;</summary><category term="Linux"></category><category term="OpenSSH"></category><category term="SSH"></category></entry><entry><title>ThinkPHP部署二三事儿</title><link href="http://hackecho.com/2011/11/deployment-of-thinkphp/" rel="alternate"></link><updated>2011-11-09T21:15:03-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-11-09:2011/11/deployment-of-thinkphp/</id><summary type="html">&lt;p&gt;费尽周折，终于得以进入信息中心的机房一探究竟了。学校所有的服务器和托管服务器都在这里，内景也跟之前想象的差不多，整齐的一排排机柜，各种颜色的指示灯和密密麻麻的网线，还有很强大的冷却空调。不过唯一不爽的是巨大的噪音。&lt;/p&gt;
&lt;p&gt;今天是去部署ThinkPHP刚做的一套系统，和安秦共同完成的。从上周六到今天，除了上课时间外火力全开，终于如期完成。当然还有不如意的地方，马上进入内测阶段，接受考验，哈哈。&lt;/p&gt;
&lt;p&gt;简单总结一下今天遇到的各种奇奇怪怪的问题，经过我们五个小时的探索，还好都算解决了。不过也看出来自己真正薄弱的地方，下一步继续努力。&lt;/p&gt;
&lt;p&gt;我们把原服务器格式化重新安装了Ubuntu 11.04。之前想安装Windows Server 2003，不过又想正好借机实践一下近期学的Linux知识，于是果断换了Ubuntu系统。考虑到使用方便问题，没有用Server版，桌面版够用。&lt;/p&gt;
&lt;p&gt;安装的过程还算顺利，服务器配置很强大，跑个Ubuntu还是很顺利的。然后就遇到了第一个问题，也是我们今天遇到的最坑爹，最苦恼，最没有办法的问题。。&lt;/p&gt;
&lt;p&gt;由于是内网部署，我们配好静态IP后，竟然发现不能访问！可以ping通，但访问时一直都是Forbidden状态。我们上网查各种方法来试图解决，都无法打通内网和外网这个桥梁。唯一能访问的知识同域内的几个网站，比如特思论坛。更痛苦的是无法连接上交大的开源镜像，导致Ubuntu无法配置PHP服务器环境。。。&lt;/p&gt;
&lt;p&gt;其实问题很简单，管理员的内外网端口映射已经做好，但防火墙配置出现问题，把我们的所有请求都拦截了...也就是说，我们需要联系管理员配置下网络防火墙即可。。。&lt;/p&gt;
&lt;p&gt;接着我们配置好了PHP运行环境，将我们的项目进行部署。这里的问题都是关于ThinkPHP的了，大牛可以直接略过。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;乱码问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;嗯，不用多说，MySQL编码的问题...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;权限问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ThinkPHP的Runtime文件夹需要755的权限，直接从Windows环境下拷过去的项目一定要重新配置下权限。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;找不到Public模块&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们用.htaccess配置了URLRewrite，把index.php隐去了，但奇怪的是诸如http://localhost/Public/...的地址全部都显示为“无法找到Public模块。”Public是个共用文件夹，我们把一些图片，CSS和JS放在里面，但ThinkPHP却去加载Public Action，导致无法找到模块。&lt;/p&gt;
&lt;p&gt;起初以为是.htaccess的问题，安秦把重写规则改了好多遍依旧不能解决问题，ThinkPHP的URLMODE试了一遍也不行。我隐约记得以前写过一个ThinkPHP项目中遇到过同样的问题，但后来怎么解决的却始终想不起来。正当问题进入“白热化”阶段，我们准备写一个PublicAction来捕捉所有请求的时候，终于。。。&lt;/p&gt;
&lt;p&gt;问题是，在Windows下面URL是不区分大小写的，但在Linux下面，大家应该都清楚吧，case sensitive！&lt;/p&gt;
&lt;p&gt;好了，问题解决了。&lt;/p&gt;
&lt;p&gt;明天下午继续去解决防火墙问题，不出差错，马上就可以上线咯！&lt;/p&gt;</summary><category term="ThinkPHP"></category><category term="服务器部署"></category></entry><entry><title>驻足在马路边的秋殇（二）</title><link href="http://hackecho.com/2011/10/stay-in-my-mind-2/" rel="alternate"></link><updated>2011-10-23T17:57:50-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-10-23:2011/10/stay-in-my-mind-2/</id><summary type="html">&lt;p&gt;&lt;img alt="" src="/static/images/2011/10/a8206193_s-300x199.jpg" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;09年10月末，秋殇（一）发表在我的QQ空间里。后来我把它导入了这个博客（地址：&lt;a href="http://www.hackecho.com/archives/52.html"&gt;《驻足在马路边的秋殇》&lt;/a&gt;），留存纪念。如今，两年过去了，我已很少再动文字。偶尔会去红袖一把，期望能添些墨香，或者仅仅是不想失去这种感觉。如今的时间不多，或者，心累了。&lt;/p&gt;
&lt;p&gt;秋，到了。&lt;/p&gt;
&lt;p&gt;少年不识愁滋味，爱上层楼，爱上层楼，为赋新词强说愁。而今识尽愁滋味，欲说还休，欲说还休，却道天凉好个秋。&lt;/p&gt;
&lt;p&gt;不及幼安忧国忧民，却也能体会此情此景。秋殇总能让人若有所感，泛起一些思绪，安静下来，仔细地体会。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;遗忘&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一位以前很要好的哥们儿昨天打电话给我，寒暄过后，竟然问我：“你知道我是谁吧？”我说废话，你的声音变成灰也认识。朋友笑到：“好多人跟我聊半天了才问我你是谁，竟然不记得我了！这才几年啊，真是的！”&lt;/p&gt;
&lt;p&gt;是啊，这是第三年，可又能怪谁呢。QQ的好友列表里有这样三个分组，分别是小学、初中、高中同学，后来小学组的人只剩下了4个人，初中组的也在不断减少，高中组的还好，但陌生的名字却越来越多。后来进行好友整理，索性将三个组合为了一个组，叫做以前的朋友。删除了一些“陌生人”，看起来整洁多了。再后来，使用好友管理的“单向好友”功能，竟然发现有四十多个单向好友，意思就是有四十个人，他们的好友列表里有我，而我却没有他们。&lt;/p&gt;
&lt;p&gt;遗忘总在不经意间。&lt;/p&gt;
&lt;p&gt;什么是落寞，就是你隐身了两年，然后当你鼓起勇气上线时，却不会再有人联系你。有人说“总有一群朋友如死人一般躺在你的好友列表里，偶尔诈诈尸，时不时还会改改他们的墓志铭。”这说的就是你我吧。&lt;/p&gt;
&lt;p&gt;还有朋友责怪我，你回来一趟也不告诉我们一声，一起出来吃个饭，又不是不认识。我说一定会的，如果有时间的话。&lt;/p&gt;
&lt;p&gt;我想和那些我失去的、淡忘的朋友说声对不起。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;回忆&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;秋不是回忆的最好季节，因为每个季节都是回忆。&lt;/p&gt;
&lt;p&gt;小时候听着迈克尔杰克逊长大，后来MJ突然离世，那个时代也随之结束。我不属于那个时代，却着实让我感受到了时间的推进。为了忘却的纪念，很长一段时间再也没有听过MJ的歌。直到突然有一天，耳边想起了那熟悉的《dangerous》，我凝固了。音乐就像时光机器，能够记录一个时代的情感。伴随着音乐，我体会到了过去的感觉。对，是感觉，完全没有场景的浮现，没有一丝相似的岁岁年年，只有那熟悉而又陌生的感觉。&lt;/p&gt;
&lt;p&gt;去不到的地方，叫远方。&lt;/p&gt;
&lt;p&gt;回不到的过去，叫记忆。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;殇&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;幸福花开在彼岸，我在此岸遥遥观望，当忧伤化为灰烬，我就会到达那幸福的起点。&lt;/p&gt;
&lt;p&gt;国庆去泰山，我特意在一年前来时一个相同的地方，用相同的姿势拍了张照片。回来后我把它们合在一张照片中，朋友们都评价变了好多。&lt;/p&gt;
&lt;p&gt;是啊，变了好多，我自己都感受到了。&lt;/p&gt;
&lt;p&gt;问谷雨，是不是一个人不敢看镜子里的自己，就代表这个人对自己没有自信呢？镜子里的我让我不敢相信，这个形容枯槁的人是我吗？&lt;/p&gt;
&lt;p&gt;问李岩，是不是现在的我与大一时的我相比，没有当时积极活跃了呢？“嗯，是的，你低调了。”&lt;/p&gt;
&lt;p&gt;问自己，相由心生，外在是由内在构建的，你低沉了？&lt;/p&gt;
&lt;p&gt;又想起了多年前的“重生法则”，要不要再一次凤凰涅槃。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;这个秋天，有人热情饱满收获果实，可是有的人却说不够；有人感叹着在梦中徜徉心海，有人却因为这个季节而频繁失眠；有人说秋高气爽适合登高，有人却觉得很累……&lt;/p&gt;
&lt;p&gt;“而今识尽愁滋味，欲说还休，欲说还休，却道天凉好个秋。”&lt;/p&gt;
&lt;p&gt;是啊，天凉好个秋！&lt;/p&gt;</summary><category term="秋殇"></category></entry><entry><title>页面滚动时层智能浮动定位的实现</title><link href="http://hackecho.com/2011/10/fixed-scroll-of-webpage/" rel="alternate"></link><updated>2011-10-13T19:36:28-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-10-13:2011/10/fixed-scroll-of-webpage/</id><summary type="html">&lt;p&gt;你可能第一时间注意到了本博客的导航条在向上拉动页面时，如果导航条到了页面顶端便会自动停靠，我们称之为层的智能浮动效果。很早之前国外许多网站上已经开始使用这种效果。近年来国内许多门户也开始使用层的智能浮动来给用户带来更好的体验，如淘宝网搜索结果页的导航条，会自动浮动。再如下面的例子，是我们熟知的新浪微博的通知栏：&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2011/10/previous.png"&gt;&lt;img alt="" src="/static/images/2011/10/previous.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当我们滑动网页时，可以看到如下效果：&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2011/10/last.png"&gt;&lt;img alt="" src="/static/images/2011/10/last.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;右上角的通知栏始终固定不动，不管网页怎么滑动。&lt;/p&gt;
&lt;p&gt;当然，这并不完全是我们想要实现的效果，因为一开始，这个通知栏就是固定的，即CSS里定义position:fixed。我们想要实现的效果是，一开始素并不是固定的，而是随网页滚动的，只有当这个元素滚动到浏览器边缘时，才会固定不动，当页面又回滚到原来位置时，元素解除固定，继续随网页进行滚动，如本博客的导航栏一样。&lt;/p&gt;
&lt;p&gt;下面我们就来利用jQuery实现这种效果。&lt;/p&gt;
&lt;p&gt;当然，因为要用到jQuery，我们首先要做的就是引入jQuery文件：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接下来，我们假设想要进行智能浮动的层如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;float&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    我是来自天堂皓月博客的浮动层...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后我们加入如下的JS代码：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
$&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;smartFloat&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;position&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;);&lt;/span&gt;
        $&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;scroll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;scrolls&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; $&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;scrollTop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scrolls&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                        &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;fixed&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&amp;quot;100&lt;span class="c"&gt;%&amp;quot;&lt;/span&gt;
                    &lt;span class="p"&gt;});&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                        &lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scrolls&lt;/span&gt;
                    &lt;span class="p"&gt;});&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                    &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt;
                &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; $&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;$&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
$&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;#&lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;primary&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;smartFloat&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这段代码的主要意思是：判断#float层的位置，如果到达浏览器边缘，则给层的CSS定义中加上"position:fixed;top:0;"两个属性。&lt;/p&gt;
&lt;p&gt;到此为止，我们的float层就会自动进行浮动啦。&lt;/p&gt;</summary><category term="jQuery"></category><category term="浮动定位"></category></entry><entry><title>深入浅出ThinkPHP系列教程(四) 模块与操作</title><link href="http://hackecho.com/2011/10/thinkphp-model-and-operation/" rel="alternate"></link><updated>2011-10-12T23:38:19-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-10-12:2011/10/thinkphp-model-and-operation/</id><summary type="html">&lt;p&gt;在学习ThinkPHP的模块化和操作之前，我们先回顾一下基于ThinkPHP框架的应用程序组成和执行过程。即：ThinkPHP接收到一个指令，然后调用相应的控制器，控制器调用相应的模型类完成与数据库的交互，最后调用视图类，将生成的页面呈现给用户。&lt;/p&gt;
&lt;p&gt;具体如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/10/ThinkPHP_procedure.gif" /&gt;&lt;/p&gt;
&lt;p&gt;我们来详细了解一下图中所示的模块和操作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模块与操作是 ThinkPHP 中的核心部分，所有的核心逻辑都在这里实现！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt; ThinkPHP 模块&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进入 MyappLibAction 目录，里面有个 IndexAction.class.php 文件。该文件为刚才我们运行入口文件 index.php 时系统自动生成的。打开该文件，其内容大致如下（方法内具体代码省略）：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// 本类由系统自动生成，仅供测试用途&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;IndexAction&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Action&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="err"&gt;具体代码略……&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;```&lt;/span&gt;&lt;span class="nx"&gt;PHP&lt;/span&gt;

&lt;span class="err"&gt;该文件已经演示了一个基于&lt;/span&gt; &lt;span class="nx"&gt;ThinkPHP&lt;/span&gt; &lt;span class="err"&gt;的实际应用。&lt;/span&gt;

&lt;span class="o"&gt;**&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;ThinkPHP&lt;/span&gt; &lt;span class="err"&gt;控制器&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;

&lt;span class="err"&gt;像上面这个&lt;/span&gt; &lt;span class="nx"&gt;IndexAction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="err"&gt;这样的特殊文件，称为控制器。该类文件通常位于&lt;/span&gt; &lt;span class="nx"&gt;LibAction&lt;/span&gt; &lt;span class="err"&gt;下面，命名方式必须以“模块名&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;Action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt;&lt;span class="err"&gt;”样式来命名，如&lt;/span&gt; &lt;span class="nx"&gt;IndexAction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="err"&gt;，详细可参考《&lt;/span&gt;&lt;span class="nx"&gt;ThinkPHP&lt;/span&gt; &lt;span class="err"&gt;命名规范》章节。&lt;/span&gt;

&lt;span class="o"&gt;**&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;ThinkPHP&lt;/span&gt; &lt;span class="err"&gt;模块&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;

&lt;span class="err"&gt;一个控制器对应一个模块。如&lt;/span&gt; &lt;span class="nx"&gt;IndexAction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="err"&gt;就对应&lt;/span&gt; &lt;span class="nx"&gt;Index&lt;/span&gt; &lt;span class="err"&gt;模块，相应的类名为&lt;/span&gt; &lt;span class="nx"&gt;IndexAction&lt;/span&gt; &lt;span class="err"&gt;，如上面的例子：&lt;/span&gt;

    &lt;span class="kr"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;IndexAction&lt;/span&gt; &lt;span class="kr"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Action&lt;/span&gt;

&lt;span class="o"&gt;**&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;ThinkPHP&lt;/span&gt; &lt;span class="err"&gt;操作&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;

&lt;span class="err"&gt;一个模块（类）里有多个方法，称之为“操作”。如上面例子的&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="err"&gt;方法：&lt;/span&gt;

    &lt;span class="kr"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="err"&gt;我们更改上面的&lt;/span&gt; &lt;span class="nx"&gt;IndexAction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="err"&gt;为：&lt;/span&gt;

&lt;span class="err"&gt;```&lt;/span&gt;&lt;span class="nx"&gt;PHP&lt;/span&gt;&lt;span class="err"&gt;```&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;IndexAction&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Action&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Content-Type:text/html; charset=utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;第一个例子测试！&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;再次访问网站首页（入口文件）：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;127&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;1&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;myapp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;浏览器显示内容为在 index 操作中输出的：&lt;/p&gt;
&lt;p&gt;第一个例子测试！&lt;/p&gt;
&lt;p&gt;而不是原来的默认欢迎界面。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt; 增加操作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;要增加一个操作，只需在模块里增加一个定义为 public 的方法即可。在 IndexAction.class.php 里面新增加一个 test 操作：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;Content&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;charset&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;utf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;8&amp;quot;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &amp;quot;这是 &lt;span class="n"&gt;test&lt;/span&gt; 操作&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;要访问该操作，浏览器地址为：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;127&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;1&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Myapp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;浏览器输出如下：&lt;/p&gt;
&lt;p&gt;这是 test 操作&lt;/p&gt;
&lt;p&gt;可见要访问其他方法，需要在入口文件 URL 地址后面加上“模块/操作”才可以。关于通过入口文件 URL 地址访问模块方法的具体信息，请参看《ThinkPHP URL 访问模式》章节。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt; 小结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;控制器类文件名为 IndexAction.class.php 这种固定格式，对应 Index 模块，类名为 IndexAction&lt;/p&gt;
&lt;p&gt;我们自定义的模块里面的类由 ThinkPHP的 基类 Action 继承而来，其遵循 PHP 的类继承属性&lt;/p&gt;
&lt;p&gt;一个 Web 页面对应一个方法（反之则不一定），且该方法必须定义为 public 类型&lt;/p&gt;
&lt;p&gt;一个控制器文件里面只能有一个模块可用，但模块（类）可以有多个方法，也可以没有方法&lt;/p&gt;
&lt;p&gt;特别鸣谢5iDev网提供部分素材。&lt;/p&gt;</summary><category term="ThinkPHP"></category></entry><entry><title>杜绝拖延，提高工作学习效率</title><link href="http://hackecho.com/2011/10/work-with-high-efficiency/" rel="alternate"></link><updated>2011-10-08T02:06:27-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-10-08:2011/10/work-with-high-efficiency/</id><summary type="html">&lt;p&gt;导致工作效率降低的最大原因是拖延，说明这是一种耽误工作效率的糟糕习惯。辟如某事的行事方式，如果你发现有问题，那么你就应该立刻站出来，干脆利索的将事情解决掉，改掉拖延症，找出高效工作的方法。&lt;/p&gt;
&lt;p&gt;希腊神话告诉人们，智慧女神雅典娜，有一天从宙斯的头脑中披甲执戈一跃而出。人的最大梦想、最大创意、最大憧憬，就像雅典娜一样，也往往是在某一瞬间突然从头脑中很完备、很有力地跃出来的。但有计划而不去执行，使之烟消云散，这对于你的品格力量会产生非常不良的影响。&lt;/p&gt;
&lt;p&gt;一个生动而强烈的意象、观念闪入一位作家的脑海，使他灵光乍现，产生出一种不可阻遏的冲动——要想提起笔来，将那美丽生动的意象、观念移向白纸；但那时他或许有些不方便，所以不能立刻就写。那个意象不断的在他脑海中跳跃、催促，然而他还是拖延，最后灵感就会逐渐的模糊、暗淡，终于整个消失。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、拖延症就像容易上瘾的诱惑，需要坚定意志，努力克服。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;习惯中最足以误人的莫过于拖延，有许多人都是因为此种习惯所累而陷入困境。拖延的习惯，最能损害及减低人的做事能力。你应该极力避免拖延的习惯，就像避免一种罪恶的引诱一样。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、第一时间当机立断的着手解决问题。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;假使对于某一件事，你发觉自己有着拖延的倾向，你应该跳起来，不管事情处于什么样的困难中，立刻动手去做，不要畏难、不要偷安；这样久而久之，你就能改正拖延的倾向。&lt;/p&gt;
&lt;p&gt;你应该将“拖延”当作你最可怕的敌人；因为他要窃去你的时间、品格、能力、机会与自由，而使你成为他的奴隶。&lt;/p&gt;
&lt;p&gt;要医治拖延的习惯，其唯一的方法就是事务当前，立刻动手做去。多拖延一分，就足以使那事难做一分。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、克服犹豫、等待、厌烦等负面情绪，逆流而上一次性解决问题。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;“要做立刻去做！”这是成功人士的格言。“凡是将这句格言作为座佑铭的青年，永不会有悲惨的结局。”凡是应该做的事，拖延着不立刻做，留着将来再做，有这种不良习惯的人总是弱者。&lt;/p&gt;
&lt;p&gt;搁着今天的事不做而想留等明天做，在这个拖延中所耗去的时间、精力，实际上也够将那件事做好。&lt;/p&gt;
&lt;p&gt;做以前堆积下来的事，你会觉得厌烦！在当初可以很愉快并很容易做好的事，拖延了数日、数星期之后，就会显得讨厌与困难了。&lt;/p&gt;
&lt;p&gt;接到信件，应该立刻作复，最为容易；因此有的机关、公司中订下规则：不准任何来函隔夜不复。&lt;/p&gt;</summary><category term="拖延症"></category></entry><entry><title>深入浅出ThinkPHP系列教程(三) Hello World！</title><link href="http://hackecho.com/2011/10/thinkphp-hello-world/" rel="alternate"></link><updated>2011-10-01T00:19:53-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-10-01:2011/10/thinkphp-hello-world/</id><summary type="html">&lt;p&gt;今天我们来一步一步生成ThinkPHP的Hello World！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;入口文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个项目（系统）通常具有一个统一的入口文件，项目的所有功能操作都是通过这个入口文件进行的，并且往往入口文件是第一步被执行的，这是 ThinkPHP 或者说 PHP 框架中非常重要的一个概念。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建入口文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 Web 目录（E:html）下创建一个项目目录，如 myapp 。在 myapp 目录内创建一个文件index.php，文件内容如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;//定义ThinkPHP框架路径&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;THINK_PATH&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;../ThinkPHP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//定义项目名称和路径&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;APP_NAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;myapp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;APP_PATH&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//加载框架入口文件&lt;/span&gt;
&lt;span class="k"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;THINK_PATH&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/ThinkPHP.php&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//实例化一个网站应用实例&lt;/span&gt;
&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在入口文件中，定义了 ThinkPHP 框架路径、项目路径及名称以及加载框架入口文件 ThinkPHP.php ，最后实例化一个项目应用。&lt;/p&gt;
&lt;p&gt;保存入口文件后，在浏览器运行该文件：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;127&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;1&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;myapp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到浏览器出现项目构建成功提示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://thinkphp.cn/Public/Uploads/111112.gif" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;ThinkPHP框架的所有文件都是采用UTF-8编码保存，但是这不影响你的项目中使用其他编码开发和浏览。请注意确保文件保存的时候去掉UTF-8的BOM头信息，防止因产生隐藏的输出而导致程序运行不正常。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;如果你是在Linux环境下，要确保项目目录的自动生成，请设置Myapp目录的权限为可写，否则请自行创建相关目录。然后设置Runtime目录为可写权限（通常都是设置目录属性为777）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;项目目录结构&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第一次运行项目入口文件时，系统会自动生成了项目目录结构，在 myapp 下：&lt;/p&gt;
&lt;p&gt;Common：项目公共文件目录，一般放置项目的公共函数&lt;/p&gt;
&lt;p&gt;Conf：项目配置目录，配置文件放该目录下&lt;/p&gt;
&lt;p&gt;Lang：项目语言包目录（可选），作为多语言支持&lt;/p&gt;
&lt;p&gt;Lib：项目类库目录，通常包括Action和Model子目录&lt;/p&gt;
&lt;p&gt;Tpl：项目模板目录，支持不同模板主题&lt;/p&gt;
&lt;p&gt;Runtime：项目运行时目录，包括Cache（模板缓存）、Temp（数据缓存）、Data（数据目录）和Logs（日志文件）子目录&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;项目&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 ThinkPHP 中项目的概念，相当于一个独立的基于 ThinkPHP 框架的应用。项目有自己独立的入口文件、配置文件、应用类库及模板、缓存日志等。项目在入口文件中定义，包括项目名称和路径（如上面的例子）。&lt;/p&gt;
&lt;p&gt;项目中的应用都通过入口文件来访问，一个网站由一个或多个项目组成。一个网站的典型部署如下：&lt;/p&gt;
&lt;p&gt;ThinkPHP：ThinkPHP 核心包目录&lt;/p&gt;
&lt;p&gt;Home：网站应用项目目录&lt;/p&gt;
&lt;p&gt;index.php：网站入口文件&lt;/p&gt;
&lt;p&gt;admin.php：后台管理入口文件&lt;/p&gt;
&lt;p&gt;……更多项目目录&lt;/p&gt;
&lt;p&gt;第三方应用：BBS、SNS 等目录&lt;/p&gt;</summary><category term="ThinkPHP"></category></entry><entry><title>深入浅出ThinkPHP系列教程(二) MVC简介</title><link href="http://hackecho.com/2011/09/thinkphp-intro-to-mvc/" rel="alternate"></link><updated>2011-09-28T00:15:27-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-09-28:2011/09/thinkphp-intro-to-mvc/</id><summary type="html">&lt;p&gt;不论是在ThinkPHP的开发中，还是在一般的软件项目开发中，都要用到一种重要的开发思想，即MVC。维基百科中解释为：MVC模式（Model-View-Controller）是软件工程中的一种软件架构模式，把软件系统分为三个基本部分：模型（Model）、视图（View）和控制器（Controller）。&lt;/p&gt;
&lt;p&gt;通过这篇教程，让我们来简单熟悉一下MVC的基本思想，这也是使用ThinkPHP开发应用不可或缺的知识，否则你将寸步难行。&lt;/p&gt;
&lt;p&gt;MVC主要由三部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;（控制器Controller）- 负责转发请求，对请求进行处理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（视图View） - 界面设计人员进行图形界面设计。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（模型Model） - 程序员编写程序应有的功能（实现算法等等）、数据库专家进行数据管理和数据库设计(可以实现具体的功能)。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/09/ModelViewControllerDiagramZh.png" /&gt;&lt;/p&gt;
&lt;p&gt;本博客以前发布过一篇关于MVC的简单介绍，详情请点击这里：&lt;a href="http://www.hackecho.com/archives/138.html"&gt;《对MVC架构的简单解读》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;视图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;视图是用户看到并与之交互的界面。对老式的Web应用程序来说，视图就是由HTML元素组成的界面，在新式的Web应用程序中，HTML依旧在视图中扮演着重要的角色，但一些新的技术已层出不穷，它们包括Macromedia Flash和象XHTML，XML/XSL，WML等一些标识语言和Web services.&lt;/p&gt;
&lt;p&gt;如何处理应用程序的界面变得越来越有挑战性。MVC一个大的好处是它能为你的应用程序处理很多不同的视图。在视图中其实没有真正的处理发生，不管这些数据是联机存储的还是一个雇员列表，作为视图来讲，它只是作为一种输出数据并允许用户操纵的方式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;模型表示企业数据和业务规则。在MVC的三个部件中，模型拥有最多的处理任务。例如它可能用象EJBs和ColdFusion Components这样的构件对象来处理数据库。被模型返回的数据是中立的，就是说模型与数据格式无关，这样一个模型能为多个视图提供数据。由于应用于模型的代码只需写一次就可以被多个视图重用，所以减少了代码的重复性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;控制器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;控制器接受用户的输入并调用模型和视图去完成用户的需求。所以当单击Web页面中的超链接和发送HTML表单时，控制器本身不输出任何东西和做任何处理。它只是接收请求并决定调用哪个模型构件去处理请求，然后再确定用哪个视图来显示返回的数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;现在我们总结MVC的处理过程&lt;/strong&gt;，&lt;strong&gt;首先&lt;/strong&gt;控制器接收用户的请求，并决定应该调用哪个模型来进行处理，&lt;strong&gt;然后&lt;/strong&gt;模型用业务逻辑来处理用户的请求并返回数据，&lt;strong&gt;最后&lt;/strong&gt;控制器用相应的视图格式化模型返回的数据，并通过表示层呈现给用户。&lt;/p&gt;
&lt;p&gt;其实对于使用ThinkPHP开发，MVC的知识大家了解到这里就可以了，重要的是我们来看一下MVC在ThinkPHP中的运用。在ThinkPHP的每个项目文件夹下，有一个Lib文件夹，其中Action子文件夹中的文件可以理解为是ThinkPHP中的控制器层，Model子文件夹中的文件可以理解为ThinkPHP的模型层。有关项文件夹的目录结构，我们会在后续教程中为大家详细讲解。另外View类和模板问价可以说是ThinkPHP的视图层。我们可以这样来理解：&lt;strong&gt;ThinkPHP接收到一个指令，然后调用相应的控制器，控制器调用相应的模型类完成与数据库的交互，最后调用视图类，将生成的页面呈现给用户。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面是一张ThinkPHP的执行流程图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/09/232.gif" /&gt;&lt;/p&gt;
&lt;p&gt;最后要提醒大家的是，ThinkPHP的MVC模式只是提供了一种敏捷开发的手段，而不是拘泥于MVC本身。这一点大家在后面的开发也会有更深的理解。&lt;/p&gt;</summary><category term="ThinkPHP"></category></entry><entry><title>深入浅出ThinkPHP系列教程(一) 初识ThinkPHP</title><link href="http://hackecho.com/2011/09/intro-to-thinkphp/" rel="alternate"></link><updated>2011-09-26T21:01:23-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-09-26:2011/09/intro-to-thinkphp/</id><summary type="html">&lt;p&gt;&lt;img alt="thinkphp_logo" src="/static/images/2011/09/thinkphp_logo_505_92.png" /&gt;&lt;/p&gt;
&lt;p&gt;大家好，从今天开始，天堂皓月博客将开始撰写《深入浅出ThinkPHP系列教程》，希望大家多多支持！本教程中有一部分资料来源于互联网，如有不适和共享的地方请联系博客，谢谢！&lt;/p&gt;
&lt;p&gt;本系列教程学习前提：了解基本的PHP知识，懂得面向对象编程的思想，了解关系型数据库的基础知识，了解基本的网页设计知识。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt;什么是PHP框架？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于 PHP 的高度灵活、简单易用的特性，导致 PHPer 们常常陷入单调重复而令人生厌的体力活动的窘境。而这正是 PHP框架 要解决的问题。&lt;/p&gt;
&lt;p&gt;PHP框架 是一个 PHP 应用程序的半成品。框架提供了可在应用程序之间共享的可覆用的公共且一致的结构，而不仅仅是一组工具类。&lt;/p&gt;
&lt;p&gt;形象的来说，PHP框架 把 PHP 程序开发摆到了流水线上。换句话说，PHP开发框架有助于促进快速软件开发（RAD），这节约了你的时间，有助于创建更为稳定的程序，并减少开发者的重复编写代码的劳动。这些框架还通过确保正确的数据库操作以及只在表现层编程的方式帮助初学者创建稳定的程序。PHP框架 使得你可以花更多的时间去创造真正的 Web 程序，而不是编写重复性的代码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt;为什么要使用PHP框架？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;加速开发过程：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PHP框架 内置了预建的模块，免去了冗长又令人厌烦的编程工作。这样开发者就能够把时间花在开发实际程序上，而不是每一次都要为每一个项目重建基础模块。&lt;/p&gt;
&lt;p&gt;PHP框架 背后的思想被称为 模型—视图—控制器（MVC）。MVC 是这样一种架构模式：它隔离了业务逻辑与 UI，允许其一改变而另一者不受影响；在 MVC 中，模型负责数据，视图负责表现，控制器则是程序主体或者说是负责业务逻辑。从本质上说，MVC 拆分了一个程序的开发过程，这样你就可以修改独立的每一部分，而其他部分不受影响。这是十分重要的，它使得编写 PHP 代码更为快捷简单。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;成熟稳健性：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;但是对于大多初级开发者而言，PHP 是如此的简单以至于他们会完全没有意识地写出低质量的代码。这样的 PHP 程序可能在大多数时间内仍正常工作，但你可能已在代码中留下了巨大的安全漏洞，使其易受攻击。而 PHP框架 对一些基本的细节及安全性等做了处理，再次基础上开发出来的 PHP 代码会更加安全可靠。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可扩展性：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PHP框架 往往有着庞大的支持团队，使用者众多，它是不断升级的，你可以直接享受别人升级代码带来的好处。PHP框架 也方便的支持用户根据实际业务需求扩展自己特有的模块。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt;PHP框架解决了什么？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;快速开发：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如上面使用 PHP框架 的理由所言，PHP框架 模糊了 PHP 程序开发中的基本底层细节，使你可以专注于业务逻辑的开发，大大节约了项目开发时间与精力。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;编码规范：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PHP框架 的开发规范让大家在基于 PHP框架 开发程序时，所有的开发人员都遵循统一的编码开发规范。如此一来，程序代码将变得容易被其他人理解，项目成员在彼此合作开发时彼此的协作将更加协调，也有利于日后的项目维护及后续开发。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;避免常见的安全性问题：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PHP框架 已经对常见的安全性如表单检测、SQL注入等常见的安全问题做了一定的内置处理。当然，不是用上 PHP 就绝对安全了，最重要的还是要程序开发人员自己有安全意识与经验。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MVC 逻辑与交互界面分离：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一份逻辑代码可以支持不同的展现，而展现界面及交互休验的改进，也不用受制于逻辑代码的开发周期，二者可以同时进行。另一个附加的好处是，编写出的 PHP 代码会更加简单、整洁且易懂。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其他：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据需要构造出漂亮的 URL 等其他功能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt;PHP框架的不足？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PHP框架 的不足表现在以下几个方面：&lt;/p&gt;
&lt;p&gt;除了学习 PHP 之外，你还需要花费一定时间去学习 PHP框架，尽管这个过程并不复杂。&lt;/p&gt;
&lt;p&gt;当 PHP 成为框架之后，它的效率相对原生 PHP 程序，效率出现下降是不可避免的。&lt;/p&gt;
&lt;p&gt;当你使用 PHP框架 后，你以前的类库或者程序面临着重新改造的风险。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt;ThinkPHP简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ThinkPHP是一个&lt;strong&gt;免费开源的，快速、简单的面向对象的轻量级&lt;/strong&gt;PHP开发框架，遵循Apache2开源协议发布，遵循 MVC 模式，在 PHP 的基础上将一些 PHP 细节进行隐藏而组织出实际开发中最需要的功能。开发者在 ThinkPHP 框架的基础上能够进行快速敏捷的项目开发，明显缩短项目开发周期，提高开发效率。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt;为什么要选择ThinkPHP？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当有如下情况之一时，您需要选择一款 PHP 框架或者说选择 ThinkPHP 框架：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;需要进行快速的 PHP 开发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;需要基于 MVC 模式开发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以前是 Java 程序员或对 Java 熟悉。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目是多人协作模式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;刚具备一定 PHP 基础的初中级学习者。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;客户指定基于框架开发。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt;什么情况下不适合使用ThinkPHP？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当有如下情况之一时，您可能不需要 ThinkPHP 框架或者说 PHP 框架：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;进行 PHP 语法学习。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开发很小的功能，如留言板或网站投票。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;非常讲究程序运行效率。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 PHP 框架对已有的系统改造代价巨大。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多年开发经验，已经形成了自己惯有的开发模式与类库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;纯 PHP 代码爱好者。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="ThinkPHP"></category></entry><entry><title>打工与注册公司创业的区别</title><link href="http://hackecho.com/2011/09/difference-between-work-and-create/" rel="alternate"></link><updated>2011-09-23T11:22:40-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-09-23:2011/09/difference-between-work-and-create/</id><summary type="html">&lt;p&gt;自己打工与注册公司有什么区别，有人说都是为了赚钱，都是为了生活。但这两这还是有本质的不同。&lt;/p&gt;
&lt;p&gt;1.打工是靠自己的能力吃饭，注册公司是靠自己的智慧和思考吃饭；&lt;/p&gt;
&lt;p&gt;2.打工是靠别人给自己的平台来展示能力，注册公司是靠自己的决心和眼光创造一个平台；&lt;/p&gt;
&lt;p&gt;3.打工是做好自己的本分工作就好，注册公司是要思考体系运作的每一个环节；&lt;/p&gt;
&lt;p&gt;4.打工的人期望的是一周有两天休息，注册公司的人是思考的是如何能低成本的运作；&lt;/p&gt;
&lt;p&gt;5.打工的不愿意真实的面对自己的收入，注册公司必须要真实的面对自己的实力和财务状况；&lt;/p&gt;
&lt;p&gt;6.打工的时候想的是自己的经历和文凭应该值多少钱，注册公司的时候想的是自己的勤劳和策略能创造多少钱；&lt;/p&gt;
&lt;p&gt;7.打工时想用自己的专业知识吃饭，存钱养家，注册公司时候想的是如何利用社会资源来赚钱养活组织和员工；&lt;/p&gt;
&lt;p&gt;8.打工的人一般都比较天真，认为辛苦和听话就可以长保无忧，注册公司的时候才知道市场的变幻简直就是日不可测，日不可知；&lt;/p&gt;
&lt;p&gt;9.打工搞好上司和同事关系就可以生活，注册公司要搞好客户和社会方方面面的关系才能生存；&lt;/p&gt;
&lt;p&gt;10.打工要看上司和老板的脸色，注册公司看社会消费者和主管行政部门的脸色和媒体的脸色；&lt;/p&gt;
&lt;p&gt;11.打工想的是今年我能存多少钱，发多少奖金，注册公司想的是今年能开多少店，占多少市场份额；&lt;/p&gt;
&lt;p&gt;12.打工人今天天下雨和下雪，没有客人就很高兴，可以放松偷懒，注册公司想的今天天气下雨下雪，心如火焚，着急无比，如何吸引客人上门；&lt;/p&gt;
&lt;p&gt;13.打工碰到问题就是解决问题，注册公司就要想这个问题的根源是什么，怎么解决，还要怎么预防；&lt;/p&gt;
&lt;p&gt;14.打工碰到困扰自己的问题就回避，认为不能解决，注册公司碰到自己头疼的问题必须要勇敢面对，并积极的想办法解决；&lt;/p&gt;
&lt;p&gt;15.打工的时候把工作堆起来，能拖就拖，尽量少事情为好，注册公司的时候才知道问题堆在那里，就会成不定时炸弹，保不准那天公司和自己与员工就都被这问题炸死了；&lt;/p&gt;
&lt;p&gt;16.打工时候看着钟点，踩着钟点来感觉很心安，注册公司的时候每天时刻都得想怎么生存发展；&lt;/p&gt;
&lt;p&gt;17.打工的时候总是希望老板来请客，认为那是天经地义的，注册公司的时候感觉请客就是一种割肉，但是总是得大方的主动买单；&lt;/p&gt;
&lt;p&gt;18.打工的时候到晚上八点就把电话关了，唯恐有人来麻烦，注册公司的时候三部电话放在床头24小时不关机，希望有人来关照生意；&lt;/p&gt;
&lt;p&gt;19.打工的人信心都在身体里面埋藏，注册公司的人信心都在身体外面张扬；&lt;/p&gt;
&lt;p&gt;20.打工的人最不希望在大厅观众面前跟别人说自己是马仔，注册公司的人最怕在公共场合之中听别人说自己是老板，特别是没有成功时候；&lt;/p&gt;
&lt;p&gt;21.打工时候电话费总是要省了又省，最好的是公司的电话无偿使用，出门在外，给老板电话，也是响了一下马上挂了，注册公司的时候电话总是咬咬牙要拨打，即使长途电话，只要是自己的合作方和客户，总是要等对方挂线，哪怕心上很疼也得承受；&lt;/p&gt;
&lt;p&gt;22.打工碰到一些困难就打退堂鼓，想圈起行李走人或是逃避责任，而注册公司碰到困难必须要面对解决，把问题的最终解决在自己的手中；&lt;/p&gt;
&lt;p&gt;23.打工时候听到公司来了一个新同事能力比自己强，总是对他有嫉妒和提防心理，注册公司的时候总是渴望能够网罗到比自己能力高很多的俊杰和能人。&lt;/p&gt;
&lt;p&gt;24.打工就是做学生，只要学习成绩好就好，注册公司就是做老师，要教好学生，还有想办法搞好学生思想工作，做好外部职称评定工作；&lt;/p&gt;
&lt;p&gt;25.打工就是上大学，越自由越好，最好不要管理，越散漫越开心，这就是性格和酷，能随心所欲是欢喜不尽，注册公司就是办大学，最好是军训和男女不能同居，唯恐出一点点差错，毁了所有的心血和劳动；&lt;/p&gt;
&lt;p&gt;26.打工的时候，不希望有人来管理自己，觉得自己很了不起，一点点都看不起那些比自己低的人呢，注册公司的时候才知道，多么希望有个好的导师和善知识来指点和帮助自己，越来越感觉到自己其实最没有什么了不起，所有比自己差的人都要尊重起来，因为没有任何人可以短缺；&lt;/p&gt;
&lt;p&gt;27.打工的时候想的时，无聊的时候有个恋人的问候和惊喜来温暖自己，注册公司的时候在无聊时候想的是有个重要的客户突然跟自己能签订一笔采购订单合同；打工的时候想的是这月能发多少奖金，注册公司的时候想的是这月又损耗了多少的产品，能通过什么方式节省下来；&lt;/p&gt;
&lt;p&gt;28.打工的时候不知道感情到底有多么重要，不知道珍惜是什么，注册公司的时候才知道有个恋人人能在自己孤军奋战时鼓励和帮助是人世间最难的福报；&lt;/p&gt;
&lt;p&gt;29.打工时候不知道要孝敬父母和事业有什么关系，要是没有钱花，自己干脆就忘记了家人，反正自己一个人吃饱就好，注册公司是时候才知道，做人都不好，根本就没有人来信任您，不孝敬父母注册公司根本就赚不到安心的钱；&lt;/p&gt;
&lt;p&gt;30.打工的时候不希望求别人，不希望去打搅人，注册公司的时候天天都得去求别人，天天都得主动出击给朋友客户信息和短信，麻烦别人；&lt;/p&gt;
&lt;p&gt;31.打工时候总是希望能够多学习很多的资格证书，最好是博士后，再加人力资源管理师，会计师，培训师等等的培训证书有十多二十个，注册公司的时候才发现最好就是一个不知道一切的勇夫蛮汉，什么文凭和职称和证书根本就是百无一用；&lt;/p&gt;
&lt;p&gt;32.打工时候看到对方给的名片是某某跨国公司的某某总监，年薪XX万，心理就羡慕和自卑，极度的恭敬和小心，注册公司时候，只有一个人，也敢对自己人说，将来要培养这样的总监经理几十个；&lt;/p&gt;
&lt;p&gt;33.打工的时候听到有人介绍别人这是这个行业里的教授、导师、专家、大师的、成功者的时候总是恭敬有加，注册公司的时候，每每听到这些心里就有些窃笑，知道学识并没有什么了不起，讲得好，不如做的好，实践是产生智慧的唯一途径，感觉自己才是真正的专家；&lt;/p&gt;
&lt;p&gt;34.打工的时候不怎么在意媒体和记者，注册公司的时候想记者又怕记者；&lt;/p&gt;
&lt;p&gt;35.打工把产品当商品，当成谋生的东西，任其随意丢放，注册公司的时候把自己的产品当恋人，当另一半，烂了坏了，损伤了都心疼不已；&lt;/p&gt;
&lt;p&gt;36.打工的时候把恋人当恋人，双方互不干涉，当盖身的被子，给自己取暖遮寒，注册公司的时候把恋人老婆当宝贝和珍宝，唯恐她跑了自己事业不能成功，必须要双方保稳定和同心协力；&lt;/p&gt;
&lt;p&gt;37.打工的时候梦想有一天自己能够娶到老板的和女儿，这样就可以少奋斗二十年，注册公司的时想的是原来天下没有任何事情比自己的坚强和努力更重要，天上不会掉馅饼；&lt;/p&gt;
&lt;p&gt;38.打工的时候，想嫁给一个好老公，可以衣食无忧，做师奶，注册公司时候才知道，最不愿意找这样一个女人来跟自己分享自己的心血和财富；&lt;/p&gt;
&lt;p&gt;39.打工的人是很喜欢热闹，喜欢群居的，所以打工的人是喧闹而享受的，注册公司的人是希望宁静和思考，所以注册公司的人是每每在欲望里对自己的身心做修正；&lt;/p&gt;
&lt;p&gt;40.打工的人把希望寄托给伯乐，注册公司的人把希望交给自己；&lt;/p&gt;
&lt;p&gt;41.打工的人把梦想托付给机会，注册公司的人把生命交付给信念和上帝；&lt;/p&gt;
&lt;p&gt;42.打工的人若是要能比喻就好比是家狗，注册公司的人是好比是野狼。这个世界上最终是狼比狗少，因为大部分人呢都愿意做狗。这是自然界的物种存在的现象；&lt;/p&gt;
&lt;p&gt;43.打工的人占80%，注册公司的人占20%，因为打工的人都希望能够在注册公司者的大树下蒙荫；&lt;/p&gt;
&lt;p&gt;44.打工的人不明白，自己拿比注册公司者至少八倍的收入，其实是在一开始就决定了的，而注册公司的人也不明白，自己靠着那么多的心血智慧和付出赚了钱，居然产生原罪感是不应该的。&lt;/p&gt;</summary><category term="创业"></category></entry><entry><title>创业与梦想</title><link href="http://hackecho.com/2011/09/dreams-and-creature/" rel="alternate"></link><updated>2011-09-18T00:57:52-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-09-18:2011/09/dreams-and-creature/</id><summary type="html">&lt;p&gt;今天在42qu上看到一个提问：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“@Firenze : 现在是不是在一种创业狂潮的状态中？为啥每个人都在想要做一个网站然后可以如何如何可以怎样布局怎样找风头怎样拿政府扶植怎样获得盈利模式一轮融资二轮融资。这究竟是大家都看到了创业者成功的那些少数派案例然后都想来分一杯羹还是只是我现在所在的圈子是这样？又或者这是一个必然的趋势的发展方向？”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;有一个精彩的回复非常好，转载收藏。&lt;/p&gt;
&lt;p&gt;——作者：Dreamer&lt;/p&gt;
&lt;p&gt;在两个年轻人在斯坦福实验室里创造 Yahoo! 的时候，互联网的创业就与传奇和梦想划上了等号，之后的 Google 和 Facebook 一次又一次地让所有人确信这一点。它们都诞生在不起眼的大学宿舍，都在很大程度上改变了世界影响了人们的生活。所以在这个创业渐成风气的年代，你总能看到国内很多初创互联网公司大叫“我们年轻，所以我们有梦想”，它们在招聘的时候也会特别注明应聘者一定要有“激情和梦想”。&lt;/p&gt;
&lt;p&gt;然而事实真的如此吗？&lt;/p&gt;
&lt;p&gt;不知道别人怎么定义“梦想”这个词，我觉得“梦想”应该是一个很美好的东西。它触动你的心灵，让你感动；它激发出你的全部热情，而不是贪婪；它发自内心、来自于自己的反思和独立判断，而不是别人的煽动和灌输。&lt;/p&gt;
&lt;p&gt;以前我也常憧憬着去一家创业公司，那个时候我不满大公司的臃肿和低效，痛恨他们的官僚和笨重，觉得创业公司是梦想、激情、灵活和创新的化身，它一定没有那些大公司的毛病。我想象着那里的每一个员工都热爱自己的产品，每一个人都是产品的客服，都愿意贡献自己最大的力量让产品趋于完美。后来因为一个机会，我加入了一家创业公司。在大半年的时间里，我看着它完全抄袭别人的产品，看着它的员工由几十人增加到一百多人，看着它空降大批高管，看着它为了吸引风投大量招聘不合格的人，看着它逐渐变得臃肿和官僚。除了招聘和开会的时候老板总会佯装激动地说起“梦想”之外，它和梦想再没有任何关系，甚至它的工程师也只有在调试的时候才愿意使用自己的产品。&lt;/p&gt;
&lt;p&gt;尽管这家公司后来顺利拿到了一笔数目可观的风投，我还是没能说服自己在那里继续呆下去。以后它可能会成功上市挣很多很多钱，不过即使那样我也不会后悔当初的决定，因为它完全没有那些“传说中的”创业公司应该有的美好品质。&lt;/p&gt;
&lt;p&gt;从那以后，我开始反思创业这件事情，想要弄清楚国内有没有一家创业公司不是靠对金钱的渴求而是靠激情和梦想驱动，有没有一家创业公司像当年的 Google 那样不打算做传统型公司。&lt;/p&gt;
&lt;p&gt;然后，你猜得很对，结果让我非常失望。很多创业公司的目标就是疯狂获取利益然后成为有成千上万员工的大公司，所以它只希望你有发财升职的梦想，至于创新和社会责任感，对不起，那些只是手段而已，你想得太多了。&lt;/p&gt;
&lt;p&gt;我所知道的互联网创业者大概可以分为两类，一类是大公司的管理层，这类人年龄已经30多岁，在这个行业算年龄比较大了。他们过去凭借自己的能力在某个大公司获得了不错的职位，但是看到之前共事过的张三李四都出来创业而且居然还有人成功了，便开始想要有“自己的事业”，然后正好看到一些东西刚刚起步又有不错的前景，于是就辞职出来自己创业，一般还会顺手带走一些亲信员工。另外一类就是荷尔蒙比较多的年轻人，他们刚刚毕业，有的是激情和青春，正好看到一些东西刚刚起步又有不错的前景，于是就和几个同学或者同事出来创业。至于什么东西“刚刚起步又有不错的前景”呢？很简单，多留意美国那边，看到那边什么东西火了直接照抄过来，然后做一些“本土化”的小改动。以前他们把这个叫做 C2C —— “Copy to China”, 后来觉得整个行业也都是这样了，不用再自卑——“中国人最擅长模仿，能抄出来也行呀！”，所以他们现在把这个叫做“微创新”。&lt;/p&gt;
&lt;p&gt;需要说明的是，我并不是一个反对商业的人，也不觉得赚钱有“铜臭味儿”。在这个商业社会中，依靠自己的能力和价值赚钱不只是生存之必须，也是一件值得骄傲的事情。只是如果单纯挣钱，应该不能和梦想扯上关系，创业是挣钱，在一家公司打工也是挣钱，为什么打工是“日复一日没有心跳地生活”，而创业就是伴随着激情和梦想呢？我并不鄙视想要上市和发财的人，但与这样的创业相比，“我长大了要做一个科学家”更配得上称之为梦想。&lt;/p&gt;
&lt;p&gt;在山的那边海的那边有一个彩票站，这个彩票站和城镇各处可见的彩票站不一样，它有一个很吸引人的地方：中奖率高那么一点儿。所以有很多人就组团分别向这个彩票站进发，他们斗志昂扬，激动得面红耳赤，恨不得让全世界都为他们欢呼，“看，我们要不畏艰难地去买彩票了！”。&lt;/p&gt;
&lt;p&gt;这些愿意踏遍千山万水去买彩票的人，也不过只是一群买彩票的人。我一点儿也不怀疑他们可以中奖，但我怀疑他们是否真正有梦想。他们或许可以称之为“淘金者”，但是绝对不配叫做“梦想家”。&lt;/p&gt;
&lt;p&gt;本来渴望通过创业获取更多的金钱和更高的社会地位是一件无可厚非的事情，也是一种很正当的手段，但是希望那些只为了上市和捞钱的创业公司不要总用“激情”煽动别人，拿“梦想”来美化自己。这对于公司来说只是一种策略和手段，但对于一些真正有梦想的人来说就是欺骗。你们并不需要真正有梦想的人，你们需要的是为了挣大钱什么事都愿意做的人，真正有梦想的人也不会认同你们的理念，所以何必浪费彼此的时间呢？而且很多人加入创业公司的时候都幻想自己是公司的“主人”，以后成功了可以得到很多，但事实上很多创业公司其实只属于最初的那几个创始人，所有后来加入的都会被当作“打工者”而不是“合作者”，你能不能得到他们许诺给你的东西全凭创始人的人品。你可曾听说过一句话叫做“一将功成万骨骷”？&lt;/p&gt;
&lt;p&gt;现在创业开始成为一种潮流，越来越多的行业领袖和业界名人都鼓励大家去创业，历数小公司的好处和大公司的缺陷，事实上他们举的迷人的例子基本都是国外的公司，国内那些小公司可能并不是他们说的那样好，甚至比大公司还要差。很多大公司因为品牌和更大的利益还会有所忌惮，小公司就百无禁忌了，发垃圾邮件、到网上到处散播链接做SEO和滥用用户资料这样的事情很多小公司应该都做过。&lt;/p&gt;
&lt;p&gt;另外，因为中国的环境特殊，出现了腾讯和百度这样的垄断巨头，按照很多人的说法，这“极大地扼杀了中国互联网的创新”。这样的巨头的确应该受到谴责和约束，但很多创业公司自己的产品不好用，背地里也没有少干了坏事，为什么指责腾讯和百度的时候就忽然变成了理想和创新的化身呢？毫无商业道德地把用户桌面当战场的3Q大战就不用说了，像互动百科这种和百度百科一样无视知识产权抄袭了很多别人内容的网站，现在居然也“满怀激情”地打着维护行业环境的旗号出来博取同情，真是恬不知耻。&lt;/p&gt;
&lt;p&gt;你或许会说：“并不是所有的创业公司都是这样。” 是的，我并不想打击那些创业者，也没有在所有的创业公司都呆过。但是现在很多创业公司都在拼命比赛谁可以更快山寨出国外的产品，大部分人根本没考虑过自己真正想要什么样的生活，大学生们不知道自己的兴趣找工作的时候只看哪里钱多有前景。在这样的大环境下，一个员工会对公司抄袭来的产品会有多少热爱，又有多少创业梦想经得起反思和推敲呢？本来创业应该是一件很好的事情，但是中国毫无社会责任感的互联网企业已经够多了，我们不需要再有另外一家。&lt;/p&gt;
&lt;p&gt;在互联网行业呆得越久，越发现这个行业的表里不一，看上去是个充满理想主义、承载着创新和自由的新兴行业，其实是披着光鲜外衣的传统行业，甚至很多地方还不如传统行业。很多创业公司都只想着山寨国外的产品，然后又暗暗祈祷百度腾讯不要山寨同样的东西，他们对自己做的东西缺乏真正的热情，看不到国外很多简单的 idea 下面更本质的东西，只幻想着以后公司规模可以达到多少人，什么时候可以上市。有人卖煎饼开小店也是创业，没有见他们自恋得觉得自己做了多么了不起的事情，为什么同样只为了赚钱的互联网公司就觉得自己是激动人心的呢？有些凭借一点儿机遇成功的公司，连创造第二个成功产品的能力都没有，就算每个月赚 1 个亿也不过是在糊口而已。这样的公司除了创造了一些就业机会之外，我看不到它任何存在的价值，它有什么资格谈论梦想呢？&lt;/p&gt;
&lt;p&gt;记得在上中学的时候就经常看到一些书上说“中国的经济发展依靠的是廉价劳动力，中国产品的核心竞争力是价格而不是价值，我们的创新能力和欧美有着巨大的差距，所以整个社会都在向创新和价值转型”。十年过去了，中国的经济迅速发展，无数大学生都进入了社会，在获取信息方面和西方的差距也越来越小，但我们依然看不到创新的井喷。与之相反，越来越多的尖端人才想要去做公务员，就连互联网这种本该充满活力的行业也还是在依靠廉价劳动力和用来自慰的“微创新”。&lt;/p&gt;
&lt;p&gt;那些真正追求美好事物不甘平庸的梦想家们，那些不愿意忍受当前污浊空气想要颠覆传统的“反派角色”们，你们在哪里呢？&lt;/p&gt;
&lt;p&gt;本文非常感谢银古和猛犸阅读初稿并给出修改意见。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;其实不用我多说，有两年互联网从业经验的人应该都知道互联网创业公司是怎么一回事，就算自己没有亲身经历过也应该听过一些故事。他们已经看清了现实，选择创业一般都是为了快点儿挣钱，心里很清楚“梦想”什么的不过是外交辞令。但是，有一些刚毕业的大学生应该还是心怀梦想的，他们很容易被煽动，很可能还没有来得及想清楚就脑子一热跟着创业去了。&lt;/p&gt;
&lt;p&gt;第一份工作很重要，它会影响到你对社会的认识和对未来的看法，如果进了一家糟糕的创业公司，可能会让你对创业这件本来美好的事情形成错误的认识，以后绝对不会再选择去创业。而且在工作之前一个人很难有独处的机会，上课的时候有同学，下课了有室友，回家了有父母。工作之后你才真正开始独立，才有机会学习和自己相处，而只有经历过独处你才可以真正了解自己是什么样的人，明白自己想要什么样的生活。&lt;/p&gt;
&lt;p&gt;与其一毕业就跟着一帮不知道自己在干什么的人瞎混，忙得连思考的时间都没有，不如先花一点时间好好认识一下自己，等确定自己内心真正想要什么的时候再出来创业。那个时候你的梦想还在，也会更加坚定，就更有可能给这个乌烟瘴气的行业带来一点儿新鲜空气。&lt;/p&gt;
&lt;p&gt;推荐一本书：《自由之路》，可试读部分章节。还有一篇文章：《大学一解》。在真正的大师面前，人生导师不值一哂。&lt;/p&gt;
&lt;p&gt;最后，希望我的担心是多余的。&lt;/p&gt;
&lt;p&gt;原帖链接：&lt;a href="http://machao.42qu.com/10086842"&gt;http://machao.42qu.com/10086842&lt;/a&gt;&lt;/p&gt;</summary><category term="创业"></category></entry><entry><title>10款非常酷的 jQuery 内容滑块插件</title><link href="http://hackecho.com/2011/09/10-cool-jquery-slides/" rel="alternate"></link><updated>2011-09-16T11:25:25-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-09-16:2011/09/10-cool-jquery-slides/</id><summary type="html">&lt;p&gt;我们在做网站前端开发的时候经常会用到内容滑块插件，而网上又难以找到系统的、功能强大的完整教程。Troy在这里收藏最最经典而且效果非常酷炫、功能强大的10款 jQuery 内容滑块插件。每个插件下面都有针对这款插件详细介绍的链接。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.jQuery HTML Content Slider&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://sn2files.storage.live.com/y1pAGZ2hcCfv2CQOJ2flJ0Hl3gzZEHz4EkYHMKve6aLAc78X-8991UHBdVXuV5nCZQuuZQngArt0-XgNY_Lkj3Pcw/1.PNG?psid=1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bxslider.com/"&gt;More Information on jQuery HTML Content Slider&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.Awkward Showcase – A jQuery Plugin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://sn2files.storage.live.com/y1pvP3ooRkPU05ZmPb1qP6CBv6EYC3aUQZk8QwQwqAOBUzbJ38CN7e9HLt5nLMaJQLgciNHm_mhFVeguTD8OyhSKA/2.PNG?psid=1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.awkwardgroup.com/sandbox/awkward-showcase-a-jquery-plugin/"&gt;More Information on Awkward Showcase – A jQuery Plugin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.Diapo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://sn2files.storage.live.com/y1phjrx18GpoUiAIlZB90sHvOO1ux7UQHzaHEx_36xUDnhKGs-7aT1kYtsAcn4h3SbVt4gLznB3eIQlUiU_AQOJPg/3.PNG?psid=1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.pixedelic.com/plugins/diapo/"&gt;More Information on Diapo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.Smooth Div Scroll&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://sn2files.storage.live.com/y1pyHHBkYkEfsr0fvzitqKR718_X_H2IUCdftFfBVIDp1hNM5GzMkAagwuOFFpERnDyfGAVX5GKfaa4QDoFhusRJg/4.PNG?psid=1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.smoothdivscroll.com/#quickdemo"&gt;More Information on Smooth Div Scroll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.Box Slider&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://sn2files.storage.live.com/y1pzgEPMkO2GMY1peDQbSplYd4hH0tBa5R17VjRl6OxfS9DehkPrYAIcb0q-UBkuIpLrIEVEKmOchg00YoDsN6irg/5.PNG?psid=1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://nv.github.com/box-slider/"&gt;More Information on Box Slider&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.FlexSlider&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://sn2files.storage.live.com/y1pwFu_lzHY5iVNipga0rBq9S6PKGjAQv1uAeUWHFASmNS4t3DBdy8M5nUzhMRxS-6h7YWRnJxIfE-gDMzvofW-0g/6.PNG?psid=1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://flex.madebymufffin.com/"&gt;More Information on FlexSlider&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.Cloud Carousel&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://sn2files.storage.live.com/y1pqgPbbJqlNVTWRtM9l_wZ_sHCxFJfe8jE_AhRnpx-iWQj0nF6Dq9_9BA_IYFwzG9fC1t-xPdfgzxF6XuQGul6IA/7.PNG?psid=1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.professorcloud.com/mainsite/carousel.htm"&gt;More Information on Cloud Carousel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8.Sudo Slider&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://sn2files.storage.live.com/y1p7I1kTcMbSnr-uLJ8WoxTbdFJ0EMb2t7bpWwFLjt1M9jHuGOlYMq8gjb6mjVmL-uxQg700go_keoykqqU88X9vA/8.PNG?psid=1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://webbies.dk/SudoSlider/#2"&gt;More Information on Sudo Slider&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9.Easy Gallery&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://sn2files.storage.live.com/y1pPByPBC8kOuGhHkaksY5hdGKPh6PF9HM6sl2xkF2WeE-OI6vl9bbTxYhSf_mPreuXTiGifkErwSkrRY5O7NlyTQ/9.PNG?psid=1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.freelancer-id.com/easy-gallery/"&gt;More Information on Easy Gallery&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10.Jquery – Lite Content Slider&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://sn2files.storage.live.com/y1p14ombGwz2371VZnRZcGLNofBVjlAOLDLmWxJNUumlpJyXMVEz_Xk9epdlyHWd7DMYcGdRI5X0IDnwM101muIlw/10.PNG?psid=1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.aakashweb.com/resources/pages/demos/jquery-lite-content-slider/"&gt;More Information on Jquery – Lite Content Slider&lt;/a&gt;&lt;/p&gt;</summary><category term="jQuery"></category></entry><entry><title>中国风，将唯美雅韵进行到底</title><link href="http://hackecho.com/2011/09/beauty-of-chinese-article/" rel="alternate"></link><updated>2011-09-14T18:13:48-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-09-14:2011/09/beauty-of-chinese-article/</id><summary type="html">&lt;p&gt;&lt;strong&gt;好久没有读到如此荡气回肠的文章了，中国风，是一种生活态度。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;翻开中国滚滚历史长卷，墨香墨离，各个朝代独领风流，各个领域人才辈出，上至轩辕开天大战蚩尤，惊天地，泣鬼神，统制九州，九樽青鼎为鉴，苍松白鹿为证，黄帝仙逝，轩辕氏仍逐鹿中原，人才济济，舜尧两帝，开创文明先河，黄河长江流域谱写华丽篇章。­&lt;/p&gt;
&lt;p&gt;中国华夏五千年文明泱泱流淌，川流不息，讫立世界民族之林不倒，像明珠矗立在世界的东方，成为四大文明古国之一，其经济、文化、历史、建筑、佛法…都为世界做出了巨大的贡献，古老而神秘的国度，散发着朦胧的书香气息，其高超的技艺，精美的墨笔，巧夺天功的神来之笔，为华夏文明装点上一层浓厚的翰林墨息。­&lt;/p&gt;
&lt;p&gt;至统领九州以来，各朝各代，文人儒客，风流倜倘，身着素衣，手握折扇，不羁一格，吟诵明月诗篇，歌窈窕乐章，不为世旅尘俗所累，放心绿水之湄，听风吟月，自在江上泛舟轻摇，一壶残酒，一蓑烟雨，坦荡一生，不为功名利碌尽折腰，我手写我心来记录历史的尘埃。­&lt;/p&gt;
&lt;p&gt;默默地摩娑字里行间流露出浓厚的书香气意，看着唯美画笔的字墨，听着婉转优扬的音律，感觉那份自然份那纯真，遥远的国度下，灵魂游走，湫然空灵的娟澈夜雨，泛落在青花蝶韵的细腻流年里，当铁甲金戟融透在时间的漏沙里，流逝的岁月，确总能记下孤单笔者遗留的华丽诗篇。­&lt;/p&gt;
&lt;p&gt;灵感触动着心里最后一根易断的弦，风驰而过的韶华，痴恋着淡忘在容颜下的花泉月下，泛黄遗落的丹青，印烙下五千文明的佳话，文人墨客，一展风华，品着清茗，醉笑，尘埃落定，挑着青灯摒缺忆，手握锄荆葬落花，恨晨曦破晓，怨红颜易老。­&lt;/p&gt;
&lt;p&gt;荏苒青葱少年华发，豆寇失落，握杯的指是寂寞的，而多年前的那场天涯初雪，穿透岁月的寒凉，埋藏在一粒粒相思的红豆里，那些悲鸣怨秋的鹧鸪，用深沉的感触，与诗章词句里的意境共鸣，与流露而出的悲阙共眠花下，与青碑下不老的年华，共赏佳句。­&lt;/p&gt;
&lt;p&gt;寻着风骚楚辞，在汨水河畔，屈子怀瑾握玉，朝饮坠露，夕揽素漭，离骚一赋，千古绝唱，沧桑正道，留下一个孤独的夜行人，披头散发，慢慢的走进滚滚浪花中，湮灭，如凤凰浴火涅磐般从容不迫。那些游走在错落流年己的未解之迷，随着他，埋葬在冰冷的水域里，用梦的残翼，给奸佞之人，挂上一副沉重的枷锁，为世人带来一丝破晓前黎明的曙光。­&lt;/p&gt;
&lt;p&gt;苍白双鬓，陶潜握锄篱下，吹着和煦的凤，赏菊花泉月下，柳絮纷扬陌路，终南山下，静看夕阳归鸿，风绻云舒，闲庭屋檐花落成片，渔舟唱晚，淡雅素墨，醉卧椅栏，美丽的彩蝶穿梭竹林，停留再一朵沾者晨曦的野菊上，溪泉涓涓流淌，浣花静静漂流，青苔覆盖风驰而过的朱砂，穷徒陌路下，优雅的看淡过往云烟，回眸嫣然一笑，非宁静无以致远，非淡泊无以明志。舟摇摇而轻扬，风飘飘而吹衣，椅南窗以寄傲，感悟云无心于出岫的婉转清悦。­&lt;/p&gt;
&lt;p&gt;追着梦的翅膀，在亘古不变的神话里寻觅着遗留下的一抹痕迹，它是秋日诗笺中最华丽最浓厚的一墨纸香，荡漾在仕女阿娜的舞姿里，散落在豆寇浅浅的酒窝中，流传在黛妆素颜的笑靥里，宛若太阳衬托下几颗寥弱晨星，却似皇冠上烘演而出的明月，一场盛世烟花，璀绽整个历史的天空，盛唐之世，祯观之治，馥香富贵牡丹，妖娆半座城池。­&lt;/p&gt;
&lt;p&gt;文唐盛世，笔墨生花，初唐四杰，展露锋茫，盛世繁华下，太白于浪漫的情怀，抒写半壁江山了摇兰舟于碧波江上，酒入愁肠，指剑对月，落影花眠，放白鹿于青崖间，走访五岳名川，共醉明月于忘川前，踏着穆雪，寻找遗落的风流，用醉笔细描唐朝盛世江山，妖姬祸乱天下，手握一剪梅，骑着毛驴，穿梭蜀道，在桃花深谭边，看鸭子知春暖。­&lt;/p&gt;
&lt;p&gt;穿浪前行，时间停留在杜甫草堂，手摸橱窗，在桂影斑驳的梅花扇下，用残缺的梦，为广厦赢得一片聚欢颜，星垂平野阔，月涌大江流，曾在秋风萧瑟郁抑南平，在悲凉的冷雨夜中阙阙痛悔，迟暮的心，残缺的笔，记录下世间的痛，泪下的苦。­&lt;/p&gt;
&lt;p&gt;雕栏玉砌随风去，忧愁，恰似一江春水向东流，他本是烟花三月里踏歌而行的倜傥书生，他本是莺飞草长里吟风弄月的风流才子，奈何春花秋月，短暂的定格在锋火狼烟的江山，他沉溺诗词歌赋，精通乐律，描笔生花，参研书法，却奈何兵临城下时，半城烟沙，满目狼籍，如手无腹肌之力的书生，独自在梦里，一响贪欢，当朱颜一改，回首可堪秦时明月，一支纤弱的画笔，却怎么也描不出，“梦里不知身是客，别时容易见时难”的意境，曾经的梦幻童话，如镜花水月，虚妄一场，­&lt;/p&gt;
&lt;p&gt;望眼欲穿，持笔清扬，苏轼孓立赤壁，彼岸乱石，惊涛拍岸，卷起千堆雪，江山如此多娇，竟引无数英豪尽折腰，当年赤壁一战，三国逐鹿天下，“自古红颜多薄命，残花败影随流水”貂蝉让方天画戟失魂，大乔小乔媚乱天下英杰，孔明羽扇纶巾，略施小计，火烧孟德，樯撸灰飞烟灭，周瑜江东才俊，间锋箭雨下，文书儒雅，残花败影随流水”貂蝉让方天画戟失魂，大乔小乔媚乱天下英杰，孔明羽扇纶巾，略施小计，火烧孟德，樯撸灰飞烟灭，周瑜江东才俊，间锋箭雨下，文书儒雅，风流翩翩满天下，然则当月出东山之时，诵华丽明月诗章，歌瑶四起，侣鱼虾而友糜鹿，毓秀钟灵，点缀华美雕花，早生华发，一樽还酹江月。­&lt;/p&gt;
&lt;p&gt;浪花淘尽英雄汗，一只独秀照仑宇，黄花憔悴人消瘦，玉手断尽天下愁，重宵烟火几幽深，庭院墙落花影动，人似缺魂醉尽数，残酒晓窗，橱纱飘逸，椅着危楼，独自哀怨，曾在春意珊阑的冷雨夜苦苦追忆，在萧瑟的悲风却却痛悔，一卷清幽梦，半袭倾城眠，晚舟误入藕花深处，枕着夜央，却着不回来时的路，叹息红袖添香下，百雁南归，擎着青灯醉晓窗，残缺的影子，孤独的照在暖壁上，爱恨只是一瞬间，凄凄惨惨戚戚，暮色四合，落日融金，痛苦的相思引燃了另一种孤独，一种相思，两处闲愁，自古红颜都薄命，桃花乱世随流水。海棠般静好娇媚的容颜，菊花般倔强绚丽的傲世风古，桃花般红销香断的泪痕，都在这广漠中消隐，在水墨中颠沛流离，一代奇女子，对着洁白浣，对镜梳壮，素笺细描眉黛，轻轻挽住青丝弱缕，渐渐消失在氤氲着满是风霜雾雪的北归之路，一梦卷帘，风飞沙走下的历史尘埃，落定，永远定格在一曲古筝弹乱胭脂泪梅花橱窗里。­&lt;/p&gt;
&lt;p&gt;空白的思绪，哀怨在西楼的侧畔里，纳兰手握残笔，悲苦研墨，走笔生花，一纸凄凉，相送指间，寂寥的夜，为他颤抖的背影，涂抹上一层厚厚的域垢，镶边日照金陵，半城烟花眠灭，孽缘生起又灭，残烛蜡泪，夙世情缘，手抚脸庞，泪痕离乱指间，看着远去的孤鸿，望着近身花灯成堆，聚于断桥，红药摇曳，伊人瘦弱的指，弹尽半晌冷雨夜，那些断落了的或不断的琴弦，一踏香檀，卷入滚滚万丈红尘，静默一袭华丽青矜，安眠莲花舟旁，握手雕花橱窗，兰花清幽，虚涵若谷，优雅淡然，琉璃翡翠盏，空照素白帘幕，终身与书为舞，与墨为痴，卧衣泪满襟，失落的灵魂，随春水流逝，昨日犹百花争艳，群芳竞秀，奈何今宵却乱红零落，风雨飘摇，遥指流年何堪言，一响贪欢，只是朱颜改，胭脂红，点绛唇，泛落的青颜，揉碎在浮藻间，聆听雨落芭蕉的凄然，静观错乱觥筹的残鬓，伏案报晓摒伤花，霓裳羽衣曲，为伊歌浮华.菊花台倒影明月，黯淡销魂者，唯别而以已。­&lt;/p&gt;
&lt;p&gt;一朝春去红颜老，花落人亡两不知，潇湘馆外风雨飘摇，黛玉憔悴的瘦影，散落在杯中倒映出，她内心里的伤痛，记忆的的浮花瞬间凋零，绽烂的晚霞，残落西边，战栗梧桐树下，看雨擦落屋檐，滴滴塔塔降到脚下，镜对佳人夜无眠，凌乱风飞缎绸碎，思是天涯无情物，化作漫天雪花满天飞，一负红尘倾城笑，陌上烽烟冷残，乱舞流年今何在，醉问今夕是何年？笑看落花飞满天，秉烛画殇指月央，积沙堆落半残月，舞陌今生何堪怜，更持青灯摒残缺，看淡满地浣花息更，堆叠伤声，花谢花开花满天，红绡香断有谁怜，冷夜葬花，杜鹃鸣血，伊人叹息，渐渐消失在历史的尘埃里。&lt;/p&gt;
&lt;p&gt;剪下一段烛光，挽幛那锦绸罗缎，绻帘幽梦，抒一纸相思墨香，翰墨流连，氤氲汉赋元曲，一曲离别，沾染唐诗宋词，瑾年流失，谱写一曲艳丽离殇，安枕流离的伤痛，沉睡在那一世，黯然伤魂，凄惨成声。遥指嫣然落花，雨化蝶，风烟残梦，独晓一卷梵经下，那一段存封的伤痛。锦瑟无涯，香花弥漫，绚烂千秋万世。金戈铁马凝注刹住芳华，风花雪夜，暗香萦袖，独奏一曲，弦断受伤，叹服千千音阙。朦胧字迹，泛黄史诗，摩挲纸页，雅韵唯美，缭绕屋脊，水墨暖妆。融入三秋。落幕的时光淹埋沉痛的伤口，幻化成散落满地的忧伤。&lt;/p&gt;
&lt;p&gt;纵使秦砖汉瓦被尘风掩埋，江山如画，英雄独为红颜醉，古城的馥香牡丹飘摇红尘陌上，江南芙蓉开满整个水乡，风轻花落定，时光踏下轻盈的足迹，卷起昔日的美丽悠然长去，寻着记忆的气息误入梦的缝隙，看见昔日的痕迹，见一女子，摇着兰舟，放歌在阳春三月，莺飞草长的秦淮河畔，手采莲子，婀娜多姿的身影，在层层涟漪里，迷糊了我的视线。雨巷的那把油纸伞，不知何时萦怀抱肩。&lt;/p&gt;
&lt;p&gt;古韵墨画流传于世，淡然音律响彻万年，中国的文人，用他们纤弱细腻的笔，描出“疏影横斜水清浅，暗香浮动月黄昏”的境界，宛如雾里看花，水中望月般朦胧的婉约。在荷塘月色下，素手轻握青花，像江南一样青韵化蝶，不曾沾染过任何喧嚣。放入几片茶花，玉手提起棕褐色紫砂壶，缓缓的倒入刚刚煮沸的泉水，让心渐渐融进唯美雅韵的中国风里。&lt;/p&gt;
&lt;p&gt;文/浅唱&lt;/p&gt;</summary><category term="中国风"></category></entry><entry><title>XML与JSON的格式转换方法</title><link href="http://hackecho.com/2011/08/convertion-of-xml-and-json/" rel="alternate"></link><updated>2011-08-10T23:51:10-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-08-10:2011/08/convertion-of-xml-and-json/</id><summary type="html">&lt;p&gt;在前文一篇文章《&lt;a href="http://www.hackecho.com/archives/435.html"&gt;PHP中JSON的处理&lt;/a&gt;》中，写到了JSON数据的生成和解析，后来一想，如果服务器既能返回JSON又能返回XML不是更好吗，至少多了一种选择。因为JSON和XML都是一种数据表示方法，相互转换起来应该不难。于是简单的到网上搜了一下，搜到了一些结果，但貌似所有的结构都源自一篇文章，内容都一样，可惜的是，那片文章中有严重的错误（竟然没有一个人提出来...），后来经过简单的修正和调试，终于得到了完美的转换代码（也有不完美，暂时还无法转换索引数组，但关联数组没有问题），现分享如下：）&lt;/p&gt;
&lt;p&gt;废话不多说，直接上代码：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;public function json_to_xml(&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;source&lt;/span&gt;,&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;charset&lt;/span&gt;=&amp;#39;utf8&amp;#39;) &lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt; = json_decode(&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;source&lt;/span&gt;,true);
    &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;xml&lt;/span&gt;  =&amp;#39;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt; &amp;#39;;
    &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;xml&lt;/span&gt; .=&amp;#39;&lt;span class="nt"&gt;&amp;lt;data&amp;gt;&lt;/span&gt;&amp;#39;;
    &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;xml&lt;/span&gt; .= &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;this&lt;/span&gt;-&amp;gt;change(&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt;);
    &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;xml&lt;/span&gt; .=&amp;#39;&lt;span class="nt"&gt;&amp;lt;/data&amp;gt;&lt;/span&gt;&amp;#39;;
    return &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;xml&lt;/span&gt;;
}

public function change(&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;source&lt;/span&gt;) &lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;string&lt;/span&gt;=&amp;quot;&amp;quot;;
    foreach(&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;source&lt;/span&gt; as &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;k&lt;/span&gt;=&amp;gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;v&lt;/span&gt;)&lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;string&lt;/span&gt; .=&amp;quot;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&amp;quot;.&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;k&lt;/span&gt;.&amp;quot;&amp;gt;&amp;quot;;
        if(is_array(&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;v&lt;/span&gt;) || is_object(&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;v&lt;/span&gt;))&lt;span class="err"&gt;{&lt;/span&gt;       //判断是否是数组，或者，对像
            &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;string&lt;/span&gt; .= &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;this&lt;/span&gt;-&amp;gt;change(&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;v&lt;/span&gt;);        //是数组或者对像就的递归调用
        }else&lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;string&lt;/span&gt; .=&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;v&lt;/span&gt;;                        //取得标签数据
        }
    &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;string&lt;/span&gt; .=&amp;quot;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;/&amp;quot;.&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;k&lt;/span&gt;.&amp;quot;&amp;gt;&amp;quot;;
    }
    return &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;string&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;记住加上 header('Content-Type: text/xml');&lt;/p&gt;
&lt;p&gt;如有疑问欢迎留言讨论。&lt;/p&gt;</summary><category term="JSON"></category><category term="XML"></category><category term="PHP"></category></entry><entry><title>PHP中JSON的处理</title><link href="http://hackecho.com/2011/08/json-operation-in-php/" rel="alternate"></link><updated>2011-08-10T23:39:13-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-08-10:2011/08/json-operation-in-php/</id><summary type="html">&lt;p&gt;近日因为小组项目的需要，要为一款Android应用（Howdy，敬请期待）开发服务器端。在HTTP协议的基础上，服务器需要根据请求返回JSON数据包（当然也可以返回XML，有关XML与JSON的转换请参看《&lt;a href="http://www.hackecho.com/archives/444.html"&gt;XML与JSON的格式转换方法&lt;/a&gt;》），因此简单研究了一下PHP处理JSON数据的方法。&lt;/p&gt;
&lt;p&gt;从5.2版本开始，PHP原生提供json_encode()和json_decode()函数，前者用于编码，后者用于解码。5.2以前的版本请自行到网上下载相应的JSON解析类。&lt;/p&gt;
&lt;p&gt;我们先来了解一下&lt;strong&gt;索引数组&lt;/strong&gt;和&lt;strong&gt;关联数组&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;PHP支持两种数组，一种是只保存"值"（value）的索引数组（indexed array），另一种是保存"名值对"（name/value）的关联数组（associative array）。一般在JSON数据格式中，索引数组的用&lt;code&gt;[]&lt;/code&gt;包围，各个值之间用英文逗号分隔，如&lt;code&gt;["one","two","three"]&lt;/code&gt;；关联数组用{}包围，键值之间用英文冒号一一对应，如&lt;code&gt;{"1":"one","2":"two","3":"three"}&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;下面我们来看一下&lt;strong&gt;json_encode()&lt;/strong&gt;方法：&lt;/p&gt;
&lt;p&gt;定义：&lt;code&gt;string &lt;strong&gt;json_encode&lt;/strong&gt; ( mixed $value [, int $options = 0 ] )&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;描述：Returns a string containing the JSON representation of value.&lt;/p&gt;
&lt;p&gt;其中第二个参数为可选参数，&lt;strong&gt;一般当传入true值是返回数组类型，不传值则返回对象。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们先看一个数组转换的例子：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;1&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;2&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;3&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;4&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;5&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;$&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;输出结果为&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;a&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;:&lt;/span&gt;1&lt;span class="p"&gt;,&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;b&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;:&lt;/span&gt;2&lt;span class="p"&gt;,&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;c&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;:&lt;/span&gt;3&lt;span class="p"&gt;,&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;d&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;:&lt;/span&gt;4&lt;span class="p"&gt;,&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;e&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;:&lt;/span&gt;5&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;再看一个对象转换的例子：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;another post&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
$&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 21&lt;span class="p"&gt;;&lt;/span&gt;
$&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;approved&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
$&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;favorite_count&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 1&lt;span class="p"&gt;;&lt;/span&gt;
$&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;$&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;输出结果为&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
　　&amp;quot;&lt;span class="n"&gt;body&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;:&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;another&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt;
　　&amp;quot;&lt;span class="n"&gt;id&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;:&lt;/span&gt;21&lt;span class="p"&gt;,&lt;/span&gt;
　　&amp;quot;&lt;span class="n"&gt;approved&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
　　&amp;quot;&lt;span class="n"&gt;favorite_count&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;:&lt;/span&gt;1&lt;span class="p"&gt;,&lt;/span&gt;
　　&amp;quot;&lt;span class="n"&gt;status&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意：由于JSON只接受utf-8编码的字符，所以json_encode()的参数&lt;strong&gt;必须&lt;/strong&gt;是utf-8编码，否则会得到空字符或者null。&lt;/p&gt;
&lt;p&gt;我们来看一个具体的例子：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$&lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;李昭谕&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;nick&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;天堂皓月&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;contact&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;zhaoyulee@126.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;website&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://www.hackecho.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;sex&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;男&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
$&lt;span class="n"&gt;json_string&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;$&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; $&lt;span class="n"&gt;json_string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;输出结果请大家自己试验：）&lt;/p&gt;
&lt;p&gt;接下来我们看一下&lt;strong&gt;json_decode()：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;定义：&lt;code&gt;mixed json_decode ( string $json [, bool $assoc = false [, int $depth = 512 [, int $options = 0 ]]] )&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;描述：Takes a JSON encoded string and converts it into a PHP variable.&lt;/p&gt;
&lt;p&gt;一般情况下我们只需要传入$json就可以了。这点不再详述，只是json_encode()的逆过程而已。请大家自己试验。&lt;/p&gt;</summary><category term="JSON"></category><category term="PHP"></category></entry><entry><title>给Google+带来灵感的一份PPT</title><link href="http://hackecho.com/2011/08/ppt-that-create-google-plus/" rel="alternate"></link><updated>2011-08-06T23:52:01-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-08-06:2011/08/ppt-that-create-google-plus/</id><summary type="html">&lt;p&gt;&lt;strong&gt;PPT来自SlideShare，请稍等使其加载完毕。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当Google+迅速走红，16天达到1000万用户的时候，别忘记一个叫Paul Adams的人，他是前Google员工，现在是Facebook的产品经理，在Google工作期间，他做的一系列研究奠定了Google的社会化战略基础，而他的这份研究的PPT the real life of social network在一年前也非常受欢迎。&lt;/p&gt;
&lt;p&gt;而如今Google+很多地方都是遵循了这些研究理念，比如说圈子，在这份ppt中刚开始就是以一个名叫Debbie的人开始，通过比较其再Facebook上的社交关系和现实中的社交关系，指出目前的社交网络没有解决一个把特定的信息传递给特定的人这个问题，而这个问题有时候会让我们很尴尬，PPT举的一个例子就是这个叫Debbie的人一不小心在Facebook评论了其在同性恋酒吧工作朋友的照片，而被她Facebook上的学生好到了。在现实生活中，白天是教授，和一群学生上课，晚上是禽兽，和一般死党鬼混，但你从不敢把鬼混的照片发在比如新浪微博、比如Facebook上，因为哪里，大家都是你的朋友，甚至还有很多朋友的朋友。&lt;/p&gt;
&lt;p&gt;在这个ppt中，Paul Adams还讲述了社会化网络，人是以群分的，讲了人与人之间的关系，有的人你经常联系，有的人只是认识而已，还有很多人和你只是一面之缘，在Facebook上平均每个用户有130个好友，而经常联系互动的只有4到6个而已。&lt;/p&gt;
&lt;p&gt;在影响力这个章节中，提到了社交网络对于商业的影响，之前有一篇讨论比较热烈的文章《&lt;a href="http://www.socialbeta.cn/articles/why-social-commerce-works.html"&gt;微博讨论—谁在影响我们的购物行为？&lt;/a&gt;》，就是受此启发而产生的一些想法，在我们越来越不相信广告的年代，我们又是在信任谁，谁对我们的购物决策影响最大呢？&lt;/p&gt;
&lt;p&gt;在这个PPT中最后提到了身份和隐私，特别是隐私问题，Facebook以及众多社交网络都诟病已久。&lt;/p&gt;
&lt;p&gt;Google+的出现，我们先不去比较它与其他社交网络在功能上、在交互设计和用户体验上的差异，而更应该从它背后的一些支撑的这种理念去比较，相信Google+能为社交网络带来颠覆性的改变。&lt;/p&gt;
&lt;p&gt;转自@&lt;a href="http://www.socialbeta.cn"&gt;SocialBeta&lt;/a&gt;&lt;/p&gt;</summary><category term="Google+"></category><category term="社会化媒体"></category></entry><entry><title>Android数据存储之Shared Preferences</title><link href="http://hackecho.com/2011/08/android-shared-preferences/" rel="alternate"></link><updated>2011-08-06T11:30:03-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-08-06:2011/08/android-shared-preferences/</id><summary type="html">&lt;p&gt;任何一个应用程序都要依赖数据存储，而且这种存储必须不丢失数据，并且有效、简便使用和更新这些数据。在 Android 操作系统中一共提供了4种数据存储方式，但是由于存储的这些数据都是私有的，所以如果需要共享其他应用程序的数据，就需要使用 Content Provider（数据共享）。4种数据存储方式分别为如下：&lt;/p&gt;
&lt;p&gt;1、Shared Preferences&lt;/p&gt;
&lt;p&gt;用来存储 “键-值”格式的数据。&lt;/p&gt;
&lt;p&gt;2、Files&lt;/p&gt;
&lt;p&gt;通过FileInputStream和FileOutputStream对文件进行操作。&lt;/p&gt;
&lt;p&gt;3、SQLite&lt;/p&gt;
&lt;p&gt;标准数据库，支持SQL语句。&lt;/p&gt;
&lt;p&gt;4、NetWork&lt;/p&gt;
&lt;p&gt;通过网络存储和获取数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下面我们来着重介绍一下Shared Preferences的使用方法。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Shared Preferences 类似于winform中做一些小型配置的ini文件，用来保存一些用户设置的参数。例如，可以通过它保存上一次用户所做的修改或者自定义参数设定，当再次启动程序后依然保持原有设置。&lt;/p&gt;
&lt;p&gt;在 Android系统提供的API中， 获取 Preferences对象有四种类型，分别如下：&lt;/p&gt;
&lt;p&gt;1、文件创建模式：Activity.MODE_APPEND&lt;/p&gt;
&lt;p&gt;如果该文件已经存在，然后将数据写入，而不是抹掉它现有文件的末尾。&lt;/p&gt;
&lt;p&gt;2、文件创建模式：MODE_PRIVATE&lt;/p&gt;
&lt;p&gt;默认模式，在那里创建的文件只能由应用程序调用,即为私有的&lt;/p&gt;
&lt;p&gt;3、文件创建模式：Activity.MODE_WORLD_READABLE&lt;/p&gt;
&lt;p&gt;允许所有其他应用程序有读取和创建文件的权限。&lt;/p&gt;
&lt;p&gt;4、文件创建模式：Activity.MODE_WORLD_WRITEABLE&lt;/p&gt;
&lt;p&gt;允许所有其他应用程序具有写入、访问和创建的文件权限。&lt;/p&gt;
&lt;p&gt;在每安装一个Android 应用程序时，data/data目录下都会产生一个对应的包文件夹，如果应用程序中使用了 Preferences 则会在该应用程序文件夹下产生一个shared_prefs文件夹保存我们的数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;读取配置的方法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;//读取当前的配置信息&lt;/span&gt;
&lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;SharedPreferences&lt;/span&gt; &lt;span class="k"&gt;config&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getSharedPreferences&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;CONFIG&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ConfigActivity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="no"&gt;MODE_WORLD_WRITEABLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;minRecordTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;minRecordTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;minRecordDistance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;minRecordDistance&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mh"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;isGetMyLocAtStartAuto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getBoolean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;isGetMyLocAtStartAuto&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;编辑配置的方法:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;//写入sharepreference&lt;/span&gt;
&lt;span class="n"&gt;SharedPreferences&lt;/span&gt; &lt;span class="k"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getSharedPreferences&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;CONFIG&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ConfigActivity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="no"&gt;MODE_WORLD_WRITEABLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;SharedPreferences&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Editor&lt;/span&gt; &lt;span class="n"&gt;editor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;edit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;minRecordTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minRecordTime&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;示例比较简略，但很典型，摘自我自己的应用BJTUer（暂定名）。&lt;/p&gt;</summary><category term="Android"></category><category term="SharedPreferences"></category></entry><entry><title>使用友盟SNS_SDK为Android应用加入SNS分享功能</title><link href="http://hackecho.com/2011/08/add-sns-sharing-with-umeng-sns-sdk/" rel="alternate"></link><updated>2011-08-03T13:04:59-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-08-03:2011/08/add-sns-sharing-with-umeng-sns-sdk/</id><summary type="html">&lt;p&gt;很多朋友在开发Android应用的过程中，都想加入社会化的分享功能，如将自己的应用使用状态或心得同步到新浪微博、人人网或腾讯微博等。这些社交网络或微博都已经发布了针对开发者的开放平台（关于开放平台的相关信息，请参考&lt;a href="http://www.hackecho.com/archives/127.html"&gt;《说说微创业——关于开放平台和微时代》&lt;/a&gt;），因此我们可以将这些分享功能集成到自己的应用中，提高用户的互动性和产品推广效果。将应用与社会化网络联系起来已经成为现在移动开发的主流趋势之一。&lt;/p&gt;
&lt;p&gt;可对于新手而言，各大开放平台的SDK使用方法还需要花费很大精力来学习，如果仅仅是开发Demo的话，其实没有必要花费过多的时间在此。近两天我也在想办法给自己的应用加入社会化分享功能，偶然的机会看到了友盟提供的SNS_SDK（测试版），简单的试用过以后感觉不错，因此分享给大家，让我们的产品在开发初期也能快速方便的拥有SNS分享同步功能。&lt;/p&gt;
&lt;p&gt;友盟SNS_SDK目前提供两种分享方式：一种是文字分享，另一种是图文（图片+文字）分享。支持的开放平台目前有新浪微博、人人网和腾讯微博。首先我们要下载相应的SDK。&lt;/p&gt;
&lt;p&gt;进入&lt;a href="http://www.umeng.com/doc/home.html"&gt;友盟文档中心&lt;/a&gt;，点击左侧的&lt;strong&gt;开发工具SDK&lt;/strong&gt;目录，在右侧点击下载即可。这里是一个简要的开发文档（&lt;a href="http://www.umeng.com/doc/home.html#op_con_kfzn/adsdk_shhfx"&gt;点击查看&lt;/a&gt;），当然我们会在下面为大家详细介绍其使用方法。&lt;/p&gt;
&lt;p&gt;首先我们应该注册一个友盟账号（&lt;a href="http://www.umeng.com"&gt;点击注册&lt;/a&gt;），注册完成后登录，进入友盟的管理后台，点击“添加新应用”，进入新应用信息填写的页面。App 建立成功后，自动会跳转到该App管理页面的开发指南页面。在这个页面中获得该App 的AppKey（非常重要）。获得该Appkey 后，请继续完成以下步骤：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UMENG_APPKEY 和分享平台的绑定：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;获得appkey后，还需要将应用和我们要使用的分享平台注册时获取的appkey 和appsecret绑定。注册过程如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新浪微博：&lt;/strong&gt;http://open.t.sina.com.cn -&amp;gt; 我是开发者 -&amp;gt; 创建新应用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;腾讯微博：&lt;/strong&gt;http://open.t.qq.com/ -&amp;gt; 创建应用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;人人网：&lt;/strong&gt; http://dev.renren.com/ -&amp;gt; 创建应用&lt;/p&gt;
&lt;p&gt;注意：人人网的应用创建完成后，在“我的应用”页面将可以看到获得的AppId，Appkey, Secret，至此还需要去设置App 的Callback URL：点击“应用设置”下的“编辑应用属性”,在跳转后的页面中，点击 “Canvas 设置”, 设置“&lt;strong&gt;Canvas Callback URL&lt;/strong&gt;”为：http://sns.whalecloud.com/renr/callback 保存即可， 最后因为SDK 中使用了人人的status.set 和photo.upload 接口（这两个接口属于人人定义的高级API）, 目前人人要求对高级API的使用须向其提交申请，具体流程参见：人人API 申请审核制度（V1.0） 下的“申请流程”。&lt;strong&gt;不过现在作为测试者，可以先不申请，具体详见&lt;a href="http://wiki.dev.renren.com/wiki/Test_Advanced_API"&gt;高级API测试方案&lt;/a&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在各平台注册应用后，接下来需要完成 UMENG_APPKEY 和友盟支持的分享平台注册应用时获取的appkey 和appsecret 绑定。具体操作为：开发工具-&amp;gt;SNS 分享-&amp;gt;设置。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/08/21.png" /&gt;&lt;/p&gt;
&lt;p&gt;接下来我们要开始集成到应用中去咯：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、导入UMeng-Android-SDK-SnsService.jar （简称SDK）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;右键工程根目录，选择 Properties -&amp;gt; Java Build Path -&amp;gt; Libraries，然后点击 Add External JARs... 选择指向 UMeng-Android-SDK-snsService.jar 的路径，点击 OK，即导入成功。&lt;/p&gt;
&lt;p&gt;与此同时SDK 中引用了httpmime-4.1.1.jar 和commons-httpclient-3.1.jar 这两个第三方的包，请用同样的方式引入工程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、配置AndroidMainfest.xml&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 添加Activity "com.umeng.api.activity.OauthActivity"和"com.umeng.api.activity.UpdateStatusActivity"&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;activity&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;com.umeng.api.activity.OauthActivity&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;android:screenOrientation=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;unspecified&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;android:windowSoftInputMode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;adjustResize&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;android:configChanges=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;orientation|keyboardHidden&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/activity&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;activity&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;com.umeng.api.activity.UpdateStatusActivity&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;android:theme=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@style/Theme.IOSched&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;android:windowSoftInputMode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stateVisible|adjustResize&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;android:screenOrientation=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;unspecified&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;android:configChanges=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;orientation|keyboardHidden&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;intent-filter&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;action&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;android.intent.action.VIEW&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;category&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;android.intent.category.DEFAULT&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;category&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;android.intent.category.BROWSABLE&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;data&lt;/span&gt; &lt;span class="na"&gt;android:scheme=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;schemaYourUmengAppKey&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/intent-filter&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/activity&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;2.修改Activity "com.umeng.api.activity.UpdateStatusActivity"中的data标签：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;activity&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;com.umeng.api.activity.UpdateStatusActivity&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;…&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;intent-filter&amp;gt;&lt;/span&gt;
        …
        &lt;span class="nt"&gt;&amp;lt;data&lt;/span&gt; &lt;span class="na"&gt;android:scheme=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;schema你的应用程序的友盟Appkey&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/intent-filter&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/activity&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;例如你的UMENG_APPKEY 为：4da011e664f3b4a487000002，则data 标签改为：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;schema4da011e664f3b4a487000002&lt;/span&gt;&amp;quot; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;3. 添加UMENG_APPKEY：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;application&lt;/span&gt; &lt;span class="err"&gt;…&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    …
    &lt;span class="nt"&gt;&amp;lt;meta-data&lt;/span&gt; &lt;span class="na"&gt;android:value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;你的应用的Appkey&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;UMENG_APPKEY&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/meta-data&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/application&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;4.添加相应的权限：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;android.permission.ACCESS_NETWORK_STATE&lt;/em&gt; 用于判断网络的状态，因为SDK 中提供的服务仅在有网络时有效；&lt;/p&gt;
&lt;p&gt;&lt;em&gt;android.permission.INTERNET&lt;/em&gt; 用于完成分享内容的发送；&lt;/p&gt;
&lt;p&gt;&lt;em&gt;android.permission.READ_PHONE_STATE&lt;/em&gt; 读取终端的IMEI, 以用于分享的统计。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;manifest&lt;/span&gt; &lt;span class="err"&gt;…&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    …
    &lt;span class="nt"&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;android.permission.ACCESS_NETWORK_STATE&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;android.permission.INTERNET&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;uses-permission&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;android.permission.READ_PHONE_STATE&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/manifest&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;5.下面这段文字来自官方：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果您调用我们提供的SDK 的Activity 支持横竖屏的切换，并且您使用的是我们SDK 中提供的默认分享页面，我们强烈建议您将该Activity 设置为在横竖屏切换时Activity 不销毁， 您只需在该Activity 中添加： android:configChanges="orientation|keyboardHidden"。这对您的应用功能，性能均无影响，因为我们的SDK 默认的分享页面与您的应用的交互是从弹出一个Dialog 开始的，这样的设置将保证在横竖屏切换时不会出现Activity 在Dialog Dismiss 之前finish，从而避免造成潜在隐患，使得整个app 更安全，稳定。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;至于你加没加，反正我加了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、添加其他资源文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们下载的SDK中的资源文件有：Drawable, drawable-hdpi, layout, values, anim 只需要拷贝到project 的对应目录下即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、配置分享平台（可选）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;目前友盟支持的分享的平台是：新浪微博，人人网和腾讯微博， 如果只需要用到其中的某一个或某两个平台， 只需要在umeng_share_parameters.xml（该文件在SDK提供的资源文件， values文件夹下）将不需要的平台设为”close”即可（默认三个平台都是开启的）。例如不需要用到分享到腾讯微博的功能，则将umeng_share_tenc 设为"close"即可。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;resources&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;umeng_share_renr&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;open&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;umeng_share_sina&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;open&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;string&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;umeng_share_tenc&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;close&lt;span class="nt"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    …
&lt;span class="nt"&gt;&amp;lt;/resources&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;五、其他复杂的功能请参看官方文档。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;六、下面我们来看一下最最基本的分享文字消息的使用方法，以我的应用为示例：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在需要打开分享功能的地方加入下列使用代码即可：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;UMSnsService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BJTUerActivity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &amp;quot;测试同步功能！&amp;quot;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样点击后，将会弹出以下界面：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/08/3.png" /&gt;&lt;/p&gt;
&lt;p&gt;哈哈，接下来就是认证了。因为我已经认证过了，所以这一步略过。然后就是分享界面：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/08/4.png" /&gt;&lt;/p&gt;
&lt;p&gt;其中还可以插入表情、话题或者@某人等。&lt;/p&gt;
&lt;p&gt;当然，除了分享文字外，还可以分享图片加文字（如拍张照后直接分享），具体使用方法请参考官方文档。&lt;/p&gt;
&lt;p&gt;最后再提一点，关于用户的所有分享操作在友盟上开发者是可以看到所有统计数据的，如下图（我的应用只有我在测试，所以图表比较寒酸...）：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/08/6.png" /&gt;&lt;/p&gt;
&lt;p&gt;好了，介绍完毕，大家Enjoy it吧！有问题欢迎讨论！&lt;/p&gt;</summary><category term="Android"></category><category term="SNS"></category><category term="友盟"></category></entry><entry><title>创建Android应用程序启动界面（Splash）</title><link href="http://hackecho.com/2011/08/splash-of-android/" rel="alternate"></link><updated>2011-08-02T23:53:57-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-08-02:2011/08/splash-of-android/</id><summary type="html">&lt;p&gt;一般的Android应用程序在启动时都会显示一个启动界面，可以显示产品的LOGO，作者的信息或者应用的版本信息等，当然，除了这些，在这段时间内还可以对系统状况进行检测，比如网络是否通，电源是否充足等，或者，预先加载程序所需要的相关数据等。下面我们来看一看怎样制作Splash界面。&lt;/p&gt;
&lt;p&gt;首先新建一个splashscreen.xml布局文件，我们已经在res/drawable目录下放置了一张启动图片home_gradient.png：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@+id/LinearLayout01&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fill_parent&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:gravity=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;center|bottom&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:background=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@drawable/home_gradient&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:orientation=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vertical&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ImageView&lt;/span&gt; &lt;span class="na"&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-60dip&amp;quot;&lt;/span&gt;
               &lt;span class="na"&gt;android:paddingLeft=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;20dip&amp;quot;&lt;/span&gt;
               &lt;span class="na"&gt;android:paddingRight=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;20dip&amp;quot;&lt;/span&gt;
               &lt;span class="na"&gt;android:scaleType=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;centerInside&amp;quot;&lt;/span&gt;
               &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
               &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
               &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@+id/logo&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ImageView&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class="c"&gt;    android:typeface 字体风格&lt;/span&gt;
&lt;span class="c"&gt;    --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;TextView&lt;/span&gt; &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@+id/TextView01&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;wrap_content&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;20dip&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:typeface=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;serif&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:shadowDx=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:shadowDy=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:shadowRadius=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:shadowColor=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#FFFFFF&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:textColor=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@drawable/white&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:textSize=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;20dip&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@+id/versionNumber&amp;quot;&lt;/span&gt;
              &lt;span class="na"&gt;android:gravity=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;center_horizontal&amp;quot;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/TextView&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后我们新建一个SplashScreen类：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uutroy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bjtuer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Activity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PackageInfo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PackageManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PackageManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NameNotFoundException&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graphics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PixelFormat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bundle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Handler&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WindowManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TextView&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;SplashScreen&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Activity&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;Override&lt;/span&gt;
    &lt;span class="n"&gt;protected&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;TODO&lt;/span&gt; &lt;span class="n"&gt;Auto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;generated&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="n"&gt;stub&lt;/span&gt;
        &lt;span class="n"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;getWindow&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;setFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PixelFormat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RGBA_8888&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;getWindow&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;addFlags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WindowManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LayoutParams&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FLAG_DITHER&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;setContentView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splashscreen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Display&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;
        &lt;span class="n"&gt;PackageManager&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getPackageManager&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;PackageInfo&lt;/span&gt; &lt;span class="nb"&gt;pi&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getPackageInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uutroy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bjtuer&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; 0&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;TextView&lt;/span&gt; &lt;span class="n"&gt;versionNumber&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TextView&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;versionNumber&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;versionNumber&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;Version&lt;/span&gt; &amp;quot; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;n&lt;/span&gt;&amp;quot;&lt;span class="o"&gt;+&lt;/span&gt;&amp;quot;天堂皓月&amp;quot;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NameNotFoundException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Handler&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;postDelayed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="o"&gt;/*&lt;/span&gt; &lt;span class="n"&gt;Create&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;Intent&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Main&lt;/span&gt; &lt;span class="n"&gt;Activity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;*/&lt;/span&gt;
                &lt;span class="n"&gt;Intent&lt;/span&gt; &lt;span class="n"&gt;mainIntent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SplashScreen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;BJTUerActivity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;SplashScreen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startActivity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mainIntent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;SplashScreen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;finish&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt; 2500&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后，不要忘了在AndroidManifest.xml中将SplashScreen定义为主加载：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;activity&lt;/span&gt; &lt;span class="na"&gt;android:screenOrientation=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;portrait&amp;quot;&lt;/span&gt;
          &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.SplashScreen&amp;quot;&lt;/span&gt;
          &lt;span class="na"&gt;android:label=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@string/app_name&amp;quot;&lt;/span&gt;
          &lt;span class="na"&gt;android:theme=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@android:style/Theme.NoTitleBar&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;intent-filter&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;action&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;android.intent.action.MAIN&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;category&lt;/span&gt; &lt;span class="na"&gt;android:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;android.intent.category.LAUNCHER&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/intent-filter&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/activity&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Android"></category><category term="Splash"></category></entry><entry><title>Android中使用AsyncTask实现简单的异步处理</title><link href="http://hackecho.com/2011/07/asynctask-in-android/" rel="alternate"></link><updated>2011-07-24T01:37:17-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-07-24:2011/07/asynctask-in-android/</id><summary type="html">&lt;p&gt;当一个程序第一次启动时，Android会同时启动一个对应的主线程(Main Thread)，主线程主要负责处理与UI相关的事件，如：用户的按键事件，用户接触屏幕的事件以及屏幕绘图事件，并把相关的事件分发到对应的组件进行处理。所以主线程通常又被叫做UI线程。&lt;/p&gt;
&lt;p&gt;比如说从网上获取一个网页，在一个TextView中将其源代码显示出来，这种涉及到网络操作的程序一般都是需要开一个线程完成网络访问，但是在获得页面源码后，是不能直接在网络操作线程中调用TextView.setText()的，因为其他线程中是不能直接访问主UI线程成员。&lt;/p&gt;
&lt;p&gt;Android提供了几种在其他线程中访问UI线程的方法：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Java
  Activity.runOnUiThread( Runnable )
  View.post( Runnable )
  View.postDelayed( Runnable, long )
  Hanlder&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这些类或方法同样会使你的代码很复杂很难理解。然而当你需要实现一些很复杂的操作并需要频繁地更新UI时这会变得更糟糕。&lt;/p&gt;
&lt;p&gt;为了解决这个问题，Android 1.5提供了一个工具类：AsyncTask，它使创建需要与用户界面交互的长时间运行的任务变得更简单。不需要借助线程和Handler即可实现。&lt;/p&gt;
&lt;p&gt;AsyncTask是抽象类.AsyncTask定义了三种泛型类型 Params，Progress和Result。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Params 启动任务执行的输入参数，比如HTTP请求的URL。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Progress 后台任务执行的百分比。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Result 后台执行任务最终返回的结果，比如String。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AsyncTask的执行分为四个步骤，每一步都对应一个回调方法，这些方法不应该由应用程序调用，开发者需要做的就是实现&lt;strong&gt;这些方法&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;onPreExecute()&lt;/em&gt;, 该方法将在执行实际的后台操作前被UI thread调用。可以在该方法中做一些准备工作，如在界面上显示一个进度条。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;doInBackground(Params...)&lt;/em&gt;, 将在onPreExecute 方法执行后马上执行，该方法运行在后台线程中。这里将主要负责执行那些很耗时的后台计算工作。可以调用 publishProgress方法来更新实时的任务进度。该方法是抽象方法，子类必须实现。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;onProgressUpdate(Progress...)&lt;/em&gt;,在publishProgress方法被调用后，UI thread将调用这个方法从而在界面上展示任务的进展情况，例如通过一个进度条进行展示。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;onPostExecute(Result)&lt;/em&gt;, 在doInBackground 执行完成后，onPostExecute 方法将被UI thread调用，后台的计算结果将通过该方法传递到UI thread.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为了正确的使用AsyncTask类，以下是几条必须遵守的准则：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1) Task的实例必须在UI thread中创建&lt;/p&gt;
&lt;p&gt;2) execute方法必须在UI thread中调用&lt;/p&gt;
&lt;p&gt;3) 不要手动的调用onPreExecute(), onPostExecute(Result)，doInBackground(Params...), onProgressUpdate(Progress...)这几个方法&lt;/p&gt;
&lt;p&gt;4) 该task只能被执行一次，否则多次调用时将会出现异常&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更新（2011-7-24）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果必须要停止一个线程，我们可以采用这个线程中设置一个标志位，然后在线程run方法或AsyncTask的doInBackground方法中的关键步骤判断这个标志位以决定是否继续执行。然后在需要终止此线程的地方改变这个标志位以达到停止线程的目的。&lt;/p&gt;
&lt;p&gt;从外部调用AsyncTask的cancel方法并不能停止一个已经启动的AsyncTask。这个cancel方法的作用与线程的interrupt方法相似，调用了一个线程的interrupt方法之后线程仍然运行，但是如果该线程的run方法里面调用过sleep的或者wait方法后，处于sleep或wait状态，则sleep和wait立即结束并且抛出InterruptedException异常。AsyncTask的cancel方法也一样，如果在这个Task的doInBackground方法中调用了sleep或wait方法，当在UI线程中调用了这个Task实例的cancel方法之后，sleep或wait立即结束并且抛出InterruptedException异常，但是如果捕获该异常的代码后面还有其他代码，则这些代码还会继续执行。&lt;/p&gt;
&lt;p&gt;一个简单的例子：从网上获取一个网页，在一个TextView中将其源代码显示出来：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ByteArrayOutputStream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InputStream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArrayList&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpEntity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpClient&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;impl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DefaultHttpClient&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Activity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProgressDialog&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DialogInterface&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AsyncTask&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bundle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Handler&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EditText&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TextView&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;NetworkActivity&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Activity&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;TextView&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;Button&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;EditText&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;Override&lt;/span&gt;
    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="n"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="n"&gt;setContentView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TextView&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EditText&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setOnClickListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OnClickListener&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="n"&gt;arg0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
           &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;  

    &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;PageTask&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PageTask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getText&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;  

    &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;PageTask&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;AsyncTask&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt; 可变长的输入参数，与&lt;span class="n"&gt;AsyncTask&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exucute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;对应
    &lt;span class="n"&gt;ProgressDialog&lt;/span&gt; &lt;span class="n"&gt;pdialog&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;PageTask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;pdialog&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ProgressDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 0&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;pdialog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;cancel&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;DialogInterface&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OnClickListener&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DialogInterface&lt;/span&gt; &lt;span class="n"&gt;dialog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="n"&gt;dialog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cancel&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="n"&gt;pdialog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setOnCancelListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;DialogInterface&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OnCancelListener&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;onCancel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DialogInterface&lt;/span&gt; &lt;span class="n"&gt;dialog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="n"&gt;finish&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="n"&gt;pdialog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setCancelable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;pdialog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setMax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;100&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;pdialog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setProgressStyle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ProgressDialog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STYLE_HORIZONTAL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;pdialog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;Override&lt;/span&gt;
        &lt;span class="n"&gt;protected&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;doInBackground&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="n"&gt;HttpClient&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;DefaultHttpClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
               &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;]&lt;/span&gt;代表连接的&lt;span class="n"&gt;url&lt;/span&gt;
               &lt;span class="n"&gt;HttpGet&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;]);&lt;/span&gt;
               &lt;span class="n"&gt;HttpResponse&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
               &lt;span class="n"&gt;HttpEntity&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getEntity&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
               &lt;span class="n"&gt;long&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getContentLength&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
               &lt;span class="n"&gt;InputStream&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getContent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
               &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
               &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; !&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                   &lt;span class="n"&gt;ByteArrayOutputStream&lt;/span&gt; &lt;span class="n"&gt;baos&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ByteArrayOutputStream&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                   &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;128&lt;span class="p"&gt;];&lt;/span&gt;
                   &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ch&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;1&lt;span class="p"&gt;;&lt;/span&gt;
                   &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;;&lt;/span&gt;
                   &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; !&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;1&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                      &lt;span class="n"&gt;baos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                      &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 0&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                          &lt;span class="o"&gt;//&lt;/span&gt; 如果知道响应的长度，调用&lt;span class="n"&gt;publishProgress&lt;/span&gt;（）更新进度
                          &lt;span class="n"&gt;publishProgress&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; 100&lt;span class="p"&gt;));&lt;/span&gt;
                      &lt;span class="p"&gt;}&lt;/span&gt;
                      &lt;span class="o"&gt;//&lt;/span&gt; 让线程休眠100&lt;span class="n"&gt;ms&lt;/span&gt;
                      &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;100&lt;span class="p"&gt;);&lt;/span&gt;
                   &lt;span class="p"&gt;}&lt;/span&gt;
                   &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;baos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toByteArray&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;              &lt;span class="p"&gt;}&lt;/span&gt;
               &lt;span class="o"&gt;//&lt;/span&gt; 返回结果
               &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;Override&lt;/span&gt;
        &lt;span class="n"&gt;protected&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;onCancelled&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;onCancelled&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;Override&lt;/span&gt;
        &lt;span class="n"&gt;protected&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;onPostExecute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="o"&gt;//&lt;/span&gt; 返回&lt;span class="n"&gt;HTML&lt;/span&gt;页面的内容
            &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;pdialog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dismiss&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;Override&lt;/span&gt;
        &lt;span class="n"&gt;protected&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;onPreExecute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="o"&gt;//&lt;/span&gt; 任务启动，可以在这里显示一个对话框，这里简单处理
            &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;task_started&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;Override&lt;/span&gt;
        &lt;span class="n"&gt;protected&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;onProgressUpdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="o"&gt;//&lt;/span&gt; 更新进度
              &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&amp;quot;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;]);&lt;/span&gt;
              &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&amp;quot;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;]);&lt;/span&gt;
              &lt;span class="n"&gt;pdialog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setProgress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Android"></category><category term="AsyncTask"></category></entry><entry><title>看似积极，其实焦虑</title><link href="http://hackecho.com/2011/07/worry-about-life/" rel="alternate"></link><updated>2011-07-19T10:05:36-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-07-19:2011/07/worry-about-life/</id><summary type="html">&lt;p&gt;这是在《大学生》上看到的一篇文章，转到这里分享。&lt;/p&gt;
&lt;p&gt;我有一个好友D，她不吃早餐，偶尔翘课，时常熬夜，对所学专业意义持怀疑态度。和众多单身学生一样，她把大部分时间耗在宿舍或自习室里。在大学校园里随机挑10个人，8个都和她相似。&lt;/p&gt;
&lt;p&gt;某一天，我向她借移动硬盘，发现500G的空间几乎全被装满。所有的内容分门别类，安置在十几个文件夹里。除电影以外，其余的内容几乎都与学习相关：公开课、TED演讲、纪录片、英语听力、电子书……我自己虽也有些存货，但仍不免感到眼界一开。问她，这些东西看过多少。她答道，不到1/3，面带愧色。花了不少时间下载，都是有用的东西，以后可能用得到。她又补了一句。事实上，那剩下的2/3也许永远没有重见天日的那一天，我们彼此心知肚明。&lt;/p&gt;
&lt;p&gt;几天后，听说她又买了一个新的移动硬盘，哪些在“下载”名单上排队的资源终于找到了去除。于是，新一轮填满500G的征途又野心勃勃、兴致盎然地启程了。&lt;/p&gt;
&lt;p&gt;这情景对现代人应该不陌生。谁的电脑或硬盘里没存着几个、十几个可能会在某天有用但从来不在此刻打开的文件夹？每当在网上遭遇可以填补自己知识网络上空白点的资源，我们会下意识像打鸡血一样亢奋，手指会毫不犹豫地点右键“另存为”。然而一旦确定它已躺在硬盘的某个位置，彼此之间的蜜月期也会随之以光速结束。下一秒，我们的笑容已献给另一个“它”。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://www.hackecho.com/wp-includes/js/tinymce/plugins/wordpress/img/trans.gif" /&gt;&lt;/p&gt;
&lt;p&gt;有朋友发微博说：“想看那部反省文明的《Life after people》，google之，居然有在线视频，还是双语字幕的，大喜。点开一看，85分钟，莫名的焦虑涌上心头，咂么咂么眨巴眨巴哼哧哼哧，收进收藏夹关了网页。尽管知道可能（简直就是肯定）再也不会打开这个名为‘等’的网页夹，却仍心满意足地认为自己又勤奋又求知。”&lt;/p&gt;
&lt;p&gt;在微博上反省自己的知识焦虑，反省自己“看似积极的人生”，却不知微博就是焦虑和看似积极的一大凶手呢。&lt;/p&gt;
&lt;p&gt;人人、开心、微博、豆瓣……这些带有不同社交性质的网站构成了人们虚拟生活的大部分，并开始控制着人们越来越多获得信息的渠道。在社交网站上，我们的时间以两次刷屏之间的喘息区分，凭状态、照片、视频丈量形状。它一点一点侵蚀着我们对阅读保持的耐性，对事实判断的逻辑思考。我们甘愿被最新鲜的新闻，最流行的段子，最隐晦的笑话填充；我们习惯于迅速得出结论，习惯于寻找宣泄的渠道，习惯于和大多数共舞……我们错把信息等同于知识，又错把知识等同于智慧。我们努力保持和时代同行，其实早已把自我像影子一样留在身后。&lt;/p&gt;
&lt;p&gt;某年暑假我的舍友在新东方上BEC（商务英语考试），班里的同学几乎都是大学生。她旁边坐的女生是天津某大学的大一学生，借住在亲戚家，专程来北京学英语。大一就学BEC，听上去很牛很积极，但实际情况是她天天上课都十分疲惫，精力不济。问道，答曰下午下课之后不是去故宫颐和园，就是去后海南锣鼓巷。十多天下来，倒有一半时间是睡过去的。&lt;/p&gt;
&lt;p&gt;舍友课后与BEC听力老师闲聊，得知这样的情况不属于个别现象。听力老师一针见血，分析现在的大学生有种学习的错觉，大概认为自己报了一个班，就等同于掌握了那门知识。把完成学习的仪式放在首位，听课认真与否反倒不重要了。（有时候我们选课也有这种心态。——Troy注）新东方在每年BEC考试后会给每位学员打电话询问考试结果，很多人一听是新东方打来的，立刻挂掉。这样的不消说，一般根本连考试都没有参加。根据考勤记录和考后电话，新东方总结出的经验是，凡是上足课的学生绝大部分都能通过，问题就在于很多学生都无法坚持下来。&lt;/p&gt;
&lt;p&gt;积极追求的姿态背后必然少不了欲望的撑腰，对学业、对事业、对生活、对未来，渴望一切变得更好是人之常情。然而就像执行力是衡量一支球队的重要指标一样，教练布置的战术再好，执行不到位也是枉然。欲望一旦超出能力可控制的范围，人们不仅会对大量一知半解的知识产生抗拒，焦虑情绪也会顺势而上，径直将他们拖入无底的黑洞。&lt;/p&gt;
&lt;p&gt;这样的学习焦虑症患者屡见不鲜，也许你自己就是，反正我是。我时常一边用电脑下载者各种资源，一边对老师开出的书单狼吞虎咽，人机的同时崩溃往往是缓解焦虑的良药——I came，I saw，I learned。&lt;/p&gt;
&lt;p&gt;这样的状况愈演愈烈，知道某天在思想史的读书课上，那位头发斑白的老师向我们分享他的读书经验。他说，年轻的时候我每读一部书都必须做读书笔记，后来补了，因为书读多了，但是笔记都看不完。不如停下来，就挑几本书，扎扎实实慢慢读，思想的变化反而更明显。&lt;/p&gt;
&lt;p&gt;这话一直在我脑子里绕，回到宿舍，翻出那些被压在书柜底层的书。它们的内容早已被我淡忘，只知道写得真好，第一眼就知道。推开那些“待读”、“待下载”、“待完成”，今天的我只想漫无目的地在旧书堆里徘徊。&lt;/p&gt;</summary><category term="焦虑"></category></entry><entry><title>用CBitmapButton实现按钮四态的方法</title><link href="http://hackecho.com/2011/07/4-status-button-with-cbitmapbutton/" rel="alternate"></link><updated>2011-07-15T23:00:08-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-07-15:2011/07/4-status-button-with-cbitmapbutton/</id><summary type="html">&lt;p&gt;今天上午由于特殊原因重装了系统，下午四点左右开始了交大一软通的界面绘制。这次一软通界面全面更新，各种控件该自绘的自绘，该贴图的贴图，力争给用户最好的视觉和操作体验。&lt;/p&gt;
&lt;p&gt;第二个选项卡效果是鼠标悬浮时的效果，其实这不是TabControl，而是普普通通的Button，但用到了按钮的四态。&lt;/p&gt;
&lt;p&gt;下面简单总结一下四态按钮的实现，以备日后之需。&lt;/p&gt;
&lt;p&gt;为了实现一些按钮的特效，网上遍布着从CButton派生的各种各样的按钮类，其中最为著名的就是CButtonST类。但考虑到各方面原因，最好的选择还是自己努力实现想要的效果，一方面可以消除代码冗余，另一方面自己也学习到了知识。&lt;/p&gt;
&lt;p&gt;今天的主角是CBitmapButton类，可以参考MSDN自带的例子“CTRLTEST”学习CBitmapButton的用法。这里简单总结一些要点：&lt;/p&gt;
&lt;p&gt;按钮选中Owner Draw属性，不需要选择Bitmap属性；&lt;/p&gt;
&lt;p&gt;按钮成员变量的类型定义为CBitmapButton，不可用ClassWizard生成CButton类进行修改，否则会出错；&lt;/p&gt;
&lt;p&gt;将位图与按钮进行关联，一般有两种方法：&lt;/p&gt;
&lt;p&gt;（一）使用CBitmapButton::LoadBitmaps装载各种状态的图片,使用SubclassDlgItem关联到想要的按钮，使用CBitmapButton::SizeToContent函数使按钮适合图片大小。注意Loadbitmaps一定要在关联到按钮之前进行！&lt;/p&gt;
&lt;p&gt;（二）使用CBitmapButton::AutoLoad函数关联到想要的按钮。&lt;/p&gt;
&lt;p&gt;在第三点中推荐使用第二种方法，但有一些注意事项：&lt;/p&gt;
&lt;p&gt;A、之前不能使用CBitmapButton::LoadBitmaps装载各种状态的图片，否则会出错。&lt;/p&gt;
&lt;p&gt;B、AutoLoad函数完成的关联和改变按钮大小的CBitmapButton::SizeToContent函数的功能。&lt;/p&gt;
&lt;p&gt;C、CBitmapButton::AutoLoad使用的位图是默认资源ID的，即它会自动装载相关资源位图。位图的资源ID格式为："按钮Caption+U"、"按钮Caption+D"、"按钮Caption+F"、"按钮Caption+X"，分别代表Up、Down、Focus、Disable状态。如资源编辑时，希望关联的按钮的Caption为Test，那么其默认装载的位图资源的ID为："TestU"/"TestD"/"TestF"/"TestX"，注意分号""也是其ID的一部分。
最后，将按钮的MouseMove消息在PreTranslateMessage中处理即可，代码如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;BOOL&lt;/span&gt; &lt;span class="n"&gt;Cyrt30Dlg&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;PreTranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MSG&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;pMsg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WM_MOUSEMOVE&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;pMsg&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;POINT&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;GetCursorPos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;CString&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;CWnd&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GetDlgItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IDC_TabNav&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="c"&gt;%d&amp;quot;,hwnd=WindowFromPoint(p));&lt;/span&gt;

        &lt;span class="n"&gt;CWnd&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;hwndTabNav&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GetDlgItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IDC_TabNav&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hwndTabNav&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;hwnd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetFocus&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;!&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;hwndTabNav&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;hwndTabNav&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;SetFocus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetFocus&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;hwndTabNav&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;GetDlgItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IDC_NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;SetFocus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;CDialogEx&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;PreTranslateMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pMsg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样，就可以完美实现四态按钮了。&lt;/p&gt;</summary><category term="CBitmapButton"></category><category term="四态按钮"></category></entry><entry><title>关于Google+的种种</title><link href="http://hackecho.com/2011/07/something-about-google-plus/" rel="alternate"></link><updated>2011-07-08T01:21:37-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-07-08:2011/07/something-about-google-plus/</id><summary type="html">&lt;p&gt;&lt;img alt="" src="/static/images/2011/07/Google-Plus1-e1310058522662.png" /&gt;&lt;/p&gt;
&lt;p&gt;应好友&lt;a href="http://yihuxingkong.kuandao.com/"&gt;@一湖星空&lt;/a&gt;的邀请，第一时间体验了Google最新推出的社交项目Google+，看看这位在社交领域屡次失败的巨头是怎样发动最后一轮进攻的。&lt;/p&gt;
&lt;h3&gt;Google+是什么&lt;/h3&gt;
&lt;p&gt;Google+是Google高管维克·冈多特拉(Vic Gundotra)和布拉德利·霍洛维茨(Bradley Horowitz)负责的一项社交服务项目，其用户界面出自苹果前Mac软件团队设计师安迪·赫兹菲尔德(Andy Hertzfeld)之手。Gundotra和Horowitz认为Google+不只是一个产品，也不是一种战略方案，而是一个扩展后的Google。Google+目的是让Google在线资产在日常生活中更普及，而不只是网上冲浪时偶然点击、搜索一个网站。Google+于2011年6月28日亮相，仍处于测试阶段。&lt;/p&gt;
&lt;p&gt;在过去的一年里，Google+的开发一直秘密进行着，期间传闻不断，也有过官方辟谣，但最终它还是出现了。&lt;/p&gt;
&lt;h3&gt;Google+项目负责人谈产品&lt;/h3&gt;
&lt;p&gt;“我们认为在线共享很糟糕，甚至是奇怪。”Gundotra说。“我们相信和其他人保持联系是人类的一项基本需求。在现实生活中，我们一直这么干，但是在线工具却很不自然。它们强迫我们完全公开化。而现实生活中的分享却很微妙而丰富，要把这件事做成软件很难。” 说完这话，Gundotra开始向MG Siegler展示Google+的demo。整体上，MG Siegler觉得这款产品设计的太好，看起来甚至不像是Google的产品。非常显然，Google在Google+的用户界面和用户体验方面下了很大功夫。&lt;/p&gt;
&lt;p&gt;具体的诱人功能目前有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Circles「圈子」&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sparks「火花」&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Instant Upload 「瞬时上传」&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Huddle「群信」&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hangouts「闲逛」&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些功能就不再一一具体介绍了，大家可以去亲自体验一下或网上搜索一下，本文后面也附有相关的介绍视频。&lt;/p&gt;
&lt;h3&gt;关于Google+你必须知道的50件事【推荐】&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Google+的目的是让你离开Twitter或Facebook，或者同时离开两者，并且这事很快就会发生。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;看上去像FriendFeed？担心很快会死掉？要知道Newt Gingrich已经加入G+。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有了Google+账户，Picasa用户可获得无限免费图片空间。(Flickr和Facebook图片是否感到威胁？)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有了Circles「圈子」，你可以一目了然地控制隐私。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;「关于」部分很强大，支持链接、图片、二维码。营销者欢呼吧。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果Google+开始影响Page Rank「网页排名」的话，那么对SEO/SEM也有用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果Google Music和YouTube那样也和这个平台整合的话，Google+立刻会成为一个强大的娱乐媒体平台。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Android版Google+「下载地址」早期已经取得一定成功，如果这个平台成功的话，这将改变人们对移动操作系统和支出的选择。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你在Google+上问问题然后和「圈子」共享的话，它可以取代Quora。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;视频聊天功能对协作和轮班来说是一把利器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单独的Google+ 应用加上Google Docs可以组成一个非常强大的企业协作环境，可以轻而易举击败大部分白标签企业级社交产品。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由于G+可以看到我们的评论，Google可以更好地开发出社交图景，然后整合AdSense，乃至Google Affiliate。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果Google+提供一个WordPress评论整合功能，我立马会试试。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果G+成功的话，几个月前就推出的+1按钮或许不再那么蹩脚。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;人们总是说Facebook有6亿用户，所以谁也跑不掉。还有人记得美国在线吗？人们会迁移，这种事情不是不会发生。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目前试水Google+的大人物越来越多，这是史无前例的，比如Michael Dell和Mark Zuckerberg。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;G+让Gmail的使用频率更高。2天收到了15封非垃圾邮件，要知道我几乎已经两年没收到过非垃圾邮件了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果Google把日历整合到G+中，那么G+就会具备社交日立的功能，更像Tungle。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;几乎快要死掉的Google Buzz会起死回生，尤其是你经常使用Google Reader分享的话。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;G+的图片显示界面很赞，让G+成为一个很赞的媒体平台。这为企业带来了机会。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google大力推广ChromeOS，再加上Android的飞速发展，G+已经成为一个非常强大的沟通、媒体、分享平台，生来支持多种平台，并且支持各个平台上的浏览器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hangouts「闲逛」支持Google翻译，为多语言即时通讯提供了便利。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google+非常适合用作社交化客服，只要它能提供类似search.twitter.com一样的搜索功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;G+很容易就可以整合Google Voice，增加手机短信功能，并且Gtalk已经支持一对一视频和语聊了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;整合Blogger不会改进G+。WordPress已经赢得了博客之战。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;G+也不会取代博客，但不会像博客那样在Twitter、Facebook’崛起之后就一蹶不振，G+吸引力更大。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;别被上条迷惑了。你的博客才是你的家。在别人地盘上写博客就像是住旅馆，这里你说了不算。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Twitter的确像是一个新闻发布室，但G+讲述和发布故事的方法更多。G+里面的一个新闻「圈子」看上去就像是Flipboard一样。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;G+在Android平板电脑上看上去美极了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;广告整合似乎很简单、明显。商务整合也不难。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你激活了手机的位置功能，G+会根据谁在「附近」创建一个圈子，一个给予位置的弹性社交网络就这样诞生了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果G+在二维码和基于位置的媒体方面有所作为的话，那么你将获得一个强大的媒体/营销机会。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;G+允许你进行有趣的多格式发布：把音频、视频、照片、文本、链接和位置信息整合到一个包裹或项目里，然后你就可以获得一个强大的数字发布平台。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第一场Hangout现场音乐会何时亮相呢？只需一个录音按钮你就可以变得酷味十足，只需给Google Checkout增加一个「自己定价」的功能，你就可以进行即时小额内容销售。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果Google Places整合G+，并且你使用移动/附近功能的话，有趣的“迁移”图景突然间会变成营销者的一个新数据点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google+非盈利的一面很有意思，尤其是Google Pages针对Google+进行了改版。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果我在G+里面分享一个Google演示稿文件的话，那么我可以在一个有价值的系统内部分享商业信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google+需要一个「置顶」功能，这样就可以在首页或档案页显示当天的消息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当Google+支持站外分享和书签功能，并且增加内置统计功能的短网址服务之后，G+将更加强大。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;G+没有内置私信功能，但每个人的档案页都有一个发送邮件功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spark「火花」版块还没那么引人入胜，但有了用户生成的内容，并且每个人采用不同的维护管理方法的话，很快我们就会大快朵颐。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果我是Google我会收购Alltop，用它取代Spark。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果用户把自己加入一个公开或只有会员才能加入的圈子，Google+带来的将是一款终极会议工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;很多人在G+里使用#号标签，但Google还不支持。但还是让我们自己创造一些暗语吧，这么做更有趣。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;福特已经在研究G+了。地理信息、位置、用户好友信息，这些东西加在一起组成一个丰富的营销档案，是非常有用的营销工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google+将变成联署网络营销「affiliate marketing」的最佳环境。如果你推荐的某个关键词导致了他人的购买行为，你就会得到报酬。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有人担心营销者会进入G+捣乱。这种担心不无道理。这是一片新的试验场，营销者不会放弃。但我很乐观。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;地点、Google页面和G+的整合对小公司来说也是件好事。一场社交化客服运动正在上演。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当我把一些搜索RSS feed导入G+之后，G+就像是一个兼具媒体制作/管理功能监听站。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根据算法不同，热门话题的概念在G+上更有价值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;你认为Google+还有那些应用和前景呢？欢迎补充。&lt;/p&gt;
&lt;h3&gt;Google+工程师的闷骚&lt;/h3&gt;
&lt;p&gt;不解释，看图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/07/google+1.jpg" /&gt;&lt;/p&gt;
&lt;h3&gt;相关资源&lt;/h3&gt;
&lt;p&gt;文章&lt;a href="http://tech.qq.com/a/20110704/000303.htm"&gt;《Google+内幕：搜索巨人的社交网络努力》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文章（来自36氪）&lt;a href="http://www.36kr.com/google-plus-team-leaders-talk-about-product-details/"&gt;《Google+项目负责人分享产品细节》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文章（来自DONGXI）&lt;a href="http://dongxi.net/b08bp"&gt;《关于Google+你不得不知道的50件事》&lt;/a&gt;&lt;/p&gt;</summary><category term="Google+"></category></entry><entry><title>10个非常值得学习的Android开源项目</title><link href="http://hackecho.com/2011/07/10-open-source-android-project/" rel="alternate"></link><updated>2011-07-05T18:57:56-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-07-05:2011/07/10-open-source-android-project/</id><summary type="html">&lt;p&gt;&lt;img alt="android开源项目" src="/static/images/2011/07/2010073016245383.png" /&gt;&lt;/p&gt;
&lt;p&gt;暑假要学习Android的同学们请注意了，这里是非常经典的10个Android开源项目，倘若能深入研究，一定会有所收获。&lt;/p&gt;
&lt;h3&gt;1.Android官方团队提供的示例项目&lt;/h3&gt;
&lt;p&gt;如果不是从学习Android SDK中提供的那些样例代码开始，可能没有更好的方法来掌握在Android这个平台上开发。&lt;/p&gt;
&lt;p&gt;由Android的核心开发团队提供了15个优秀的示例项 目，包含了游戏、图像处理、时间显示、开始菜单快捷方式等。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href="http://code.google.com/p/apps-for-android/"&gt;http://code.google.com/p/apps-for-android/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/07/Amazed2_3-300x200.jpg" /&gt;&lt;/p&gt;
&lt;h3&gt;2.Remote Droid&lt;/h3&gt;
&lt;p&gt;RemoteDroid是一个Android应用，能够让用户使用自己的无线网络使用无线键盘、触摸屏操作手机。&lt;/p&gt;
&lt;p&gt;这个项目为开发者提供了如网络连接、触摸屏手指运动等很好的样例。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href="http://code.google.com/p/remotedroid/"&gt;http://code.google.com/p/remotedroid/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/07/9867-remdrscr_super.png" /&gt;&lt;/p&gt;
&lt;h3&gt;3.TorProxy和Shadow&lt;/h3&gt;
&lt;p&gt;TorProxy应用实现了Android手机无线电电传通讯(TOR)，和Shadow应用一起使用，可以使用手机匿名上网。&lt;/p&gt;
&lt;p&gt;从该项目源代码中，可以掌握socket连接、管理cookie等方法。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href="http://www.cl.cam.ac.uk/research/dtg/code/svn/android-tor/"&gt;http://www.cl.cam.ac.uk/research/dtg/code/svn/android-tor/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/07/img02.png" /&gt;&lt;/p&gt;
&lt;h3&gt;4.Android SMSPopup&lt;/h3&gt;
&lt;p&gt;SMSPopup可以截获短信内容显示在一个泡泡形状的窗口中。&lt;/p&gt;
&lt;p&gt;从这个项目中可以掌握到如何使用内置的短信SMS接口。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href="http://code.google.com/p/android-smspopup/"&gt;http://code.google.com/p/android-smspopup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/07/sms_popup.png" /&gt;&lt;/p&gt;
&lt;h3&gt;5.Standup Timer&lt;/h3&gt;
&lt;p&gt;Standup Timer应用用于控制站立会议时间，类似秒表倒计时，可以提醒每个人的讲话时间已到，从而保证每个与会者使用时间一样。&lt;/p&gt;
&lt;p&gt;从该项目的代码中，可以学会如何使用时间函数。另外，这个项目的代码是采用视图view、模型model严格分离的设计思路。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href="http://github.com/jwood/standup-timer"&gt;http://github.com/jwood/standup-timer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/07/images.jpg" /&gt;&lt;/p&gt;
&lt;h3&gt;6.Foursquare&lt;/h3&gt;
&lt;p&gt;是 Foursquare.com的一个客户端应用，该应用主要分为两个模块：API(com.joelapenna.foursquare)和界面前端(com.joelapenna.foursquared)两部分。&lt;/p&gt;
&lt;p&gt;从该项目代码中，可以学会如何同步、多线程、HTTP连接等技术。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href="http://code.google.com/p/foursquared/"&gt;http://code.google.com/p/foursquared/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/07/picplz-android-foursquare.jpg" /&gt;&lt;/p&gt;
&lt;h3&gt;7.Pedometer&lt;/h3&gt;
&lt;p&gt;Pedometer应用用于记录你每天走路步数的。&lt;/p&gt;
&lt;p&gt;尽管记录不一定精准，但是从这个项目中，可以学习几个不同的技术：加速器交互、语音更新、后台运行服务等。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href="http://code.google.com/p/pedometer/"&gt;http://code.google.com/p/pedometer/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/07/p11_main2.png" /&gt;&lt;/p&gt;
&lt;h3&gt;8.OpenSudoku-android&lt;/h3&gt;
&lt;p&gt;OpenSudoku是一个简单的九宫格数独游戏。&lt;/p&gt;
&lt;p&gt;从代码中可以学习到如何在视图中显示表格数据，以及如何和一个网站交互等技术。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href="http://code.google.com/p/opensudoku-android"&gt;http://code.google.com/p/opensudoku-android&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/07/screen.jpg" /&gt;&lt;/p&gt;
&lt;h3&gt;9.ConnectBot&lt;/h3&gt;
&lt;p&gt;ConnectBot是Android平台的一个客户端安全壳应用。&lt;/p&gt;
&lt;p&gt;从该项目代码中，可以学习到很多Android安全方面的内容，这些是你在开发应用时经常需要考虑的安全问题。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href="http://code.google.com/p/connectbot/"&gt;http://code.google.com/p/connectbot/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/static/images/2011/07/connectbot-top.png" /&gt;&lt;/p&gt;
&lt;h3&gt;10.WordPress的Android应用&lt;/h3&gt;
&lt;p&gt;当然在最后不能不提Wordpress的Android应用了，这是Wordpress官方开发团队提供的一个项目。&lt;/p&gt;
&lt;p&gt;从代码中可以学习到XMLRPC调用（当然还有更多的优秀内容）。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href="http://android.svn.wordpress.org/trunk/"&gt;http://android.svn.wordpress.org/trunk/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;希望大家喜欢。&lt;/p&gt;</summary><category term="Android"></category><category term="开源"></category></entry><entry><title>[转] Advice From An Old Programmer</title><link href="http://hackecho.com/2011/06/advice-from-an-old-programmer/" rel="alternate"></link><updated>2011-06-27T00:38:46-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-06-27:2011/06/advice-from-an-old-programmer/</id><summary type="html">&lt;p&gt;本文是《Learn Python The Hard Way， 2nd Edition》这本书的尾声部分。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://pic003.cnblogs.com/2011/1/201106/2011062108360289.png" /&gt;&lt;/p&gt;
&lt;p&gt;You've finished this book and have decided to continue with programming. Maybe it will be a career for you, or maybe it will be a hobby. You'll need some advice to make sure you continue on the right path, and get the most enjoyment out of your newly chosen activity.&lt;/p&gt;
&lt;p&gt;I've been programming for a very long time. So long that it's incredibly boring to me. At the time that I wrote this book, I knew about 20 programming languages and could learn new ones in about a day to a week depending on how weird they were. Eventually though this just became boring and couldn't hold my interest anymore. This doesn't mean I think programming &lt;em&gt;is&lt;/em&gt; boring, or that &lt;em&gt;you&lt;/em&gt; will think it's boring, only that &lt;em&gt;I&lt;/em&gt; find it uninteresting at this point in my journey.&lt;/p&gt;
&lt;p&gt;What I discovered after this journey of learning is that it's not the languages that matter but what you do with them. Actually, I always knew that, but I'd get distracted by the languages and forget it periodically. Now I never forget it, and neither should you.&lt;/p&gt;
&lt;p&gt;Which programming language you learn and use doesn't matter. Do &lt;em&gt;not&lt;/em&gt; get sucked into the religion surrounding programming languages as that will only blind you to their true purpose of being your tool for doing interesting things.&lt;/p&gt;
&lt;p&gt;Programming as an intellectual activity is the &lt;em&gt;only&lt;/em&gt; art form that allows you to create interactive art. You can create projects that other people can play with, and you can talk to them indirectly. No other art form is quite this interactive. Movies flow to the audience in one direction. Paintings do not move. Code goes both ways.&lt;/p&gt;
&lt;p&gt;Programming as a profession is only moderately interesting. It can be a good job, but you could make about the same money and be happier running a fast food joint. You're much better off using code as your secret weapon in another profession.&lt;/p&gt;
&lt;p&gt;People who can code in the world of technology companies are a dime a dozen and get no respect. People who can code in biology, medicine, government, sociology, physics, history, and mathematics are respected and can do amazing things to advance those disciplines.&lt;/p&gt;
&lt;p&gt;Of course, all of this advice is pointless. If you liked learning to write software with this book, you should try to use it to improve your life any way you can. Go out and explore this weird wonderful new intellectual pursuit that barely anyone in the last 50 years has been able to explore. Might as well enjoy it while you can.&lt;/p&gt;
&lt;p&gt;Finally, I'll say that learning to create software changes you and makes you different. Not better or worse, just different. You may find that people treat you harshly because you can create software, maybe using words like "nerd". Maybe you'll find that because you can dissect their logic that they hate arguing with you. You may even find that simply knowing how a computer works makes you annoying and weird to them.&lt;/p&gt;
&lt;p&gt;To this I have one just piece of advice: they can go to hell. The world needs more weird people who know how things work and who love to figure it all out. When they treat you like this, just remember that this is &lt;em&gt;your&lt;/em&gt; journey, not theirs. Being different is not a crime, and people who tell you it is are just jealous that you've picked up a skill they never in their wildest dreams could acquire.&lt;/p&gt;
&lt;p&gt;You can code. They cannot. That is pretty damn cool.&lt;/p&gt;
&lt;p&gt;（最后一句话的意思可以理解为：你会编程，他们不会，这真他妈的酷毙了。）&lt;/p&gt;</summary><category term="Advice"></category><category term="编程"></category></entry><entry><title>解密人人网应用“好友档案”与“X档案”</title><link href="http://hackecho.com/2011/06/secret-of-truth-of-friends-app-in-renren/" rel="alternate"></link><updated>2011-06-23T16:23:23-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-06-23:2011/06/secret-of-truth-of-friends-app-in-renren/</id><summary type="html">&lt;p&gt;最近人人被“好友档案”的应用刷屏了，大家都玩得不亦乐乎。这个应用同“X档案”一样，可以显示关于你好友中“谁最关心你”、“星座分布”、“人脉地图”等。于是忍不住想看看它的原理到底是什么呢？我们一起来分析一下“谁最关心你”的原理。&lt;/p&gt;
&lt;h3&gt;接口分析&lt;/h3&gt;
&lt;p&gt;首先，人人网每个APP能调用的API列在这里，&lt;a href="http://wiki.dev.renren.com/wiki/API"&gt;http://wiki.dev.renren.com/wiki/API&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大家可以看到，并没有获取最近来访或访问次数的API，推测，“谁最关心你”不是根据空间访问来决定的。浏览一遍API，找出和“数量”相关的接口，大概是几个获取回复信息的API：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;status.getComment()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;photos.getComments()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;blog.getComments()&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;另外，每个API都有默认的数量限制，比如获取日志评论，默认50条。完全统计一个人所有的回复，对算法有非常高的要求，人人网信息又如此丰富，所以好友档案不可能完全统计你所有的回复，只能是最近N条的。&lt;/p&gt;
&lt;p&gt;还有一点可以看到，现在还没有有关留言板的API，所以及时两个人留言板聊得再欢，也不会影响排名。&lt;/p&gt;
&lt;h3&gt;算法预测&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;获取当前用户ID；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取ID的状态，记为sid；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;历遍sid，获取所有的回复者id，记为rid，所有的rid组成一个列表，每当在下一个状态里发现同样的rid，则记录数量＋1；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同理获取照片和blog的rid；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rid列表排序，取前6。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;总结&lt;/h3&gt;
&lt;p&gt;其中【最关心你的人】分析方式:获取本人50条状态，按好友回复数排名&lt;/p&gt;
&lt;p&gt;【最自恋的人】分析方式:按好友头像相册中头像的个数排名&lt;/p&gt;
&lt;h3&gt;其它&lt;/h3&gt;
&lt;p&gt;这个应用是由几个在校大学生编写的，对他们的创意和技术表示钦佩。&lt;/p&gt;
&lt;p&gt;最后，博主得到了一些此应用的源代码，感兴趣者请看下面。（未结构化，看着乱的话请复制到你自己的编辑器中Format。信息来自网络，如侵权请邮件告知）&lt;/p&gt;
&lt;p&gt;部分源代码如下：（Python）&lt;/p&gt;
&lt;p&gt;因版权和安全原因，源码不再公开。&lt;/p&gt;</summary><category term="人人网"></category><category term="好友档案"></category></entry><entry><title>你必须很努力，才能看起来毫不费力</title><link href="http://hackecho.com/2011/06/try-your-best-to-live/" rel="alternate"></link><updated>2011-06-06T05:54:03-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-06-06:2011/06/try-your-best-to-live/</id><summary type="html">&lt;p&gt;&lt;img alt="" src="http://www.umiwi.com/public/article_image/2011/04/20110420131245_19638.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;有人领悟了些什么，有人坚持了些什么，但愿所有人都能从这学到些什么。&lt;/p&gt;
&lt;p&gt;有时候，只要迈出第一步，接下来的坚持就是水到渠成。不要再有什么羡慕嫉妒恨，别人能有的，我们一样能。 下决心改变，并且坚定的走下去。我们要做的，只是这样一件简单的事而已。&lt;/p&gt;
&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 克服拖延症~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;
&lt;p&gt;拖延表现：&lt;/p&gt;
&lt;p&gt;1.先玩玩电脑，看看电视，或者小睡一下，喝杯咖啡，喝杯茶吧。（告诉自己，这是拖延的表现）&lt;/p&gt;
&lt;p&gt;2.最后一刻完成任务质量会比较高，并且有效率。因为到时候可以全心全意完成任务，并且可以借鉴他人的。现在完成，中途还要修改好多次，还不如等别人都写完了综合借鉴一下。&lt;/p&gt;
&lt;p&gt;3.我花费很少的时间完成任务，即使最后结果不好，那也只是因为我没有尽全力。如果我真的努力，结果肯定很好。（这个经常见，特别是比赛前的准备阶段）&lt;/p&gt;
&lt;p&gt;4.任务好多啊，先多玩一会儿，最后拼命专注完成吧，什么都不玩了，把整个下午晚上都贡献给这些任务。（结果往往下午晚上也在玩）&lt;/p&gt;
&lt;p&gt;5.完成任务过程中，突然想起要做某事，或者想起要给某人发短信等等。或者突然发呆等等。（将突然想起的事情记在纸上，一切都等任务完成后再解决。推迟满足感）&lt;/p&gt;
&lt;p&gt;6.突然心情不好。（你要郁闷就郁闷吧，不管你了）&lt;/p&gt;
&lt;p&gt;原因：&lt;/p&gt;
&lt;p&gt;1.定的任务过高，不切自身实际。想要一口吃成个胖子。俗话眼高手低。比如你自己定期给自己做的计划，任务过多过杂。（这说明一方面你有上进心，另一方面你又做不到。你想要哪方面呢？当然是做到的满足感咯，慢慢调节，任务减少，然后等拖延这个毛病有所好转后，慢慢增加）&lt;/p&gt;
&lt;p&gt;2.很享受那种拖到最后突然完成，然后deadline突然过去一下子放松的感觉。&lt;/p&gt;
&lt;p&gt;3.有时候拖到最后做事结果反而挺好。（这样从长远来看，于心理于生活等都是有害的，取得的只是一时的好成果）&lt;/p&gt;
&lt;p&gt;4.觉得如果自己花了很长时间做一件事情却成绩平平是件很丢脸的事。而如果花的时间少，即使结果不好，也有借口说自己没努力。即心理学中的高自尊人格。&lt;/p&gt;
&lt;p&gt;5.完美主义倾向。想起自己的远大理想并希望为之努力，想起无处不在的优秀人物，便觉得自己浪费了太多时间。但又想自己即使努力也赶不上了，于是又开始拖延。&lt;/p&gt;
&lt;p&gt;6.太过关注自己一时的情绪，如觉得自己不开心了，想上网弥补空虚。（这样长期来说会大大削弱一个人的自制力，并且会降低一个人的自我满足感和幸福感，反而会增加负罪感和焦虑感）（唉，自己经常有这些毛病，比如同学一约，就想出去玩。。。）&lt;/p&gt;
&lt;p&gt;7.为未来过度操心，对过去发生的事情不愉快，对自己不满。&lt;/p&gt;
&lt;p&gt;8.看书时看了好几页去不知道看了什么（随时联系前文和现实思考内容）&lt;/p&gt;
&lt;p&gt;解决心理：&lt;/p&gt;
&lt;p&gt;1.不要去想做的好坏，只要去做，并以把任务做的最差为目标即可。（摆脱完美主义，然后慢慢完善任务即可，不用一天内都完成，而是一天只抽一点点时间来修改，比如论文）&lt;/p&gt;
&lt;p&gt;2.任务只做一遍。（摆脱完美主义）&lt;/p&gt;
&lt;p&gt;3.管他呢，我先完成这个任务再说。（不去和别人比，不去想太多的目标和任务，摆脱任务带来的压迫感）&lt;/p&gt;
&lt;p&gt;4.推迟满足感。（摆脱过程中的分神和退缩倾向）&lt;/p&gt;
&lt;p&gt;5.你要郁闷就郁闷吧，不管你了。（摆脱坏心情带来的干扰，保持心态平和）&lt;/p&gt;
&lt;p&gt;6.接受过去，接受自己，客观接受现实，不再自责痛苦等等。不要为未来过度操心。&lt;/p&gt;
&lt;p&gt;7.过程中发呆或者突然有什么小欲望，拿纸记下即可。&lt;/p&gt;
&lt;p&gt;解决方法，自我对话：&lt;/p&gt;
&lt;p&gt;1.今天我要开始做。。。（vs.我今天必须完成……）&lt;/p&gt;
&lt;p&gt;2.我只要把这个事情做完就好了。（vs.我必须完美/出类拔萃）&lt;/p&gt;
&lt;p&gt;3.今天我的底线任务是。。。&lt;/p&gt;
&lt;p&gt;1.最好的做事态度是，不要神经紧绷，也不要过度松懈，而是适度紧张感。&lt;/p&gt;
&lt;p&gt;2.时间狂是那些过度关心时间的人，凡事井井有条，让自己忙个不停，把握住每一秒时间，执着于列详细计划，这种过于讲究条理的人效率往往很低。&lt;/p&gt;
&lt;p&gt;3.我们必须学会让自己利用时间的方式更加符合当前的角色。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;列出优先顺序。星级三件事。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;5.有选择性的留意在自己分配时间的方式，记录下那些占用大量时间但自己却感觉毫无意义的活动。&lt;/p&gt;
&lt;p&gt;6.找出自己的内部黄金时间，即工作效率最高的时间，外部黄金时间，即和别人打交道的最佳时间。（即考虑到别人的行程）&lt;/p&gt;
&lt;p&gt;7.经常提问自己拉金式问题：我现在最应该做什么？&lt;/p&gt;
&lt;p&gt;8.yes,i can.&lt;/p&gt;
&lt;p&gt;10.如果你“感觉”某件事很困难或者是不可能的，那么你就不会感觉一件事很容易那样情愿着手去做了。但这只是感觉，不一定是事实。还不如假设它并不困难。&lt;/p&gt;
&lt;p&gt;11.即使在做一件你并不喜欢的事情，你还是有选择的余地，你可以满脸痛苦，你也可以开开心心。一旦决定去做某件事情，你完全可以尽量让自己享受这个过程。&lt;/p&gt;
&lt;p&gt;12.培养意志力：&lt;/p&gt;
&lt;p&gt;a.在感觉非常紧张繁忙的时候做好规划；&lt;/p&gt;
&lt;p&gt;b.让自己始终在做某件事，即便最终未必成功；&lt;/p&gt;
&lt;p&gt;c.克制自己的逃避欲望，尤其是在处理重要任务时；&lt;/p&gt;
&lt;p&gt;d.始终对自己充满信心，即使有过无数次失败；&lt;/p&gt;
&lt;p&gt;e.每天都向着自己的人生目标前进一步；&lt;/p&gt;
&lt;p&gt;f.克服恐惧心理，无论这种恐惧是真实的还是你想象的；&lt;/p&gt;
&lt;p&gt;g.克制自己的冲动，不要去做那些简单的并且不重要的工作。&lt;/p&gt;
&lt;p&gt;13.时刻问自己，你是不是在浪费时间，因为有些时候自己总是在做一些不重要的事情而不愿去做真正重要的事情，那是拖延的表现。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;拖延不可怕，过段时间你自己就突然有了动力摆脱它的困扰了。&lt;/p&gt;
&lt;p&gt;希望大家还是每天都积极，不要再去因为已经浪费掉的时间而懊悔不已。这句是大实话。&lt;/p&gt;
&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~坚持就是胜利~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;
&lt;p&gt;【先从能做到的地方养成一种叫“坚持”的习惯，然后再去养成一种叫“坚韧”的性格。】&lt;/p&gt;
&lt;p&gt;我们一起在这里坚持着、坚守着，每一个人都不孤单。&lt;/p&gt;
&lt;p&gt;播下一种思想收获一种行为；播下一种行为收获一种习惯；&lt;/p&gt;
&lt;p&gt;播下一种习惯收获一种性格；播下一种性格收获一种命运。&lt;/p&gt;
&lt;p&gt;事实上，养成任何非天生的习惯，都是需要挣扎才能做成的事情。我们只有一个习惯是天生的——“懒惰”。对每个人来说，懒惰都曾经是天经地义的——谁都得经历或长或短那么一个“衣来伸手饭来张口”的时期才可能长大。在那段时间里，谁都是随心所欲的。然而，没有人可以总是“随心所欲”。一度确实可能的“随心所欲”只不过是幼年时的真实，少年时幻想，成年时的苦恼，老年时的绝望。现在，就让我们行动起来，克服自己的懒惰，做自己最想做的那个人吧！&lt;/p&gt;
&lt;p&gt;方法：&lt;/p&gt;
&lt;p&gt;(1)第一步：确定真正要的是什么；&lt;/p&gt;
&lt;p&gt;(2)第二步：相信改变对自己有帮助；&lt;/p&gt;
&lt;p&gt;(3)第三步：停止所有旧的行为模式；&lt;/p&gt;
&lt;p&gt;(4)第四步：另找出新的、好的行为模式；&lt;/p&gt;
&lt;p&gt;(5)第五步：不断调整新的行为，使之成为习惯；&lt;/p&gt;
&lt;p&gt;(6)第六步：测试一下效果。&lt;/p&gt;
&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~生活兴奋剂~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p&gt;
&lt;p&gt;今天很残酷，明天更残酷，后天很美好，&lt;/p&gt;
&lt;p&gt;但是绝大部分人是死在明天晚上，只有那些真正的英雄才能见到后天的太阳。&lt;/p&gt;
&lt;p&gt;一、一大早被闹钟吵醒，说明还活着；&lt;/p&gt;
&lt;p&gt;二、不得不从被窝里爬起来上班，说明没有失业；&lt;/p&gt;
&lt;p&gt;三、收到一些短信，或吃饭聚聚，说明还有朋友想咱；&lt;/p&gt;
&lt;p&gt;四、听别人的话有时刺耳，说明还有人注意你；&lt;/p&gt;
&lt;p&gt;五、衣服越来越紧，说明吃得还算营养；&lt;/p&gt;
&lt;p&gt;六、总想出国去看看，说明生活还有追求；&lt;/p&gt;
&lt;p&gt;七、很想休息但没批准，说明还有一定位置离不开你；&lt;/p&gt;
&lt;p&gt;八、看了这个文字还能发出会心的微笑，说明你是快乐幸福的。&lt;/p&gt;
&lt;p&gt;每个安慰你挂科算什么的人，最后都默默拿了奖学金；&lt;/p&gt;
&lt;p&gt;每个夸你肥嘟嘟的脸好可爱的人，最后都瘦成了万人迷；&lt;/p&gt;
&lt;p&gt;每个在你面前说自己前途渺茫的人，最后都身家过亿；&lt;/p&gt;
&lt;p&gt;只有你，在满床的薯片袋和电脑荧光照射下，淬炼成一朵SB。&lt;/p&gt;</summary><category term="努力"></category><category term="拖延症"></category></entry><entry><title>人事部门和别的程序员是怎样阅读你的简历的</title><link href="http://hackecho.com/2011/05/how-others-read-your-resume/" rel="alternate"></link><updated>2011-05-19T20:08:18-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-05-19:2011/05/how-others-read-your-resume/</id><summary type="html">&lt;h3&gt;人事部门是这样阅读简历的&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;（+15分）如果简历中说到了和工作职位相符的技能超过5次以上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+8分）如果简历中说到了和工作职位相符的技能3次到5次。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+4分）如果简历中说到了和工作职位相符的技能1次到2次。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+4分）Cover Letter（“求职信”或“自荐信”）提到了招聘人员。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+2分）简历中有Cover Letter（求职信）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-10分）没有提到和职位描述相关的技能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-15分）没有受过大专教育。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;程序员是这样阅读简历的&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;（+15分）曾经因为好玩而写过操作系统或编译器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+12分）简历被LaTeX编译过。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+11分）为开源软件贡献过代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+9分）上学的时候曾经写过操作系统或编译器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+8分）有一个BLOG分享技术知识。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+8分）编程/机器人/工程俱乐部主席。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+7分）编程/机器人/工程竞赛参与者。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+7分）在Google和Microsoft实习过。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+6分）使用动态语言（Python/Perl/Ruby）写过非试验性的程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+5分）知道3种或多于3种的编程语言。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+5分）之前的工作和目前的职位有很相似的经验。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+4分）有过实习经验。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+4分）自己创过业开过公司。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+4分）有一个通过Rail, PHP或ASP.NET的个人主页。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+3分）有一个自己域名的邮件地址。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+3分）改过一些由动态语言（Python/Perl/Ruby）写的程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+2分）有一个个人主页。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+1分）高学历，学习成绩优秀，等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+0分）有奖学金。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（+0分）在快餐店工作过。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-0.5分）Fackbook上有一张看上去喝醉了的照片。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-1分）有博士头衔。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-2分）有一个一般的求职信。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-2分）在简历中说自己懂Word/Excel。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-2分）在简历中有拼写和语法错误。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-3分）简历的字体太小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-4分）所有的编程经验只是在学校中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-4分）只知道一门编程语言。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-6分）简历有三页以上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-6分）简历中有一些无关的东西。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-7分）得到过一些课程的认证。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-8分）相关专业课程很低的成绩。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-10分）在技能中，把Visual Basic列在第一的位置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-12分）在Facebook中，有过光膀子的照片。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（-15分）简历中的缩进同时使用了空格和Tab键。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;个人觉得其中的很多东西真是说出了程序员的那种特性。&lt;/p&gt;</summary><category term="简历"></category></entry><entry><title>面试题：火车运煤问题</title><link href="http://hackecho.com/2011/05/coal-transportation-algorithm/" rel="alternate"></link><updated>2011-05-19T19:00:05-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-05-19:2011/05/coal-transportation-algorithm/</id><summary type="html">&lt;p&gt;这个可能是一个比较经典的智力题了，其题目如下：&lt;/p&gt;
&lt;p&gt;你是山西的一个煤老板，你在矿区开采了有3000吨煤需要运送到市场上去卖，从你的矿区到市场有1000公里，你手里有一列烧煤的火车，这个火车最多只能装1000吨煤，且每一公里需要耗一吨煤。请问，作为一个&lt;strong&gt;懂编程&lt;/strong&gt;的煤老板的你，你会怎么运送才能运最多的煤到集市？&lt;/p&gt;
&lt;p&gt;这道题一开始看上去好像是无解的，因为你的火车每一公里就要消耗一吨煤，而到目的地有1000公里，而火车最多只能装1000吨媒。如果你的火车可以全部装下，到目的地也会被全部烧光，一丁点也不剩。所以，很多人的第一反应都是觉得这个不太可能。&lt;/p&gt;
&lt;p&gt;如果你一开始就觉得不太可能的话，这是很正常的。不过我不知道你还会不会继续思考下去，如果你不想思考下去了，那么我很为你担忧，因为你可能并不是一个不善于思考的人，而是一个畏难的人，还有可能是一个容易放弃的人。这对于你做好 一个需要大量思考的工作的程序员来说可能并不适合。&lt;/p&gt;
&lt;p&gt;我一开始也觉得不可能，后来想了一想，想到一个解法可以最多运送500吨煤到市场（当然还有更好的结果），方法如下：（希望你先自己想一想再查看这个答案）&lt;/p&gt;
&lt;p&gt;答案之一：&lt;/p&gt;
&lt;p&gt;装1000吨煤，走250公里，扔下500吨煤，回矿山。&lt;/p&gt;
&lt;p&gt;装1000吨煤，走到250公里处，拿起250吨煤继续向前到500公里处，扔下500吨煤，回矿山。此时火车上还有250吨，再加上在250公里处还有250吨煤，所以，火车是可以回矿山的。&lt;/p&gt;
&lt;p&gt;装上最后1000吨煤，走到500公里处，装上那里的500吨煤，然后一直走到目的。&lt;/p&gt;
&lt;p&gt;于是，你最多可以运送500吨煤到市场（当然，火车也回不去了，因为那矿山没有煤了）&lt;/p&gt;
&lt;p&gt;好像这样很不错的了，不过还有更好的方法能运更多的媒过去。你知道这个方法吗？可以提示的是，就是以上述这个方法的思路。我先暂时不把答案放上来，你可以自己想想。（最佳答案是533）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更新：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一公里一公里的向前移动
在3000 – 2000 时，每向前一公里，需要来回移动5次，故在这个时段每公里耗费5吨煤
在2000 – 1000 时，每向前一公里，需要来回移动3次，每公里耗费3吨煤
在1000 – 0 时，每公里1吨煤&lt;/p&gt;
&lt;p&gt;所以结果如下：
剩下的煤 已经走了的公里数
3000 : 0
2000 : (1000/5) = 200
1001 : 200 + (1000/3) = 533&lt;/p&gt;
&lt;p&gt;最后在走了533公里的时候，火车上还可以有1001吨，但是零下的一吨是带不走的
所以最后应该是 1000吨 – （1000公里 – 533公里）* 1吨每公里 = 533吨&lt;/p&gt;
&lt;p&gt;以下为代码实现方法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;* @param m the total weight of coal&lt;/span&gt;
&lt;span class="cm"&gt;* @param n the capacity of train or the miles count of distance&lt;/span&gt;
&lt;span class="cm"&gt;* @return the weight of the left coal mine&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;
&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;milesLeft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;capacity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;coalLeft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;backAndForthCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;coalLeft&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;milesLeft&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="n"&gt;coalLeft&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;milesLeft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mh"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="mh"&gt;1&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;backAndForthTimes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;backAndForthCount&lt;/span&gt; &lt;span class="err"&gt;–&lt;/span&gt; &lt;span class="mh"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;backAndForthTimes&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mh"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="c1"&gt;// 每次向前走一公里耗费的煤&lt;/span&gt;
        &lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;costPerMile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;backAndForthTimes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;milesToBeMoved&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;costPerMile&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;coalLeft&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;milesToBeMoved&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;costPerMile&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;milesLeft&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;milesToBeMoved&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;backAndForthCount&lt;/span&gt;&lt;span class="err"&gt;–&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;backAndForthTimes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;backAndForthCount&lt;/span&gt; &lt;span class="err"&gt;–&lt;/span&gt; &lt;span class="mh"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;capacity&lt;/span&gt; &lt;span class="err"&gt;–&lt;/span&gt; &lt;span class="n"&gt;milesLeft&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;miles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;capacity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;there&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;totally&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;ton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;coal&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;miles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;capacity&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="火车运煤"></category><category term="算法"></category><category term="面试题"></category></entry><entry><title>5种非常酷的CSS Hover效果</title><link href="http://hackecho.com/2011/05/5-cool-css-hover/" rel="alternate"></link><updated>2011-05-11T12:18:00-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-05-11:2011/05/5-cool-css-hover/</id><summary type="html">&lt;p&gt;在现代浏览器（所谓现代浏览器，是指以Mozilla和Webkit为核心的浏览器，IE的表现稍微差强人意）中，我们可以运用CSS来实现一些非常炫酷的效果。&lt;/p&gt;
&lt;h3&gt;Bump Up&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" src="http://images.cnblogs.com/cnblogs_com/powertoolsteam/201105/201105101418072144.png" /&gt;&lt;strong&gt;Live Demo:&lt;/strong&gt; &lt;a href="http://designshack.co.uk/tutorialexamples/HoverEffects/Ex1.html"&gt;Click Here to Launch&lt;/a&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="na"&gt;.ex1&lt;/span&gt; &lt;span class="no"&gt;img&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border:&lt;/span&gt; &lt;span class="err"&gt;5&lt;/span&gt;&lt;span class="nf"&gt;px&lt;/span&gt; &lt;span class="no"&gt;solid&lt;/span&gt; &lt;span class="c"&gt;#ccc;&lt;/span&gt;
    &lt;span class="nl"&gt;float:&lt;/span&gt; &lt;span class="nf"&gt;left&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin:&lt;/span&gt; &lt;span class="err"&gt;15&lt;/span&gt;&lt;span class="nf"&gt;px&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="nf"&gt;webkit&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="no"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;margin&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="no"&gt;.5s&lt;/span&gt; &lt;span class="no"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="no"&gt;out&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="nf"&gt;moz&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="no"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;margin&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="no"&gt;.5s&lt;/span&gt; &lt;span class="no"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="no"&gt;out&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="nf"&gt;o&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="no"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;margin&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="no"&gt;.5s&lt;/span&gt; &lt;span class="no"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="no"&gt;out&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="na"&gt;.ex1&lt;/span&gt; &lt;span class="no"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="no"&gt;hover&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="no"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="no"&gt;px&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Stack &amp;amp; Grow&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" src="http://images.cnblogs.com/cnblogs_com/powertoolsteam/201105/201105101434248120.png" /&gt;&lt;strong&gt;Live Demo:&lt;/strong&gt; &lt;a href="http://designshack.co.uk/tutorialexamples/HoverEffects/Ex2.html"&gt;Click Here to Launch&lt;/a&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/*Example 2*/&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="n"&gt;container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width:&lt;/span&gt; &lt;span class="mh"&gt;300&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin:&lt;/span&gt; &lt;span class="mh"&gt;0&lt;/span&gt; &lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="n"&gt;ex2&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height:&lt;/span&gt; &lt;span class="mh"&gt;100&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width:&lt;/span&gt; &lt;span class="mh"&gt;300&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin:&lt;/span&gt; &lt;span class="mh"&gt;15&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt; &lt;span class="mh"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;transition:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="mh"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;moz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;transition:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="mh"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;transition:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="mh"&gt;1&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="n"&gt;ex2&lt;/span&gt; &lt;span class="nl"&gt;img:&lt;/span&gt;&lt;span class="n"&gt;hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height:&lt;/span&gt; &lt;span class="mh"&gt;133&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width:&lt;/span&gt; &lt;span class="mh"&gt;400&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;left:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mh"&gt;50&lt;/span&gt;&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Fade Text in&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" src="http://images.cnblogs.com/cnblogs_com/powertoolsteam/201105/201105101435386456.png" /&gt;&lt;strong&gt;Live Demo:&lt;/strong&gt; &lt;a href="http://designshack.co.uk/tutorialexamples/HoverEffects/Ex3.html"&gt;Click Here to Launch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;类似的这种效果，一般是用JavaScript来实现的，当hover其中某个元素时，另一个元素发生一些变化。本例为了实现这一效果，首先把图片和文字放在一个div里，然后设置div的color：transparent和line-height:0px。当hover时，更改color和line-height属性，使得文字显示。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#ex3 {&lt;/span&gt;
    &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 730&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 133&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;line&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 0&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 50&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;HelveticaNeue-Light&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Helvetica Neue Light&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Helvetica Neue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 300&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; 0&lt;span class="p"&gt;.&lt;/span&gt;5&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;moz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; 0&lt;span class="p"&gt;.&lt;/span&gt;5&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; 0&lt;span class="p"&gt;.&lt;/span&gt;5&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;#ex3:hover {&lt;/span&gt;
    &lt;span class="nb"&gt;line&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 133&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c"&gt;#575858;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;#ex3 img{&lt;/span&gt;
    &lt;span class="n"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 0 15&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Crooked Photo&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" src="http://images.cnblogs.com/cnblogs_com/powertoolsteam/201105/201105101435446352.png" /&gt;&lt;strong&gt;Live Demo:&lt;/strong&gt; &lt;a href="http://designshack.co.uk/tutorialexamples/HoverEffects/Ex4.html"&gt;Click Here to Launch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;实现这个效果是非常容易的，但是因为这是一个非常重要的效果，尤其对于画廊中的缩略图。这个效果中我们使用了一些较新的CSS样式。这个例子使用了box-shadows,transitions和transforms。transform是实现旋转部分，transition是为了让效果更平滑。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#ex4 {&lt;/span&gt;
    &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 800&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 0 &lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;#ex4 img {&lt;/span&gt;
    &lt;span class="n"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 20&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 5&lt;span class="n"&gt;px&lt;/span&gt; &lt;span class="n"&gt;solid&lt;/span&gt; &lt;span class="c"&gt;#eee;&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 4&lt;span class="n"&gt;px&lt;/span&gt; 4&lt;span class="n"&gt;px&lt;/span&gt; 4&lt;span class="n"&gt;px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;2&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;moz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 4&lt;span class="n"&gt;px&lt;/span&gt; 4&lt;span class="n"&gt;px&lt;/span&gt; 4&lt;span class="n"&gt;px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;2&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 4&lt;span class="n"&gt;px&lt;/span&gt; 4&lt;span class="n"&gt;px&lt;/span&gt; 4&lt;span class="n"&gt;px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;2&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; 0&lt;span class="p"&gt;.&lt;/span&gt;5&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;moz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; 0&lt;span class="p"&gt;.&lt;/span&gt;5&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; 0&lt;span class="p"&gt;.&lt;/span&gt;5&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;#ex4 img:hover {&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;7&lt;span class="n"&gt;deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;moz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;7&lt;span class="n"&gt;deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;7&lt;span class="n"&gt;deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Fade In and Reflect&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" src="http://images.cnblogs.com/cnblogs_com/powertoolsteam/201105/201105101436246794.png" /&gt;&lt;strong&gt;Live Demo:&lt;/strong&gt; &lt;a href="http://designshack.co.uk/tutorialexamples/HoverEffects/Ex5.html"&gt;Click Here to Launch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个效果是相对复杂的效果，首先，设置减少图片的初始的透明度，当hover时，把透明度设置回默认值，另外会有一个图片边缘发光的效果和倒影效果（只在以Webkit为内核的浏览器中起作用）。&lt;/p&gt;
&lt;p&gt;如果你对倒影效果不太懂的话，可以参考这篇文章&lt;a href="http://davidwalsh.name/css-reflection"&gt;（Image Reflections with CSS）&lt;/a&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#ex5 {&lt;/span&gt;
    &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 700&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 0 &lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 300&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;#ex5 img {&lt;/span&gt;
    &lt;span class="n"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 25&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 0&lt;span class="p"&gt;.&lt;/span&gt;8&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 10&lt;span class="n"&gt;px&lt;/span&gt; &lt;span class="n"&gt;solid&lt;/span&gt; &lt;span class="c"&gt;#eee;&lt;/span&gt;

    &lt;span class="o"&gt;/*&lt;/span&gt;&lt;span class="n"&gt;Transition&lt;/span&gt;&lt;span class="o"&gt;*/&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; 0&lt;span class="p"&gt;.&lt;/span&gt;5&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;moz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; 0&lt;span class="p"&gt;.&lt;/span&gt;5&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; 0&lt;span class="p"&gt;.&lt;/span&gt;5&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="o"&gt;/*&lt;/span&gt;&lt;span class="n"&gt;Reflection&lt;/span&gt;&lt;span class="o"&gt;*/&lt;/span&gt;
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reflect&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;below&lt;/span&gt; 0&lt;span class="n"&gt;px&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;linear&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="n"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;7&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;1&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;#ex5 img:hover {&lt;/span&gt;
   &lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 1&lt;span class="p"&gt;;&lt;/span&gt;

   &lt;span class="o"&gt;/*&lt;/span&gt;&lt;span class="n"&gt;Reflection&lt;/span&gt;&lt;span class="o"&gt;*/&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reflect&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;below&lt;/span&gt; 0&lt;span class="n"&gt;px&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;linear&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="n"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;7&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;4&lt;span class="p"&gt;)));&lt;/span&gt;

   &lt;span class="o"&gt;/*&lt;/span&gt;&lt;span class="n"&gt;Glow&lt;/span&gt;&lt;span class="o"&gt;*/&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 0&lt;span class="n"&gt;px&lt;/span&gt; 0&lt;span class="n"&gt;px&lt;/span&gt; 20&lt;span class="n"&gt;px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;255&lt;span class="p"&gt;,&lt;/span&gt;255&lt;span class="p"&gt;,&lt;/span&gt;255&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;8&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;moz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 0&lt;span class="n"&gt;px&lt;/span&gt; 0&lt;span class="n"&gt;px&lt;/span&gt; 20&lt;span class="n"&gt;px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;255&lt;span class="p"&gt;,&lt;/span&gt;255&lt;span class="p"&gt;,&lt;/span&gt;255&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;8&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nb"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 0&lt;span class="n"&gt;px&lt;/span&gt; 0&lt;span class="n"&gt;px&lt;/span&gt; 20&lt;span class="n"&gt;px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;255&lt;span class="p"&gt;,&lt;/span&gt;255&lt;span class="p"&gt;,&lt;/span&gt;255&lt;span class="p"&gt;,&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;8&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;These five examples should be enough to inspire you to create your own awesome CSS hover effects. Remember to experiment with these, combine them and add in your own flair to make them more interesting.&lt;/p&gt;
&lt;p&gt;If you’ve spotted any cool hover effects around the web, we want to see them! Leave a comment below and link to a page with an example.&lt;/p&gt;</summary><category term="CSS"></category></entry><entry><title>程序员的翅膀</title><link href="http://hackecho.com/2011/05/fly-of-promgrammer/" rel="alternate"></link><updated>2011-05-10T02:08:06-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-05-10:2011/05/fly-of-promgrammer/</id><summary type="html">&lt;p&gt;有时候在思考一个问题，如果我们现在这些在IT领域里混迹的人出生在了100年前（ENIAC诞生于1946年），会从事些什么呢？当今很多对计算机有天赋的人是否会感到生不逢时呢？也许扎克伯格会成为宅男，拉里佩奇会去研究数学或物理，那么，我会干什么呢？（No offence）&lt;/p&gt;
&lt;p&gt;当然时代是要有人来开创的，比尔盖茨如果没有出生，会有另一个比尔出来的。&lt;/p&gt;
&lt;p&gt;前两段是小发一些感慨，今晚刷夜做一个项目，因为周四就要交了，不是我拖延，而是一个月的开发周期里，我得从头开始学几门新的技术来开发，再加上学校的课业和考试，我已经尽力了。我的同伴们也很给力，感谢他们。&lt;/p&gt;
&lt;p&gt;刚刚看了一篇文章，原文题目叫《每个程序员上辈子都是折翼的天使》（后附原文），有一些心得，不知对不对，当不当说，说出来合不合适，但简单总结一下吧。（个人观点，请勿跨省）&lt;/p&gt;
&lt;p&gt;貌似现在社会上对程序员的看法褒贬不一，不像几年前，程序员的工作是神圣的，能让黑黑的屏幕滚动几行字就很牛X的。那时计算机普及率不高，开发语言也有限，不像现在这么丰富、易学（当年要是有Python这样的脚本语言，估计扫地的老太太早出现了）。当时程序员的翅膀是硬的，受万人敬仰倒谈不上，找工作起码不是问题。如今，有一个新名词叫做“IT民工”，计算机行业的社会地位下降了：“少壮不努力，老大搞IT”、“要嫁就嫁程序员，挣得多，死得早”、“张江男现象”等等等等，读起来感觉总不是滋味。&lt;/p&gt;
&lt;p&gt;其实真相很简单，我们先来看一个事实：现在国外大IT来中国的企业一般都是扁平管理， 只有四层， 最上面2层， 80%是香港和台湾人，我就想不明白了，我们已经开放20多年，怎么老美还是不愿意来雇用本地人呢？ 而我们只能在最下边2层徘徊。只有一个原因，我们不缺少“IT民工”，我们缺少“IT精英”！&lt;/p&gt;
&lt;p&gt;想起刚来交大软件学院时卢苇院长给我们讲的：成为精英型软件工程师，这就是你们未来的目标。&lt;/p&gt;
&lt;p&gt;再说说中国的软件业。我没有深入涉足过，因为我还没有在IT行业里正式工作过，但从一个学生的视角来看，中国的软件产业还有很长的路要走。要创新、要规范化管理、要增强版权意识、要敢于做领头羊，而不是本着“要想超过人家的2.0，就要先学习人家的1.5”（师夷长技以制夷）的想法永远地走在人家屁股后面。&lt;/p&gt;
&lt;p&gt;我们有选择自己生活的权利，也就是说我们可以选择到国外工作，享受更好的待遇，或到外企等等。但我们要时刻记住一个目标，那就是为振兴中华民族而奋斗。不反对山寨，但要山寨要有意义，如果目标只是在世界最大的局域网内号称“中国的Facebook”、“中国的XXX”后再大张旗鼓上市、集资，就失去了这个产业的根本宗旨：创新是最大的驱动力！&lt;/p&gt;
&lt;p&gt;程序员，要好好修炼，路还很长！你的翅膀，是折翼的新奥尔良鸡翅，还是鹰的翅呢？&lt;/p&gt;
&lt;p&gt;附：《每个程序员上辈子都是折翼的天使》&lt;/p&gt;
&lt;p&gt;前段时间我去加油，93号已经涨到了7块4。 加满一箱油我要花400快钱。&lt;/p&gt;
&lt;p&gt;我坐在车里默默的看着油表，我在想，我要忙多久才能赚回400快钱。&lt;/p&gt;
&lt;p&gt;上班这玩意其实是个体力活。&lt;/p&gt;
&lt;p&gt;不是简单的坐在办公桌前写代码就行了，当然，其他行业也一样。&lt;/p&gt;
&lt;p&gt;我老婆在软件公司做文职，每天拖着疲惫的身子回家，虽然她们不用写代码，并不代表她们不用动脑。&lt;/p&gt;
&lt;p&gt;小小的办公室中，到处都有捕鼠器，不小心就能把自己踩上一脚大便。&lt;/p&gt;
&lt;p&gt;我以前呆过的一个公司，更是已经到了令人发指的地步，你按照他的吩咐办事，他说你不懂自由思考。你不按照他的吩咐办事，他说你目无纪律。&lt;/p&gt;
&lt;p&gt;简直就是Office的大杀器。&lt;/p&gt;
&lt;p&gt;这种大杀器还很多。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（下面的几行很有意思——Troy注）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;很多年前，我在中兴南研所面试。&lt;/p&gt;
&lt;p&gt;虽然我面试的只是小小的程序员，但是也许是中兴的面试官便秘，心情不好，他板着个脸刁难我。&lt;/p&gt;
&lt;p&gt;他跟我说，你们这种小角色，我见的太多了，就懂点SSH就出来乱找工作，你懂EJB嘛？&lt;/p&gt;
&lt;p&gt;我说我懂，并且把EJB的原理讲给他听。&lt;/p&gt;
&lt;p&gt;他又问我，EJB只是小儿科，你懂不懂JPA。&lt;/p&gt;
&lt;p&gt;我说我懂，然后又把JPA解释给他听。&lt;/p&gt;
&lt;p&gt;然后他又说，这些都是没水平的技术，你写没写过HTTP服务器？&lt;/p&gt;
&lt;p&gt;正好我那个时候在个研究院里，专门搞GlassFish，我就说了一番。&lt;/p&gt;
&lt;p&gt;最后，他涨红了脸说，那你懂不懂嵌入式。&lt;/p&gt;
&lt;p&gt;这个我真的不懂，而且我在心里说，去你妈的，我还懂怎么抽你。&lt;/p&gt;
&lt;p&gt;所以，上班这玩意真不容易，&lt;/p&gt;
&lt;p&gt;以前在日本上班的时候，每到春天，我都喜欢中午利用午休坐在樱花树下发发呆。&lt;/p&gt;
&lt;p&gt;在东京的日比谷公园边上我上过好几个月班，日比谷公园中午的时候，有很多流浪汉在草地上晒太阳，抓虱子。&lt;/p&gt;
&lt;p&gt;我就喜欢坐在离他们一段距离的小板凳上，看着他们。&lt;/p&gt;
&lt;p&gt;有时候我常常想，如果自己不去做IT，也许就会失业。也许跟他们一样。&lt;/p&gt;
&lt;p&gt;因为自己既不会拍人马屁，口才也很差。&lt;/p&gt;
&lt;p&gt;做个程序员其实蛮不错的，我动动脑子，虽然有时候会受气，&lt;/p&gt;
&lt;p&gt;但是只要想着自己没沦落到流浪的地步，就会觉得很幸福。&lt;/p&gt;
&lt;p&gt;所以，每一个程序员，都是一个折翼的天使！&lt;/p&gt;</summary><category term="程序员"></category></entry><entry><title>程序猿的母亲节</title><link href="http://hackecho.com/2011/05/mother-day-of-programmer/" rel="alternate"></link><updated>2011-05-08T16:21:48-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-05-08:2011/05/mother-day-of-programmer/</id><summary type="html">&lt;p&gt;&lt;em&gt;转自&lt;a href="http://t.sina.com.cn/2093492691"&gt;@程序员的那些事&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;母亲节（Mother's Day），作为一个感谢母亲的节日，最早出现在古希腊，时间是每年的1月8日，而在中国、美国、加拿大和一些其他国家，则是每年5月的第2个星期天，其他一些国家的日期也并不相同。&lt;/p&gt;
&lt;p&gt;母亲们在这一天通常会收到礼物。康乃馨被视为献给母亲的花，中国的母亲花是萱草花，也称忘忧草。作为一个特殊的群体——程序员，我们的表述方式自然也会有些特色。我们这一辈程序员的父母（至少是绝大部分父母），别说这下面的编程语言，有些甚至都还不知道如何操作电脑。虽然也许母亲们会看不懂，但这种表述你我都能领会。或许几十年后，等我们自己的儿女用这种方式来表达他们对父母的爱，你我绝对不会陌生。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;MothersDayFromCodeMonkeyView&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;MothersDayFromCodeMonkeyView&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;0&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;猿猿刚出生的时候
            &lt;span class="n"&gt;saying&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;crying&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;除了哭啼，还不知道如何去表达

            &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;try&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;365&lt;span class="o"&gt;*&lt;/span&gt;24&lt;span class="o"&gt;*&lt;/span&gt;60&lt;span class="o"&gt;*&lt;/span&gt;60&lt;span class="o"&gt;*&lt;/span&gt;1000&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InterruptedException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;猿猿明白这意味着什么
                &lt;span class="p"&gt;}&lt;/span&gt;

                &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;岁月如梭
                &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;case&lt;/span&gt; 3&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;saying&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;妈妈，我爱您&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="k"&gt;case&lt;/span&gt; 10&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;saying&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;妈，听您的&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="k"&gt;case&lt;/span&gt; 16&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;saying&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;我妈真的很烦&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="k"&gt;case&lt;/span&gt; 18&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;saying&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;想要离开这个家&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="k"&gt;case&lt;/span&gt; 25&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;saying&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;妈&lt;span class="p"&gt;,&lt;/span&gt;您当时是对的&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="k"&gt;case&lt;/span&gt; 30&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;saying&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;我想要去我妈家&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="k"&gt;case&lt;/span&gt; 50&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;saying&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;我不想要失去我妈&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;unknownAge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;saying&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;只要我妈还能在这&lt;span class="p"&gt;,&lt;/span&gt;我愿意为了我妈放弃一切&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;saying&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;youDefineIt&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isPeopleStillLive&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;saying&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;每个人都只有一个妈妈，要好好的孝敬我们的妈妈!&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;isPeopleStillLive&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;猿猿很明白，人类最清楚
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;youDefineIt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="o"&gt;//&lt;/span&gt;猿猿自己说&lt;span class="p"&gt;......&lt;/span&gt;
            &lt;span class="n"&gt;StringBuffer&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;StringBuffer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;......&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;......&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;......&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;......&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt; &lt;span class="n"&gt;final&lt;/span&gt; &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;unknownAge&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 70&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;业界把这个常量设成了70，猿猿希望是100
        &lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;saying&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&amp;quot;&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MothersDayFromCodeMonkeyView&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="母亲节"></category><category term="程序员"></category></entry><entry><title>程序员，你应该知道</title><link href="http://hackecho.com/2011/05/what-the-programmer-should-know/" rel="alternate"></link><updated>2011-05-01T19:47:57-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-05-01:2011/05/what-the-programmer-should-know/</id><summary type="html">&lt;p&gt;（说明：本文转自博客园知识库的一篇原创文章，作者：李瑞宽)&lt;/p&gt;
&lt;p&gt;想象你是一个初出茅庐的小菜鸟，上头交代你做任务，你对其中的一项任务有那么一小点疑问，你怯生生地问：“我觉得这项任务说得不是很清楚，那样做行吗？为什么呢？我觉得应该这样做更好。”项目很紧，上头头大着呢，他很不耐烦地对你说：“不要问那么多！我都考虑清楚了，只要照着做就行！”你应该怎么办呢？你是就这样屁颠屁颠地去做了，还是还是觉得你应该知道为什么要按照他说的做，而不是按照你说的做吗？ 你应该知道。而且你要一直坚持“我应该知道”这种想法，因为这种想法，会带领你走进一片新天地。你可能还意识不到，你现在的是否坚持和你后续的发展休戚相关。坚持了，你会向着更深的层次迈进；放弃了，你就一直呆在原地，没有办法进步。&lt;/p&gt;
&lt;p&gt;依我看来，技术人员的发展，不外乎往深度发展或者往广度发展。&lt;/p&gt;
&lt;p&gt;什么是深度呢？就是你对技术的掌握程度，你一套扎进去，对技术有自己越来越深的理解，你从不会到会，从会到精，你会显著感觉到自己能力的提升，等到精通了技术之后，使用这项技术自然是挥洒自如，易如反掌。&lt;/p&gt;
&lt;p&gt;什么是广度呢？就是十八般武艺，刀枪剑戟棍，.NET, JAVA, Silverlight，逮着什么就是什么，都去参上那么一腿，这个就是广度。你学习了N多技术，每次见到一种新技术新语言你就两眼放光四肢冒汗，你都要根据它们的入门指南操作那么一次，好吧你是很踏实的人，所以你多操作了那么两次，之后你就能够很NB地在简历上面吹牛逼：“本人精通C#、C++、JAVA、PHP、HTML、C、汇编、Python 不拉不拉不拉，神马技术神马语言对于我都是浮云！”说出去唬的别人一愣一愣的，当然，他们并不知道，你只写过这一堆语言的Hello world。&lt;/p&gt;
&lt;p&gt;深度很奥妙，广度很有趣，你应该怎么选？&lt;/p&gt;
&lt;p&gt;如果是二选一，毋庸置疑，你应该选择深度！为啥呢？深度是一个技术人员的核心竞争力。在这个IT从业人员多如过江之鲫的今天，IT民工、码农到处都是；本科如狗，硕士满街走，只有博士还能抖一抖；街边随便哪个修钥匙档上面都贴着广告“200元企业建站！立等可取！”技术人员如何安身立命？&lt;/p&gt;
&lt;p&gt;这个时候，你应该靠你的深度，你也只能靠你的深度了。道理很简单，技术人员靠什么吃饭？靠自己的脑子。从你人生到现在的经历中，你早早就依靠脑子跟别人竞争了。从小学到初中到高中到大学，哪一次升学考试你不是靠自己的脑子将别人PK下去？你知识掌握的越牢固，学得越深入，对那一堆公式定理理解的越深刻，你就越能够在竞争中占据有势，最终赢得求学阶段的胜利。不管现在学校扩招多厉害，名牌大学还是高质量的金字招牌，在普罗大众的眼中熠熠生辉，阿弥陀佛。进入了社会，这样的竞争其实还是很类似的，只要你比人功夫深，你就比人香喷喷。&lt;/p&gt;
&lt;p&gt;深度就是你的内功，它带来效率，它能够让你非常稳健地向前进。我们来看看倚天屠龙记里面对乾坤大挪移的描述：“正如要一个七八岁的小孩去挥舞百斤重的大铁锤，锤法越是精微奥妙，越会将他自己打得头破血流，脑浆迸裂，但若舞锤者是个大力士，那便得其所哉了”。你的深度，就是你自己的力量，你要使用的技术，就一把大铁锤，你要掌控好这把铁锤，没有深度，就等着自己被砸伤吧！深刻地掌握一样东西，不单明白了它什么时候非常适合使用，什么时候能够使用，也能明白它什么时候最好不用。在平时的生活中你是否经常听到这样的话：“微软/Java/etc的XXX技术太难用了！我想要XXX它XXX就是搞不定！”很显然，你碰到了大铁锤的受害者。不排除微软的确是有难用的东西，臭名昭著的就有MSN，但依据我粗浅的技术眼光，至少在开发技术这块，微软还是相当有想法的，而且构建的东西只要摸清它的底，用起来还是颇为畅快的。&lt;/p&gt;
&lt;p&gt;说到深度，就要提到境界。从你选择了深度这条路开始，你已经开始踏入了境界之旅。&lt;/p&gt;
&lt;p&gt;境界是分层次的，学拳的说“招熟，懂劲，神明”，孔子说“三十而立，四十不惑，五十知天命，六十耳顺，七十为所欲为不守规矩！哦，是从心所欲不逾矩”。这两家说的都是不同的境界层次。你在开始境界之旅中的某一个时刻，将会处在某一个特定的境界层次中。不同的境界的认识是不同的，同样的话，境界低的人会看不到什么东西，境界高的人就能一眼看到其中的道理。即使大家都能看到其中有东西，看到的东西本身往往是不一样的。你平时有没有试过在一个问题上面困扰很久，旁边一个人过来一句话就将它解决了？这是因为他的境界比你高出一层不止。&lt;/p&gt;
&lt;p&gt;站在地上往下看，能看见直径1m的范围，有蚂蚁、落叶和浮土；站在4层楼顶上往下看，能看见直径100m的范围，有汽车、马路和绿化带；站在50层楼顶上往下看，能看见直径10000m的范围，有成片的楼群，飘过的直升机和绵延的山岭。境界不同，看到的东西就不同。&lt;/p&gt;
&lt;p&gt;境界不同，有时候交流起来是比较困难的，同样的概念，大家的理解是不一样的，虽然可能在不同的境界中他们都正确。好多东西你觉得很新奇很给力，在更上一层的人看来，那不过是常识罢了。有人说人民日报是最真的媒体，从上面获益良多；有些老板什么电视都不看，天天就看新闻联播；而这些在愤青眼中，只不过是党欺骗P民的谎言，令人作呕。你说谁才是对的？老板看完了，能够摸到政策的动向，赚到实实在在的money；而在同样的愤青群体眼中，他们就会觉得这位受到喉舌毒害的愤青是正确的，就应该呕吐，唾弃它们，鄙视这些五毛党！慈禧年间，有个农妇和别人吹水：“老佛爷吃的煎饼，那可真不得了啊！至少一定得有锅盖那么大！”殊不知连低慈禧N个档次的人，可能都已经不知道煎饼是何物了。这就是境界不同的缘故了。我现在回想起中学学习的思想政治课，开始觉得它们不再如当初的枯燥，变得非常有道理。&lt;/p&gt;
&lt;p&gt;技术的境界和学拳的是非常类似的，一开始你只要学会怎么用，用熟练就好，然后你开始好奇它内在是怎么实现的，开始研究它实现的机制，等你学会了这些机制，你就懂得怎么发力了，你能够将这些机制用到其他地方，招招见血啊！再然后你通过不断的思索总结，你窥到了其中的概念和原理，你悟到了它存在的理由，于是你就神明了，你悟到的这些道理，不单可以用到类似的应用场景中，还可以用到更深远的地方，甚至日常生活之中。譬如事务这个玩意，一开始你只知道它是数据库里面的一个东西，你不知道它是啥，但是上头就是要求你用它。后来你知道它怎么用了，再然后你可以搞定死锁，将它用得很帅。终于有一天，你悟到了事务原来并不是只有一种实现，它是一个概念，是一个协议，它能够达到概念和实现的分离，它可以通过二阶段提交，也可以通过补偿等方式实现，更要命的是它不单可以通过计算机搞，还可以通过手工来搞。事务协调器可以不单只是一段代码，还可以是一封Email，一张贴在墙上的纸……那你才真正明白了事务这个玩意可以怎么玩，然后再明白了怎么去根据这种思路去探索其他的东西。想象你去超市买东西，你先给了钱给收银的美女，然后你还没有踏出大门，你就后悔了——TMD怎么又买了这么多用不着的东西？你对收银MM说：“不好意思咱不买了，你退钱给我吧！”收银MM又PP又通情达理，她在POS机里面将你的消费记录XX掉，将钱退回给你，顺便还送给你一盒益达——是你的益达！这中间，就体现了一种事务的思想。你体会了这种思想，就可以一下子老了四五十岁，达到七十岁的境界，为所欲为。计算机相关的这些东西，集人类智慧之大成，研究这个而能有所感悟，真真正正能达到境界上的提高。&lt;/p&gt;
&lt;p&gt;境界到了最高妙之处，就会由实入虚，从术而道，这时你就悟到了如何将事物的本源跟事物的存在区分开来，你能够看清楚什么是本质，什么是表象，什么是要做到的目标，而什么是具体的行为。你从本质的角度看过去，你就具有了一双慧眼，将这纷扰看得清清楚楚明明白白真真切切，这双慧眼就是做洞察力。&lt;/p&gt;
&lt;p&gt;什么是本质呢？本质就是事物赖以存在的根本原因，若然没有这个原因，这个事物就没有存在的意义，就会消亡。所谓存在即合理，这个合理不是说的合乎情理，而是说存在都是具有它深层次的根本原因的，也就是都是有本质的。不知道你有没有注意到，很多技术书籍第一章都是介绍技术出现的历史的，之前我觉得这些罗里啰嗦，都是废话，直接翻过去直奔技术本身而去也，其实它是全书的总纲（天之道，损有余而补不足，是故虚胜实，不足胜有余……），它论述的是这种技术的存在理由，如果没有这种理由，这种技术都没必要存在了，我们还学它干毛啊。&lt;/p&gt;
&lt;p&gt;我们来说一个普通的项目，它的本质是什么？是它复杂纠结的需求吗？是它深奥精妙的设计吗？是它完全符合CMMI5滴水不漏的流程吗？都不是，它存在的意义，就是为了能为客户产生价值，真真正正消除客户的痛处。本质和表象是很容易混杂的，要将东西乱七八糟混杂在一起很容易，要清清楚楚区分它们，将它们有条有理摆放得整整齐齐是很困难的，这里快刀斩乱麻行不通，你得抽丝剥茧，一条条分得清清楚楚，不然你永远达不到透彻的境界。&lt;/p&gt;
&lt;p&gt;本质是虚的，表象是实的。我们很难捉摸得到虚的东西，而实实在在的东西一直围绕在我们周围，所以我们很容易就能够接受它们，然后我们很容易就被这些东西迷惑，看不到背后还存在深刻的东西。我们需要透过现象看到本质，找到它们。本质坚如磐石，相对不变，只要有存在的理由，它就一直都存在，而表象如行云流水，花开花落，一直都在改变。就如用兵，目标是求胜，这是断然不会改变的，而行军就是兵无常势，水无常形，因时制宜，随机应变。倘若我们混淆了本质和表象，追求的是表象的东西，由于表象千变万化，到头来疲于奔命，却又两手空空，最后郁闷得对天大骂：“TMD这技术变得太快了！老子跟不上不玩了！”。你应该知道，凡是觉得乱的，都是因为没有得到本质。当你具有了深邃的洞察力，你得到了本质，你就能够不役于物，你就能看清变以不变，你就不会再去盲目追求具体的行为。&lt;/p&gt;
&lt;p&gt;当你做项目，你强调的不再是符合某个规范来做，你深深知道规范只是一种具体的行为，你关注你的目标，你能够带给客户的价值，你团队的效率。当现在的规范不符合你的项目，你就大胆裁剪它，甚至抛弃它，而不是盲目将项目往规范上靠——只因为它是CMMI的建议，你所作的一切，都是为了你的这个目标而努力。&lt;/p&gt;
&lt;p&gt;具有洞察力，通晓变与不变，你不但能看清现在的情形，你还能看清今后的趋势，然后针对趋势采取措施。我们可以清楚地看到，技术日新月异，但人们的思想变化却不大，一部道德经，几千年下来我们的思想仍然无法突破它论述的范畴，所以我们可以利用将来可能出现的新技术，结合人们不怎么改变的思想需求，做一些东西出来——不要问我是什么东西，我想到也不会告诉你。&lt;/p&gt;
&lt;p&gt;是不是觉得上面的这些东西都很虚很哲学？虚实只是相对的，当你达到这样的境界，你自然就会明白我说的是什么，当然，当你觉得已经知道我在说什么了，我觉得你还是可以继续再想想，后面再来看，感觉又不一样。张三丰教张无忌太极剑的时候，连续两次教招，却无一式相同。张无忌“细细体会其中圆转如意，绵绵无尽之意”，杨逍殷天正“粗略窥到这个层次”，而周颠则是“大为担心，两遍都不一样，咱们教主怎么记得住？”道理不在于讲，而是在于悟，否则讲得再多也没用，不深刻，没效果。一阵风吹过，吹过松散的茅草屋，那就是一场灾难；吹过石壁，最多也只能带走几颗细沙；吹过水面，能荡起了一圈圈的波浪；吹过风车，则产生了源源不断的电力。苹果掉到牛顿头上，就诞生了万有引力，掉到你我头上，只能产生一个包和一颗苹果核。好吧我们就不讨论假如掉的不是苹果而是椰子的事情了。上士闻道，勤而行之；中士闻道，若存若亡；下士闻道，大笑之，不笑，不足以为道。邓小平之所以喜欢看金庸的小说，称呼金庸为大师，他必然是看到了小说里面的这些道理。&lt;/p&gt;
&lt;p&gt;虚到九天之上，还是得落地。让我们看看一些稍微实际点的东西。你水平提高了，开始做设计了，开始写设计文档，你应该写些什么？在你记录下你做出来的东西（你搞出了CDM、PDM）的时候，我觉得你还需要记录下你这样做的原因，因为随着时间推移，你设计的东西很可能不适用，但你的想法还是很有用很有参考意义的，你的想法是你CDM存在的原因。别人看你的设计文档，不单能看到死的结果，还能看到活生生的你的思想，然后延续这种思想，让设计具有生命力，能够延续下去。平时我们做需求，也要很清楚地知道什么才是真正的需求。我们来研究一下手机铃声，它表示了一种什么样的需求呢？你写下需求“我们的手机需要一种铃声”，于是，设计就产生了蜂鸣声铃声、十六和弦铃声、MP3铃声，但这就是我们的需求吗？不是的，其实你想说的是“我们需要一种提醒方式，这样在短信、或者电话到来的时候就能提醒使用者注意了”，这样就能设计出各种铃声，还有震动，还有铃声混合震动，在极端情况下，假如用户处于一个高度紧张的环境之下，很难注意到这种提醒，我们还能设计出让手机弹出一根刺，刺他一下的方式，一下不行？来多几下。记得之前看到一个闹钟的笑话：推销员对一个职员说，我们这种闹钟非常好用！它一开始放轻柔的音乐，如果还不醒，那它改放嘈杂的音乐，如果还不醒，它就往你头上洒水，再不醒，它就开始刺你。如果这样都还不醒，它就会打电话给你老板，告诉他你生病了，请假一天。这个闹钟深刻把握了自己的本质啊。&lt;/p&gt;
&lt;p&gt;具有洞察力，我们就能根据行为和目标的契合程度，评价行为是否合理。作为技术人员，我们身边的争论随处可见，语言之争，框架之争，各种流派，各种山寨，比比皆是。“{”到底放在方法定义的最右边，还是放在方法定义的下一行呢，这可不是一件小事，这是一件很严肃的大事情，关乎信仰！从我了解的历史开始，我还没有见到任何一方说服了另外一方。面对这这样疯狂的一个世界，你怎样选择加入哪一方呢？李开复说：“Follow your heart！”我说，你首先看看你的目标，你就知道选择那一方了。譬如说开发语言，我们用它的目标是什么？假如我们需要能够很自然地去面对复杂的问题，而且开发过程中，我们需要能够飞快地利用语言的特性，构建我们的软件，那么C#就是很好的选择，用了汇编你就死翘翘，至少干十年才能把一个增删改查Web系统搞出来；假如我们需要进行很底层的开发，逻辑不复杂，但要做到精确的控制，性能是第一要义，那么你要选择汇编，甚至用刀子在硬盘上刻程序也在所不惜啊。语言之争之混乱，在于大家将目标和选择两者混为一谈，从而成功地将它们捣成了一桶浆糊。框架也是如此，我们现在的目标是什么？我们要自然，要快速开发，而且我们还需要能够扩展，那么我们评价框架的标准就很清楚了。你框架里头技术含量多么深厚，都到地核了，你用了三层架构，你共使用了23种不同的模式，你使用了微软到目前为止出现的所有技术，这些都没有意义。你做不到让我用起来那种如臂使指的感觉，你甚至阻碍我整体流的思考方式，你就说服不了我，你的框架是适用的。&lt;/p&gt;
&lt;p&gt;到达了虚的境界之后，是不是实就没有用了呢？不是的，年轻人，看问题不能那么片面。虚和实，就相当于战略和战术，你看清楚了目标，只能说明你最高能去到什么地方，这只是一种可能。而实实在在你能够达到什么高度，是由你的战术来决定的。眼界只能决定你看到的高度，而实操才真正决定了你达到的高度。虚实到头来要结合到一起，用虚指导实，用实来实现虚，相得益彰，互为阴阳。&lt;/p&gt;
&lt;p&gt;这个世界规律是虚的，推动世界发展实实在在的力量是实的。我们想想电灯，电脑，抽水马桶，哪一个不是实在的术创造出来的？我们看看下图的这张凳子，它就是传说中的“Aeron chair”，它具有出众的外观，具有领衔的人体工学设计，它能根据就座者不同的体重、姿势和动作进行精准的调节，与你的身体自然贴合，让你感受一整天不会疲倦的轻松自如，更有一小撮份子宣称，由于坐起来太舒服了，他们经常不知不觉加了好多次班还不知道！（广告！广告！赶快Cut掉！）对比一下我们平时坐的电脑椅呢？这就是术的差距，术的力量！当然，也在于他们把握了椅子不单只是用来坐的，而是要用来坐得非常舒服的这个道有关系。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://pic001.cnblogs.com/images/2011/1/2011042411333447.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;说了那么久深度，让我们也来聊聊广度。广度也是人认识中很重要的一部分。你只有掌握了很多东西，你才能够了解到什么时候应该用什么技术。有这么一句话：“假如你是一把锤子，那么所有东西在你眼中都是钉子”。假如你只会铁锤这项技能，你只能打桩用锤，砍树用锤，连吃饭你都用锤盛着吃。好吧，你锤子练到了最高境界，达到了刚极而柔的化境，你用来吃饭一点问题都没有，可是，你真……没觉得吃相有那么一点难看么？打桩用铁锤，砍树用斧头，吃饭用筷子，耶！这样就温文尔雅得多了。&lt;/p&gt;
&lt;p&gt;对广度的关注，也会促成转化为深度的思考，考虑不同东西的相同之处。对广度的探寻，常常会引出创新的主意，将不同的东西混合起来解决问题，是一种创新的做法；综合多种不同的思想，产生一种新的技术，就是创新的领域。近亲繁殖多产生怪胎，相距越远，就越能产生优良的品种。所以我们也要追求广度，不过要留意要达到创新的地步的话，至少在深度上面是要达到一定境界的。&lt;/p&gt;
&lt;p&gt;你看我扯了这么多方外之言，内心在颤抖，这个行业水太深了！我是不是应该转行？你这样想。完全不必要，假如你朝着深度这条路走下去，你最终也能有这样的感悟。而且即使是其他行业，也是要有深度的，我们最终走向的将会是同一条路。&lt;/p&gt;
&lt;p&gt;要往深度走下去，你应该怎么做呢？假如你抓住我，让我尽快提升你的境界，锤炼你的深度，我是做不到的。要做到这件事，只能靠你自己的不断思考，思考一切后面的原因。想象一个胖子需要减肥，有什么万试万灵的方式吗？假如他一天需要减十斤，我认为是搞不定的，我们只能从他身上切下一块肉，称一下——十斤！真正有效的办法是他自己运动起来，注意健康的饮食，然后长期下来，才能达到一个健康的体魄，才能有真正的精气神。&lt;/p&gt;
&lt;p&gt;所以你的思考，就是这么一个过程，只有你自己不断思考不断突破，最终才能达到一个较高的境界。别人说的再多，你没有经过思考消化吸收，最后也没能转化为你的肌肉，提供给你力量，只会变成你的脂肪，增加你的负担，阻碍你的行动，最后还影响你对其他营养的吸收。看书本怎么说，看我怎么说，然后教条主义去运用，是行不通的，你需要将这些东西真真正正变成你自己的东西。知难行易，你可能轻易就开始行动了，却惨不透其中的道理；知易行难，知道了跑步有益身心，你却很难去坚持它。这些都是你的障碍，只能靠你自己去突破。&lt;/p&gt;
&lt;p&gt;我们什么时候会思考？就我自己而言，我通常在看书的时候思考，在和人讨论的时候思考，在遇到困难的时候思考，在独处的时候，有时候也会发呆思考。基本上，都是思想遇到冲击的时候进行思考。所以，你如果要往更深的地方发展，要做的是从现在开始，珍惜看书的机会，珍惜和别人讨论的机会，创造机会和别人讨论（听君一席话，胜读十年书啊，八卦除外），去完成具有挑战性的任务。平时也要注意一些你觉得有思想的文章的微言大义，琢磨一下，都是能够对你思想进行冲击的，比如我之前推荐的《火星人的耳机》、《一百年后人类怎么编程》等貌似不着边际的文章。普通的解决问题的文章，讲究的是头痛医头脚痛医脚，违反中医之道，通常是很难促进你体质的提高的。书要挑经典的书，否则它说不定将你带进歧途深处，积重难返。眼中看着《金瓶梅》，脑中想着世界运转的道理，人间色相，尽是脂粉骷髅，这种境界，小弟目前修炼尚浅，是万万达不到的。&lt;/p&gt;
&lt;p&gt;最重要的是你认识到这一点，从今天开始觉得，你应该知道。上头再跟你说“你TMD不需要知道，你只需要做就行了”，你应该认识到他说这句话，他的意思其可能是：他很忙，没空跟你说；他自己也不知道。而绝对不是你不需要知道的意思。你需要知道，从现在开始思考，开始寻找为什么吧。&lt;/p&gt;</summary><category term="境界"></category><category term="程序员"></category></entry><entry><title>由百度Web App应用开发者大会想到的</title><link href="http://hackecho.com/2011/04/thinking-in-baidu-web-app-dev-conference/" rel="alternate"></link><updated>2011-04-27T23:48:18-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-04-27:2011/04/thinking-in-baidu-web-app-dev-conference/</id><summary type="html">&lt;p&gt;&lt;img alt="百度Web App应用开发者大会图片" src="/static/images/2011/04/1303884171_98102200.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;今天一天时间参加了百度Web App应用开发者大会，学习了一些新的理念，分享给大家。&lt;/p&gt;
&lt;p&gt;用官方的话说，这次大会是“面向App应用开发者和互联网技术人群，围绕“开放、共赢、创富”主题，广邀行业专家和资深开发者，与大家一同分享百度应用开放平台“全开放”策略以及Web App应用的设计思想、开发方法和市场前景”的活动。期间百度技术副总裁王梦秋女士做了关于"百度框计算架构与Web应用开放平台"的演讲，DCCI互联网数据创始人&amp;amp;总裁胡延平做了关于"生态之变与网络迁徙"的演讲，百度产品架构师田晓萌做了关于"框搜索世界，应用成就未来"的演讲，Zynga亚洲区首席技术官郑皓做了关于“数据推动Web App的飞速发展”的主题演讲，以及下午的第一分论坛中一系列非常好的主题演讲。&lt;/p&gt;
&lt;p&gt;下面基于全程中我听到的一些理念发表一下自己的看法和见解，不足之处欢迎指正。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.什么是好技术、好产品？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;满足用户需求的技术和产品就是好技术、好产品。&lt;/p&gt;
&lt;p&gt;评价一个技术、一款产品的好坏，根本程度上要看是否符合了用户需求。需求至上，我们开发新技术、设计新产品，本来就是给用户使用，方便用户的，如果仅仅以界面是否华丽、功能是否尽可能多的聚合、技术是否牛等单一因素来评价，就失去了做某个产品的意义。所以说，满足用户需求的技术和产品就是好技术、好产品。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.国内现在的开放平台开发者现状&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我想，可以用这么几个字来大概描述一下：免费的打工者。&lt;/p&gt;
&lt;p&gt;大致有以下几个原因：&lt;/p&gt;
&lt;p&gt;①缺少全开放&lt;/p&gt;
&lt;p&gt;中国缺少主流的全开放、大包容型超级应用开放平台，缺少主流的应用输出渠道，大量的优质应用无法获得用户；&lt;/p&gt;
&lt;p&gt;②门槛高&lt;/p&gt;
&lt;p&gt;很多平台开发者门槛偏高，或者行业偏窄；&lt;/p&gt;
&lt;p&gt;③收益少或无收益&lt;/p&gt;
&lt;p&gt;大多开放平台合作应用纯免费，缺少普遍、稳定的合作收益模式，后续创新缺少动力；&lt;/p&gt;
&lt;p&gt;④版权保护&lt;/p&gt;
&lt;p&gt;开发者只是产权保护体系不完善，容易被模仿，从而丧失核心竞争力。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.赏心悦目、与众不同&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;贝瓦网CTO莫奇在分享开发者经验时，讲到了他们产品的一个理念就是“赏心悦目、与众不同”。他们的产品主要是面向儿童的，所以才这样去限定自己的产品，不过仔细想一想，不但他们的产品需要这样的理念，普通的任何一款产品或应用都应遵循这样的理念，这就涉及到用户体验的问题。&lt;/p&gt;
&lt;p&gt;赏心悦目主要针对UI，与众不同则可以针对产品功能来讲，相信经过精雕细琢后的产品一定可以胜出。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.SEO会淡化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是一个对我触动比较大的问题，之前我从来没有想过。&lt;/p&gt;
&lt;p&gt;相对于现在的互联网现状，一个内容为王的互联网，SEO确实非常重要，搜索引擎带来的流量多少有时直接决定一些网站的生与死。但互联网的开放趋势是不会停止的，应用为王、关系为王的时代也许就在不久的将来。先前已有人预测“Web已死”，虽说文章观点超前，但不得不承认，我们已经感觉到了这个趋势的来临。&lt;/p&gt;
&lt;p&gt;对于百度框计算而言，它的精准性特点是非常有价值的，作为传统的互联网入口，SEO、排名、关键词为中心的检索并没有将发挥精准性的最大作用。我觉得框计算的理念非常好，暂不说其它，就单单在利用精准性为用户提供精准服务这一点上已经完胜。&lt;/p&gt;
&lt;p&gt;想到了最近很火的无觅网，我就不详细介绍了，大家有时间体验一下就会发现，在无觅网络里已将内容推荐智能化，SEO的概念已经淡出。&lt;/p&gt;
&lt;p&gt;将来无法预测互联网会几分天下，但服务应用化是必然的，SEO会有淡化的趋势。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.大处着眼&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;厚积薄发，君子善假于物。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.快速反应&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;①可移植性&lt;/p&gt;
&lt;p&gt;为了解决产品的多平台问题，一定要做到：采用更通用的技术框架、内容规格标准化。&lt;/p&gt;
&lt;p&gt;②可扩展性&lt;/p&gt;
&lt;p&gt;可扩展性是一款产品生存下去的重要条件之一，为了满足开发产品的可扩展性，要做到：重视需求分析与用户反馈，小步快跑、快速迭代。&lt;/p&gt;
&lt;p&gt;以上是我从笔记中摘录总结出来的，很多地方是我自己的观点，难免有不足之处，请多多指正。&lt;/p&gt;
&lt;p&gt;关于百度框计算，关于开放平台，关于互联网、移动互联网的发展趋势等，还有很多很多想法，特别是通过今天的大会，又了解到了一些业界最新的动态，领略到了其他一些开发者的风采，总之，一天时间有点累，但还是有收获的。&lt;/p&gt;
&lt;p&gt;ps.百度为我们准备的的午餐不错，赞一个~:)&lt;/p&gt;</summary><category term="应用开发"></category><category term="百度"></category></entry><entry><title>国图读书笔记 - 思想、宇宙精神与潜意识</title><link href="http://hackecho.com/2011/04/0423-reading-notes/" rel="alternate"></link><updated>2011-04-23T16:41:00-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-04-23:2011/04/0423-reading-notes/</id><summary type="html">&lt;p&gt;1.人的力量源自思想，人之所以弱小就是因为太以来外来的帮助，只有迅速调整自己，昂首挺胸、以积极的态度面对生活，毫不犹豫地将自己的想法付诸实践，才能创造奇迹。&lt;/p&gt;
&lt;p&gt;2.任何原则唯一存在的价值就是应用于实践。很多人读了不少书，还把课堂笔记带回家温习，并积极参加形形色色的各种讲座，可终其一生都无法取得进步，无法体现相关原则的价值。&lt;/p&gt;
&lt;p&gt;3.自然界中最强大的力量乃是不可见的力量，我们发现人类最强大的力量也是不可见的，即精神的力量。而精神力得以体现的唯一途径则见诸于思考的过程。思考正是精神拥有的唯一活动，而思想乃是思想的唯一产物。&lt;/p&gt;
&lt;p&gt;4.这正是由失败转化为成功的过程。代表着勇气、力量、灵感、和谐的思想取代了代表失败、缺失、沮丧、局限以及不和思想，这些新的思想扎下根来，身体组织也随之发生改变，人生的前景变得一片光明，旧有的一切都已烟消云散，所有的事物都呈现出崭新的面貌，你因此获得了新生。这是一次精神的重生，生命因而被赋予了新的意义，而你本人则脱胎换骨，洋溢着欢欣、自信、希望与活力。在以前从未发现机遇的地方你发现了通向成功的机遇。你发现了新的可能性，放在以前，它对你毫无意义。你沉浸在成功的信念之中，而这些信念影响着你身边的人，他们反过来又推动你不断向前进。你吸引并聚拢了一批成功的同事在你身边，而他们反过来又改变了你的工作和生活环境。因此，通过这些简单的思维训练，一个人不但能改变自身，还能改变周围环境，甚至改变各种条件。&lt;/p&gt;
&lt;p&gt;5.这个世界不是由没有生命的石块和木头堆砌而成，而是充满了活力，由充溢着人性的跳动的心组成，这个世界充满了生命和美。&lt;/p&gt;
&lt;p&gt;6.内在的世界是因，外在的世界是果。&lt;/p&gt;
&lt;p&gt;7.衰老者的错误之处在于他们试图从外在世界中寻找力量和权势。&lt;/p&gt;
&lt;p&gt;8.关于“腹腔神经丛”：&lt;/p&gt;
&lt;p&gt;意识与潜意识之间的关系和神经系统之间的关系有关。交感神经系统主管潜意识，脑脊髓系统主管意识。交感神经系统的中枢位于胃后部的神经团节，被称为“腹腔神经丛”。它是一个渠道，通过这个渠道我们的潜意识可以控制身体的各项机能。&lt;/p&gt;
&lt;p&gt;我们都知道大脑是主管人意识的器官，负责接收人所有的想法。但是很多人不知道我们的腹腔神经丛是接收大脑的意识，把意识变成为潜意识、或者习惯，再作为习惯传递给外界的。因此腹腔神经丛被比作“身体的控制中心”，因为他是分配身体能量的中心点，能量经由神经，被分配到身体的所有部分，然后又被散发到实体周围的大气中；&lt;/p&gt;
&lt;p&gt;当腹腔神经丛积极工作的时候，会向身体的每一个部分、身边的每一个人传递生命、能量、活力，人的感觉会愉快，精力会充沛，而所有接触到他的人都会很快体会到这一种愉快舒服的感觉，所以，一个人散发的能量如果非常强烈，那么这个人往往会被认为是“有魅力的人”，“有影响力的人”；&lt;/p&gt;
&lt;p&gt;如果潜意识出现了问题，人的精神就会生病了，人的处境也会随之出现问题，因为潜意识与外部世界的联络被中断了。&lt;/p&gt;
&lt;p&gt;9.大卫森教授说：试图通过自己的意识在思考中阐明整个精神活动无异于打算用灯芯草做的蜡烛照亮整个宇宙。（心灵的运动由两套并行的运动组成，即意识运动和潜意识运动。）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;未完待续....&lt;/strong&gt;&lt;/p&gt;</summary><category term="思想"></category><category term="读书"></category><category term="潜意识"></category></entry><entry><title>做一个有理想的程序猿</title><link href="http://hackecho.com/2011/04/be-programmer-best/" rel="alternate"></link><updated>2011-04-22T23:51:19-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-04-22:2011/04/be-programmer-best/</id><summary type="html">&lt;p&gt;我想，程序员只是一个代名词，我们是一群爱IT的人，希望通过自己的技术改变世界的人，我们是一群热爱生活、热爱世界的人。（蓝色文字皆为Troy注解）&lt;/p&gt;
&lt;p&gt;作为程序员，要取得非凡成就需要记住的15件事。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.走一条不一样的路&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在有利于自己的市场中竞争，如果你满足于“泯然众人矣”，那恐怕就得跟那些低工资国家的程序员们同场竞技了。&lt;/p&gt;
&lt;p&gt;“走一条不同的路”，“走自己喜欢的路”从来都是一个人成功的重要条件，但是更为重要的是，选定的一条路，一定要好好地、坚持地走下去。与其他半途而废的人来比，我们就是笑到最后的人。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.了解自己的公司&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以我在医院、咨询公司、物流企业以及大技术公司工作的经验来看，这一点所言不虚。&lt;/p&gt;
&lt;p&gt;不同公司的运营模式差异极大。如果你理解企业的运营模式，那你就不一样了！在这家公司中（或者对客户而言），你是参与业务运营的资产，你的工作能直接产生效益！&lt;/p&gt;
&lt;p&gt;如果一个人能够在他/她喜欢的公司工作，还用得着努力地去重新了解它吗？某种程度上我们喜欢某家公司的原因恰恰是我们喜欢它的运营理念。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.与最优秀的人为伍&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;很早以前，我喜欢打篮球，被分配到一个水平比较高的队里。一开始适应的确很困难，但环境的压力越大（重大比赛），我的长进也就越明显。&lt;/p&gt;
&lt;p&gt;每个领域其实都一样：你周围人的水平（以及对你的期望）越高，你就会变得越优秀。&lt;/p&gt;
&lt;p&gt;谢谢你们，我的一起学习、一起参赛、一起讨论、一起走过同伴们，是你们让我变得优秀。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.制造差异&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每年学习一门新编程语言。为什么不呢？不断尝试新事物，你关注的技术种类越多，脚下的路就越宽广，你的职业生涯就会日新月异。不知道几年后Java的趋势如何？那就学习Clojure。学Ruby还是Python？这两种语言都可以试试啊。然后你才能知道哪种语言更适合某个特定的项目。看，掌握的语言多了，才能在需要的时候信手拈来吧。&lt;/p&gt;
&lt;p&gt;趁着我们还年轻，抓紧时间吧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.畏惧，是最大的敌人&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;还是直接从书中摘一句吧：“在畏惧中做出的职业规划，很可能会让自己后半辈子就一直被‘圈禁’在小隔断里，永远不会有创造明天辉煌的时刻。没错，那样是安全，但有意思吗？”&lt;/p&gt;
&lt;p&gt;什么是幸福？当你找到自己真正想要的生活是，那就是幸福。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.要成为多面手&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果你掌握了所在领域的知识，那你只能是一名专业人士。用PHP编程？花点时间设置一台Apache服务器，让PHP和MySQL都跑起来。一直在用jQuery？试试Prototype。你懂了吧。&lt;/p&gt;
&lt;p&gt;不要被误导，前提是必须精通一门。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.一个字：做&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;别指望别人过来教你该怎么做，出去，自己学着去做！&lt;/p&gt;
&lt;p&gt;成功是&lt;strong&gt;做&lt;/strong&gt;出来的，不是说出来的，也不是听出来的，更不是想出来的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8.找一位好老师&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;找一位好老师可以让你在学习技术的时候有的放矢。作者给我们讲述了别人是怎么指导他学习的（顺便说一句，作者在这本书里讲了很多个人经历的小故事，他居然从一位演奏家转行来做软件开发！）：“好好研究一下目录服务，熟悉一种UNIX变体，然后再掌握一门脚本语言。”&lt;/p&gt;
&lt;p&gt;请记住这句禅宗谚语：“循路觅宗师，形影不相离，师知吾亦知，吾乃成宗师。”&lt;/p&gt;
&lt;p&gt;谢谢你们，我敬爱的老师们。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9.主动教会别人&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;教会别人是一种最好的学习方式。写一篇博客能帮你搞清楚一个问题。为此，你必须先掌握很多材料，同时还要有条有理地讲给别人听（写作技能）。如书中所言：“要想知道自己是不是真的明白，你就讲给别人听听。”&lt;/p&gt;
&lt;p&gt;谁想学PHP的，我来讲给你，这对于我来讲也是一个学习过程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10.实践，实践，再实践（训练）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;只有进行大量实践（花大量的时间）才能掌握某种技术。看的很多，写的很少，遇到问题，改一改，又去读代码……（这样下去是不行的）。&lt;/p&gt;
&lt;p&gt;要特别警惕拖延症。其实，往往只要有了开头就好办了。&lt;/p&gt;
&lt;p&gt;自我加压，效果会更好。我曾在一篇博客中提到帕金森定律：紧张的时限可以让你提高工作效率。为什么不把这个定律用到学习上呢，比如说在y时间内学会x？&lt;/p&gt;
&lt;p&gt;拖延症是可怕的，必须改变自己。我今年对自己有个要求，就是要做成99件事，这些事都是我寒假写好的，其中有20件留空给新想法机会。年底的时候，做一次评估，来决定是否发布李昭谕Beta 1.0版。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;11.从小处入手&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每天都取得一项小成果，每天都要坚持做（写在博客上？）。这样一来，你只能让自己比昨天更进步，而不能说自己比上星期进步了一点。&lt;/p&gt;
&lt;p&gt;集腋成裘，每天进步一点点，每天都在成功。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;12.享受过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;关注当下，而不是目标，享受那些在追逐未来目标的途中可能无暇顾及的小胜利。人总要生活在当下。我享受编程的过程，就像享受编程的结果一样。&lt;/p&gt;
&lt;p&gt;过程是比结果更重要的财富，但有时候，结果却是决定我们成败的关键。童鞋们，我们要看清这一点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;13.不要丧失危机感&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;越是成功，就越容易犯重大错误。永远不要忘了危机感，特别是要认识到你今天所知道的，到了明天可能就会一文不值。过去的荣耀不能保你永远无虞。&lt;/p&gt;
&lt;p&gt;据书中所说，你最好是要让自己能够“通用”，而不要对哪种技术或哪个公司产生依赖。你所掌握的某些技能，甚至你的工作，到了明天都可能会变得毫无价值。因此要不断提高/丰富/扩展自己的技能。&lt;/p&gt;
&lt;p&gt;居安思危。但不要杞人忧天。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;14.推销自己&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为某个项目贡献自己的一份力量，写一篇博客，共享自己的源代码，成为对某个社区有用的人。&lt;/p&gt;
&lt;p&gt;当然，做这些事可能需要激情，要看你的爱好，但这些事也会间接地推广你的工作成果，证明你的实力，提高你的知名度。&lt;/p&gt;
&lt;p&gt;创造价值，当我们做一件事时可以想一下，如果我不做，怎么能证明我来过。我做了，本来应该那样的变成这样了，就是说，我改变了它，这个改变将影响后代几万甚至几亿年，或更长。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;15.关注市场&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;书中还提到了“预警极客”，也就是那些始终引领技术发展的人。这些人说过的话往往带有预见性，他们提到事物也许过几天就会成为头条新闻。关注这些人，常看他们的Twitter和博客。&lt;/p&gt;
&lt;p&gt;对，要做一个有眼界的人。&lt;/p&gt;</summary><category term="改变自己"></category><category term="程序员"></category></entry><entry><title>李昭谕Alpha版发布</title><link href="http://hackecho.com/2011/04/alpha-of-lzy/" rel="alternate"></link><updated>2011-04-13T00:30:38-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-04-13:2011/04/alpha-of-lzy/</id><summary type="html">&lt;p&gt;经过从出生到目前为期7454天的开发，李昭谕Alpha版发布。&lt;/p&gt;
&lt;p&gt;在正规软件开发流程中，Alpha为内测版，位于Beta版之前，一般是程序员完成第一遍的代码，这时候的程序bug非常多，程序还非常不完美。&lt;/p&gt;
&lt;p&gt;如今，7454天，20多年了，李昭谕的Alpha版必须发布了。发布后才能有进步，发布后就要不断debug，修复漏洞，发布更新的版本，每次发布的李昭谕都不一样。&lt;/p&gt;
&lt;p&gt;李昭谕Alpha版现在还非常不完美，有很多缺点：&lt;/p&gt;
&lt;p&gt;李昭谕程序内部有两套运行机制，一套叫Lazy，一套叫Diligent，它们的协调机制还不完善，lazy总是抢占进程，不服从调度...&lt;/p&gt;
&lt;p&gt;李昭谕程序的数据库还不够大，有些时候做数据分析会非常不准确...&lt;/p&gt;
&lt;p&gt;李昭谕程序的执行效率还不够高，必须升级主频...&lt;/p&gt;
&lt;p&gt;李昭谕程序的硬件载体还不够强劲，需要升级...&lt;/p&gt;
&lt;p&gt;李昭谕程序还有很长一段路要走，相比于其它一些程序，别人是Win7，他是DOS...&lt;/p&gt;
&lt;p&gt;李昭谕程序...........还有很多很多很多很多bug.....&lt;/p&gt;
&lt;p&gt;李昭谕Alpha，以后还有漫长的Beta版要走，也许永远也不会有正式版...但希望每次更新都有变化，每次都可以debug。&lt;/p&gt;
&lt;p&gt;努力开发，迈向Beta 1.0。&lt;/p&gt;</summary><category term="思考"></category></entry><entry><title>传说中程序员的层次</title><link href="http://hackecho.com/2011/04/level-of-programmer/" rel="alternate"></link><updated>2011-04-11T21:52:32-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-04-11:2011/04/level-of-programmer/</id><summary type="html">&lt;p&gt;记得很久以前看过这篇文章，本以为当时的我怎么说也应该达到第三级了吧，可读完第一级就发现我已经落后了...&lt;/p&gt;
&lt;p&gt;自西方文艺复兴以来，中国在自然科学方面落后西方很多，软件领域也不例外。当然现在中国的许多程序员们对此可能有许多不同的意见，有些人认为中国的程序员水平远落后于西方，有些则认为中国的程序员个人能力并不比西方的程序员差，只是整个软件产业落后而已。&lt;/p&gt;
&lt;p&gt;那么，到底中国的程序员水平比西方程序员水平差，还是中国有许多优秀的程序员达到或超过了西方程序员同等水平呢？要解决这个问题，必须先知道程序员有多少种技术层级，每个层级需要什么样的技术水平，然后再比较中国和西方在各个技术层级的人数，就可以知道到底有没有差距，差距有多大。&lt;/p&gt;
&lt;p&gt;当然，对于如何划分程序员的技术层级，不同公司或不同人会有不同的划分标准，下面的划分仅代表个人的观点，如有不当之处，还请砸板砖予以纠正。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第1层  菜鸟&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第1层楼属于地板层，迈进这层楼的门槛是很低的。基本上懂计算机的基本操作，了解计算机专业的一些基础知识，掌握一门基本的编程语言如C/C++，或者Java，或者JavaScript，...，均可入门迈进这层。&lt;/p&gt;
&lt;p&gt;在这层上，中国有着绝对的优势，除了从计算机专业毕业的众多人数外，还有大量的通信、自动化、数学等相关专业的人士进入这一行，此外还有众多的其他专业转行的人士，人数绝对比西方多出甚多。并且还有一个优势就是我们这层人员的平均智商比西方肯定高。&lt;/p&gt;
&lt;p&gt;没有多少人愿意一辈子做菜鸟，因为做"菜鸟"的滋味实在是不咋的，整天被老大们吆喝着去装装机器，搭建一下测试环境，或者对照着别人写好的测试用例做一些黑盒测试，好一点的可以被安排去写一点测试代码。当然如果运气"好"的话，碰到了国内的一些作坊式的公司，也有机会去写一些正式的代码。&lt;/p&gt;
&lt;p&gt;所以，菜鸟们总是在努力学习，希望爬更高的一层楼去。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第2层 大虾&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从第1层爬到第2层相对容易一些，以C/C++程序员为例，只要熟练掌握C/C++编程语言，掌握C标准库和常用的各种数据结构算法，掌握STL的基本实现和使用方法，掌握多线程编程基础知识，掌握一种开发环境，再对各种操作系统的API都去使用一下，搞网络编程的当然对socket编程要好好掌握一下，然后再学习一些面向对象的设计知识和设计模式等，学习一些测试、软件工程和质量控制的基本知识，大部分人经过2～3年的努力，都可以爬到第2层，晋升为"大虾"。&lt;/p&gt;
&lt;p&gt;中国的"大虾"数量和"菜鸟"数量估计不会少多少，所以这层上仍然远领先于西方。&lt;/p&gt;
&lt;p&gt;大虾们通常还是有些自知之明，知道自己只能实现一些简单的功能，做不了大的东西，有时候还会遇到一些疑难问题给卡住，所以他们对那些大牛级的人物通常是非常崇拜的，国外的如Robert C. Martin、Linus Torvalds，国内的如求伯君、王志东等通常是他们崇拜的对象。其中的有些人希望有一天也能达到这些大牛级人物的水平，所以他们继续往楼上爬去。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第3层 牛人&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于"大虾"们经常被一些疑难问题给卡住，所以有了"大虾"们只好继续学习，他们需要将原来所学的知识进一步熟练掌握，比如以熟练掌握C++编程语言为例，除了学一些基础性的C++书籍如《C++ Primer》，《Effective C++》，《Think in C++》，《Exception C++》等之外，更重要的是需要了解C++编译器的原理和实现机制，了解操作系统中的内部机制如内存管理、进程和线程的管理机制，了解处理器的基础知识和代码优化的方法，此外还需要更深入地学习更多的数据结构与算法，掌握更深入的测试和调试知识以及质量管理和控制方法，对各种设计方法有更好的理解等。&lt;/p&gt;
&lt;p&gt;学习上面说的这些知识不是一挥而就的，不看个三五十本书并掌握它是做不到的。以数据结构算法来说，至少要看个5～10本这方面的著作；以软件设计来说，光懂结构化设计、面向对象设计和一些设计模式是不够的，还要了解软件架构设计、交互设计、面向方面的设计、面向使用的设计、面向数据结构算法的设计、情感化设计等，否则是很难进到这个楼层的。&lt;/p&gt;
&lt;p&gt;当然除了上面说的知识外，大虾们还需要去学习各种经验和技巧。当然这点难不倒他们，现在出版的书籍众多，网络上的技术文章更是不胜数，然后再去各种专业论坛里泡一泡，把这些书籍和文章中的各种经验、技能、技巧掌握下来，再去学习一些知名的开源项目如Apache或Linux操作系统的源代码实现等。此时对付一般的疑难问题通常都不在话下，菜鸟和大虾们会觉得你很"牛"，你也就爬到了第3层，晋升为"牛人"了。&lt;/p&gt;
&lt;p&gt;看了上面所讲的要求，可能有些大虾要晕过去了，成为牛人要学这么多东西啊！要求是不是太高了？其实要求一点也不高，这么点东西都掌握不了的话，怎么能让别人觉得你"牛"呢？&lt;/p&gt;
&lt;p&gt;需要提一下的是，进入多核时代后，从第2层爬到第3层增加了一道多核编程的门槛。当然要迈过这道门槛并不难，已经有很多前辈高人迈进了这道门槛，只要循着他们的足迹前进就可以了。想迈进这道门槛者不妨去学习一下TBB开源项目的源代码(链接：http://www.threadingbuildingblocks.org/)，然后上Intel的博客（http://softwareblogs-zho.intel.com/）和多核论坛（http://forum.csdn.net/Intel/IntelMulti-core/）去看看相关文章，再买上几本相关的书籍学习一下。&lt;/p&gt;
&lt;p&gt;在国内， 一旦成为"牛人"，通常可以到许多知名的公司里去，运气好者可以挂上一个架构师的头衔，甚至挂上一个"首席架构师"或者"首席xx学家"的头衔也不足为奇。有不少爬到这层的人就以为到了楼顶了，可以眼睛往天上看了，开始目空一切起来，以为自己什么都可以做了，什么都懂了，经常在网络上乱砸板砖是这个群体的最好写照。由此也看出，国内的牛人数量仍然众多，远多于西方的牛人数量，在这层上仍然是领先的。&lt;/p&gt;
&lt;p&gt;也有不少谦虚的"牛人"，知道自己现在还不到半桶水阶段。他们深知爬楼的游戏就像猴子上树一样，往下看是笑脸，往上看是屁股。为了多看笑脸，少看屁股，他们并没有在此停步不前，而是继续寻找到更上一层的楼梯，以便继续往上爬。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第4层 大牛&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从第3层爬到第4层可不像上面说过的那几层一样容易，要成为大牛的话，你必须要能做牛人们做不了的事情，解决牛人们解决不了问题。比如牛人们通常都不懂写操作系统，不会写编译器，不懂得TCP/IP协议的底层实现，如果你有能力将其中的任何一个实现得象模象样的话，那么你就从牛人升级为"大牛"了。&lt;/p&gt;
&lt;p&gt;当然，由于各个专业领域的差别，这里举操作系统、编译器、TCP/IP协议只是作为例子，并不代表成为"大牛"一定需要掌握这些知识，以时下热门的多核编程来说，如果你能比牛人们更深入地掌握其中的各种思想原理，能更加自如的运用，并有能力去实现一个象开源项目TBB库一样的东西，也可以成为"大牛"，又或者你能写出一个类似Apache一样的服务器，或者写出一个数据库，都可以成为"大牛"。&lt;/p&gt;
&lt;p&gt;要成为"大牛"并不是一件简单的事情，需要付出比牛人们多得多的努力，一般来说，至少要看过200~400本左右的专业书籍并好好掌握它，除此之外，还得经常关注网络和期刊杂志上的各种最新信息。&lt;/p&gt;
&lt;p&gt;当"牛人"晋升为"大牛"，让"牛人们"发现有比他们更牛的人时，对"牛人"们的心灵的震撼是可想而知的。由于牛人们的数量庞大，并且牛人对大虾和菜鸟阶层有言传身教的影响，所以大牛们通常能获得非常高的社会知名度，几乎可以用"引无数菜鸟、大虾、牛人竞折腰"来形容，看看前面提过的Linus Torvalds等大牛，应该知道此言不虚。&lt;/p&gt;
&lt;p&gt;虽然成为"大牛"的条件看起来似乎很高似的，但是这层楼并不是很难爬的一层，只要通过一定的努力，素质不是很差，还是有许多"牛人"可以爬到这一层的。由此可知，"大牛"这个楼层的人数其实并不像想像的那么少，例如比尔·盖茨之类的人好像也是属于这一层的。&lt;/p&gt;
&lt;p&gt;由于"大牛"这层的人数不少，所以也很难统计除到底是中国的"大牛"数量多还是西方的大牛数量多？我估计应该是个旗鼓相当的数量，或者中国的"大牛"们会更多一些。&lt;/p&gt;
&lt;p&gt;看到这里，可能会有很多人会以为我在这里说瞎话，Linus Torvalds写出了著名的Linux操作系统，我国并没有人写出过类似的东西啊，我国的"大牛"怎么能和西方的比呢? 不知大家注意到没有，Linus Torvalds只是写出了一个"象模象样"的操作系统雏形，Linux后来真正发展成闻名全球的开源操作系统期间，完全是因为许多支持开源的商业公司如IBM等，派出了许多比Linus Torvalds更高楼层的幕后英雄在里面把它开发出来的。&lt;/p&gt;
&lt;p&gt;可能有些菜鸟认为Linus Torvalds是程序员中的上帝，不妨说个小故事：&lt;/p&gt;
&lt;p&gt;Linus，Richard Stallman和Don Knuth（高德纳）一同参加一个会议。&lt;/p&gt;
&lt;p&gt;Linus 说："上帝说我创造了世界上最优秀的操作系统。"&lt;/p&gt;
&lt;p&gt;Richard Stallman自然不甘示弱地说："上帝说我创造了世界上最好用的编译器。"&lt;/p&gt;
&lt;p&gt;Don Knuth一脸疑惑的说："等等，等等，我什么时候说过这些话？"&lt;/p&gt;
&lt;p&gt;由此可以看出，Linus Torvalds的技术水平并不像想像中那么高，只是"牛人"和"大虾"觉得"大牛"比他们更牛吧了。在我国，有一些当时还处于"大虾"层的人物，也能写出介绍如何写操作系统的书，并且书写得非常出色，而且写出了一个有那么一点点象模象样的操作系统来。我想中国的"大牛"们是不会比西方差的，之所以没有人写出类似的商业产品来，完全是社会环境的原因，并不是技术能力达不到的原因。&lt;/p&gt;
&lt;p&gt;"大牛"们之所以成为大牛，主要的原因是因为把"牛人"给盖了下去，并不是他们自己觉得如何牛。也许有很多菜鸟、大虾甚至牛人觉得"大牛"这层已经到顶了，但大多数"大牛"估计应该是有自知之明的，他们知道自己现在还没有爬到半山腰，也就勉强能算个半桶水的水平，其中有些爬到这层没有累趴下，仍然能量充沛，并且又有志者，还是会继续往更上一层楼爬的。&lt;/p&gt;
&lt;p&gt;看到这里，也许有些菜鸟、大虾、牛人想不明白了，还有比"大牛"们更高的楼层，那会是什么样的楼层？下面就来看看第5层楼的奥妙。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第5层 专家&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当大牛们真正动手做一个操作系统或者类似的其他软件时，他们就会发现自己的基本功仍然有很多的不足。以内存管理为例，如果直接抄袭Linux或者其他开源操作系统的内存管理算法，会被人看不起的，如果自动动手实现一个内存管理算法，他会发现现在有关内存管理方法的算法数量众多，自己并没有全部学过和实践过，不知道到底该用那种内存管理算法。&lt;/p&gt;
&lt;p&gt;看到这里，可能有些人已经明白第5层楼的奥妙了，那就是需要做基础研究，当然在计算机里，最重要的就是"计算"二字，程序员要做基础研究，主要的内容就是研究非数值"计算"。&lt;/p&gt;
&lt;p&gt;非数值计算可是一个非常庞大的领域，不仅时下热门的"多核计算"与"云计算"属于非数值计算范畴，就是软件需求、设计、测试、调试、评估、质量控制、软件工程等本质上也属于非数值计算的范畴，甚至芯片硬件设计也同样牵涉到非数值计算。如果你还没有真正领悟"计算"二字的含义，那么你就没有机会进到这层楼来。&lt;/p&gt;
&lt;p&gt;可能有人仍然没有明白为什么比尔·盖茨被划在了大牛层，没有进到这层来。虽然比尔·盖茨大学未毕业，学历不够，但是家有藏书2万余册，进入软件这个行业比绝大部分人都早，撇开他的商业才能不谈，即使只看他的技术水平，也可以算得上是学富五车，顶上几个普通的计算机软件博士之和是没有问题的，比起Linus Torvalds之类的"大牛"们应该技高一筹才对，怎么还进不了这层楼呢？&lt;/p&gt;
&lt;p&gt;非常遗憾的是，从Windows操作系统的实现来看，其对计算的理解是很肤浅的，如果把Google对计算方面的理解比做大学生，比尔·盖茨只能算做一个初中生，所以比尔·盖茨永远只能做个大牛人，成不了"专家"。&lt;/p&gt;
&lt;p&gt;看到这里，也许国内的大牛们要高兴起来了，原来比尔·盖茨也只和我等在同一个层次，只要再升一层就可以超越比尔·盖茨了。不过爬到这层可没有从"牛人"升为"大牛"那么简单，人家比尔·盖茨都家有2万多册书，让你看个500~1000本以上的专业书籍并掌握好它应该要求不高吧。当然，这并不是主要的条件，更重要的是，需要到专业的学术站点去学习了，到ACM，IEEE，Elsevier，SpringerLink，SIAM等地方去下载论文应该成为你的定期功课，使用Google搜索引擎中的学术搜索更是应该成为你的日常必修课。此外，你还得经常关注是否有与你研究相关的开源项目冒出来，例如当听到有TBB这样针对多核的开源项目时，你应该第一时间到Google里输入"TBB"搜索一下，将其源代码下载下来好好研究一番，这样也许你的一只脚已经快迈进了这层楼的门槛。&lt;/p&gt;
&lt;p&gt;当你象我上面说的那样去做了以后，随着时间的推移，总会有某天，你发现，在很多小的领域里，你已经学不到什么新东西了，所有最新出来的研究成果你几乎都知道。此时你会发现你比在做"牛人"和"大牛"时的水平不知高出了多少，但是你一点也"牛"不起来，因为你学的知识和思想都是别人提出来的，你自己并没有多少自己的知识和思想分享给别人，所以你还得继续往楼上爬才行。&lt;/p&gt;
&lt;p&gt;我不知道国内的"专家"到底有多少，不过有一点可以肯定的是，如果把那些专门蒙大家的"砖家"也算上的话，我们的砖家比西方的要多得多。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第6层 学者&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当"专家"们想继续往上一层楼爬时，他们几乎一眼就可以看到楼梯的入口，不过令他们吃惊的是，楼梯入口处竖了一道高高的门槛，上面写着"创新"二字。不幸的是，大多数人在爬到第5层楼时已经体能消耗过度，无力翻过这道门槛。&lt;/p&gt;
&lt;p&gt;有少数体能充足者，可以轻易翻越这道门槛，但是并不意味着体力消耗过度者就无法翻越，因为你只是暂时还没有掌握恢复体能的方法而已，当掌握了恢复体能的方法，将体能恢复后，你就可以轻易地翻越这道门槛了。&lt;/p&gt;
&lt;p&gt;怎么才能将体能恢复呢？我们的老祖宗"孔子"早就教导过我们"温故而知新"，在英文里，研究的单词是"research"，其前缀"re"和"search"分别是什么意思不用我解释吧。或许有些人觉得"温故而知新"和"research"有些抽象，不好理解，我再给打个简单的比方，比如你在爬一座高山，爬了半天，中途体力不支，怎么恢复体力呢？自然是休息一下，重新进食一些食物，体力很快就可以得到恢复。&lt;/p&gt;
&lt;p&gt;由此可知，对体能消耗过度者，休息＋重新进食通常是恢复体能的最佳选择。可惜的是，国内的老板们并不懂得这点，他们的公司里不仅连正常国家规定的休息时间都不给足，有些公司甚至有员工"过劳死"出现。所以国内能翻越"创新"这道门槛的人是"少之又少"，和西方比起来估计是数量级的差别。&lt;/p&gt;
&lt;p&gt;再说说重新进食的问题，这个重新进食是有讲究的，需要进食一些基础性易消化的简单食物，不能进食山珍海味级的复杂食物，否则很难快速吸收。以查找为例，并不是去天天盯着那些复杂的查找结构和算法进行研究，你需要做的是将二分查找、哈希查找、普通二叉树查找等基础性的知识好好地复习几遍。&lt;/p&gt;
&lt;p&gt;以哈希查找为例，首先你需要去将各种冲突解决方法如链式结构、二次哈希等编写一遍，再试试不同种类的哈希函数，然后还需要试试在硬盘中如何实现哈希查找，并考虑数据从硬盘读到内存后，如何组织硬盘中的数据才能快速地在内存中构建出哈希表来，...，这样你可能需要将一个哈希表写上十几个不同的版本，并比较各个版本的性能、功能方面的区别和适用范围。&lt;/p&gt;
&lt;p&gt;总之，对任何一种简单的东西，你需要考虑各种各样的需求，以需求来驱动研究。最后你将各种最基础性的查找结构和算法都了然于胸后，或许某天你再看其他更复杂的查找算法，或者你在散步时，脑袋里灵光一现，突然间就发现了更好的方法，也就从专家晋升为"学者"了。&lt;/p&gt;
&lt;p&gt;学者所做的事情，通常都是在前人的基础上，进行一些小的优化和改进，例如别人发明了链式基数排序的方法，你第1个发现使用一定的方法，可以用数组替代链表进行基数排序，性能还能得到进一步提高。&lt;/p&gt;
&lt;p&gt;由于学者需要的只是一些小的优化改进，因此中国还是有一定数量的学者。不过和国外的数量比起来，估计少了一个数量级而已。&lt;/p&gt;
&lt;p&gt;也许有人会觉得现在中国许多公司申请专利的数量达到甚至超过西方发达国家了，我们的学者数量应该不会比他们少多少。因此，有必要把专利和这里说的创新的区别解释一下。&lt;/p&gt;
&lt;p&gt;所谓专利者，只要是以前没有的，新的东西，都可以申请专利；甚至是以前有的东西，你把他用到了一个新的领域的产品里去，也可以申请专利。比如你在房子里造一个水泥柱子，只要以前没有人就这件事申请专利，那么你就可以申请专利，并且下次你把水泥柱子挪一个位置，又可以申请一个新的专利；或者你在一个柜子上打上几个孔，下次又把孔的位置改一改，...，均可申请专利。&lt;/p&gt;
&lt;p&gt;这层楼里所说的创新，是指学术层面的创新，是基础研究方面的创新，和专利的概念是完全不同的，难度也是完全不同的。你即使申请了一万个象那种打孔一类的专利，加起来也够不到这层楼里的一个创新。&lt;/p&gt;
&lt;p&gt;当你爬到第6层楼时，你也许会有一种突破极限的快感，因为你终于把那道高高的写着"创新"二字的门槛给翻过去了，实现了"0"的突破。这时，你也许有一种"独上高楼，欲望尽天涯路"的感觉，但是很快你会发现看到的都是比较近的路，远处的路根本看不清楚。如果你还有足够的体力的话，你会想爬到更高一层的楼层去。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第7层 大师&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从第6层楼爬到第7层楼，并没有多少捷径可走，主要看你有没有足够的能量。你如果能象Hoare一样设计出一个快速排序的算法；或者象Eugene W. Myers一样设计出了一个用编辑图的最短路径模型来解决diff问题的算法；或者象M.J.D. Powell一样提出了一个能够处理非线性规划问题的SQP方法；或者你发现基于比较的排序算法，它的复杂度下界为O(NLogN)；或者你发现用栈可以将递归的算法变成非递归的；或者你设计出一个红黑树或者AVL树之类的查找结构；或者你设计出一个象C++或Java一样的语言；或者你发明了UML；...，你就爬到了第7层，晋升为"大师"了。&lt;/p&gt;
&lt;p&gt;上面举的这些例子中，其中有些人站的楼层比这层高，这里只是为了形象说明而举例他们的某个成就。从上面列出的一些大师的贡献可以看出，成为大师必须要有较大的贡献。首先解决问题必须是比较重要的，其次你要比前辈们在某方面有一个较大的提高，或者你解决的是一个全新的以前没有解决过的问题；最重要的是，主要的思路和方法必须是你自己提供的，不再是在别人的思路基础上进行的优化和改进。&lt;/p&gt;
&lt;p&gt;看了上面这些要求，如果能量不够的话，你也许会觉得有些困难，所以不是每个人都能成为"大师"的。中国软件业里能称得上是"大师"的人，用屈指可数来形容，估计是绰绰有余。值得一提得是，国外的"大师"就象我们的"大牛"一样满天飞的多。&lt;/p&gt;
&lt;p&gt;我把我猜测本国有可能进到这层楼的大师列一下，以起个抛砖引玉的作用。汉王的"手写识别"技术由于是完全保密的，不知道它里面用了什么思想，原创思想占的比重有多少，因此不知道该把它划到这层楼还是更高一层楼去。原山东大学王小云教授破解DES和MD5算法时，用到的方法不知道是不是完全原创的，如果是的话也可进到这层楼来。&lt;/p&gt;
&lt;p&gt;陈景润虽然没有彻底解决哥德巴赫猜想，但他在解决问题时所用的方法是创新的，因此也可以进到这层楼来。当然，如果能彻底解决哥德巴赫猜想，那么可以算到更高的楼层去。&lt;/p&gt;
&lt;p&gt;求伯君和王志东等大牛们，他们在做WPS和表格处理之类的软件时，不知是否有较大的原创算法在里面，如果有的话就算我错把他们划到了大牛层。由于所学有限，不知道国内还有那些人能够得上"大师"的级别，或许有少量做研究的教授、院士们，可以达到这个级别，有知道的不妨回个帖子晾一晾。&lt;/p&gt;
&lt;p&gt;鉴于"大师"这个称号的光环效应，相信有不少人梦想着成为"大师"。或许你看了前面举的一些大师的例子，你会觉得要成为大师非常困难。不妨说一下，现在有一条通往"大师"之路的捷径打开了，那就是多核计算领域，有大量的处女地等待大家去挖掘。&lt;/p&gt;
&lt;p&gt;以前在单核时代开发的各种算法，现在都需要改写成并行的。数据结构与算法、图像处理、数值计算、操作系统、编译器、测试调试等各个领域，都存在大量的机会，可以让你进到这层楼来，甚至有可能让你进到更高一层楼去。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第8层 科学家&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;科学家向来都是一个神圣的称号，因此我把他放在了“大师”之上。要成为科学家，你的贡献必须超越大师，不妨随便举一些例子。&lt;/p&gt;
&lt;p&gt;如果你象Dijkstra一样设计了ALGOL语言，提出了程序设计的三种基本结构：顺序、选择、循环，那么你可以爬到第8层楼来。顺便说一下，即使抛开这个成果，Dijkstra凭他的PV操作和信号量概念的提出，同样可以进到这层楼。&lt;/p&gt;
&lt;p&gt;如果你象Don Knuth一样，是数据结构与算法这门学科的重要奠基者，你也可以进到这层楼来。当然，数据结构和算法这门学科不是某个人开创的，是许多大师和科学家集体开创的。&lt;/p&gt;
&lt;p&gt;如果你象巴科斯一样发明了Fortran语言，并提出了巴科斯范式，对高级程序语言的发展起了重要作用，你也可以进到这层楼来。&lt;/p&gt;
&lt;p&gt;或者你象Ken Thompson、Dennis Ritchie一样发明了Unix操作系统和功能强大、高效、灵活、表达力强的C语言，对操作系统理论和高级编程语言均作出重大贡献，那么你也可以进到这层楼来。&lt;/p&gt;
&lt;p&gt;或者你有Frederick P. Brooks一样机会，可以去领导开发IBM的大型计算机System/360和OS/360操作系统，并在失败后反思总结，写出《人月神话》，对软件工程作出里程碑式的贡献，你也可以进到这层来。&lt;/p&gt;
&lt;p&gt;或者你提出了面向对象设计的基本思想，或者你设计了互联网的TCP/IP协议，或者你象Steven A.Cook一样奠定NP完全性的理论基础，或者你象Frances Allen一样专注于并行计算来实现编译技术，在编译优化理论和技术取得基础性的成就，…，均可进入这层。&lt;/p&gt;
&lt;p&gt;当然，如果你发明了C++语言或者Java语言，你进不到这层来，因为你用到的主要思想都是这层楼中的科学家提出的，你自己并没有没有多少原创思想在里面。&lt;/p&gt;
&lt;p&gt;看了上面列出的科学家的成就，你会发现，要成为“科学家”，通常要开创一门分支学科，或者是这个分支学科的奠基者，或者在某个分支学科里作出里程碑式的重大贡献。如果做不到这些的话，那么你能象Andrew C. Yao（姚期智）一样在对计算理论的多个方向如伪随机数生成，密码学与通信复杂度等各个方向上作出重要贡献，成为集大成者，也可以进入这层楼。&lt;/p&gt;
&lt;p&gt;成为“科学家”后，如果你有幸象Dijkstra一样，出现在一个非常重视科学的国度。当你去世时，你家乡满城的人都会自动地去为你送葬。不过如果不幸生错地方的话，能不挨“板砖”估计就算万幸了。&lt;/p&gt;
&lt;p&gt;从上面随便举的一些例子中，你可能能猜到，西方科学家的数量是非常多的，于是你会想中国应该也有少量的科学家吧？我可以很负责任地告诉你一个不幸的结果，中国本土产生的科学家的数量为0。目前在国内，软件领域的唯一的科学家就是上面提过的姚期智，还是国外请回来的，并不是本土产生的。&lt;/p&gt;
&lt;p&gt;可能你不同意我说的本土科学家数量为0的结论，因为你经常看到有许多公司里都有所谓“首席XX科学家”的头衔。我想说的是，这些所谓的“首席XX科学家”都是远远够不到这层楼的级别的，有些人的水平估计也就是一个“牛人”或“大牛”的级别，好一点的最多也就一个“学者”的级别。尤其是那些被称作“首席经X学家”的，基本上可以把称号改为“首席坑大家”。&lt;/p&gt;
&lt;p&gt;虽然我国没有人能爬到这层楼上来，但是西方国家仍然有许多人爬到了比这层更高的楼上。如果要问我们比西方落后多少？那么可以简单地回答为：“落后了三层楼”。下面就来看看我们做梦都没有到过的更高一层楼的秘密。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第9层 大科学家&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进入这层楼的门槛通常需要一些运气，比如某天有个苹果砸到你头上时，你碰巧发现了万有引力，那么你可以进到这层楼来。当然，万有引力几百年前就被人发现了，如果你现在到处嚷嚷着说你发现了万有引力，恐怕马上会有人打110，然后警察会把你送到不正常人类的聚集地去。因此，这里举万有引力的例子，只是说你要有类似的成就才能进到这层楼来。&lt;/p&gt;
&lt;p&gt;牛顿发现万有引力定律开创了经典物理运动力学这门学科，如果你也能开创一门大的学科，那么你就从科学家晋升为“大科学家”。比如爱因斯坦创建了相对论，从一个小职员变成了大科学家。当然大科学家可远不止这两人，数学界里比物理学界更是多得多，如欧几里得创建了平面几何，笛卡尔开创解析几何，还有欧拉、高斯、莱布尼茨等数不清的人物，跟计算相关的大科学家则有图灵等人。&lt;/p&gt;
&lt;p&gt;从上面列出的一些大科学家可以发现，他们的成就不仅是开创了一个大的学科，更重要的是他们的成就上升到了“公理”的层面。发现公理通常是需要一点运气的，如果你的运气不够好的话，另外还有一个笨办法也可以进到这层楼来，那就是成为集大成者。例如冯·诺伊曼，对数学的所有分支都非常了解，许多领域都有较大的贡献，即使撇开他对计算机的开创贡献，成为大科学家照样绰绰有余。&lt;/p&gt;
&lt;p&gt;当然，程序员们最关心的是自己有没有机会变成大科学家。既然计算机这门大学科的开创性成果早就被冯·诺伊曼、图灵等人摘走了，那么程序员们是不是没有机会变成大科学家了呢？我们的古人说得好：“江山代有才人出，各领风骚数百年”，现在在计算机这门学科下面诞生了许多非常重要的大的分支，所以你还是有足够的机会进到这层楼的。&lt;/p&gt;
&lt;p&gt;如果你能够彻底解决自然语言理解（机器翻译）这门学科中的核心问题， 或者你在人工智能或者机器视觉（图像识别）方面有突破性的发现，那么你同样可以轻易地晋升为“大科学家”。这样当某天你老了去世时，或许那天国人已经觉醒，你也能享受到如Dijkstra一样的待遇，有满城甚至全国的人去为你送葬。&lt;/p&gt;
&lt;p&gt;现在还剩下另外一个大家感兴趣的问题没有讨论，那就是这层中已经出现了牛顿、爱因斯坦、高斯等我们平常人都认为是顶级的科学家，是不是这层已经是楼顶了呢？相信还记得本文标题的人应该知道现在仅仅是第9层，还有第10层没有到达呢。可能不少人现在要感到困惑了，难道还有人站在比牛顿、爱因斯坦、高斯等人更高的楼层上？&lt;/p&gt;
&lt;p&gt;这个世界上确实存在可以用一只手的手指数得清的那么几个人，他们爬到了第10层楼上。因此，第10层楼不是虚构的，而是确实存在的。如果对此有疑惑或者认为我在胡诌一番的话，那么不妨继续往下看下去，窥一下第10层楼的秘密。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第10层 大哲&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;看了这层楼的名字“大哲”，可能不少人已经猜到了这层楼的秘密，那就是你的成果必须要上升到哲学的高度，你才有机会能进到这层来。&lt;/p&gt;
&lt;p&gt;当然，上升到哲学高度只是一个必要条件，牛顿的万有引力似乎也上升到了哲学的高度，因为不知道引力到底是怎么来的，但是牛顿没有被划到这一层，因为进到这层还有另外的条件，那就是你的成果必须引起了哲学上的深度思考，并能让人们的世界观向前跨进一大步。窃以为牛顿、爱因斯坦等人的成就还达不到让人们世界观向前跨进一大步的程度。&lt;/p&gt;
&lt;p&gt;所以，这层楼中的人的成就对我们普通人认识世界非常重要，你可以不学相对论，但是你不可以不对这层楼的人所作出的成就不了解，否则你的世界观就是极其不完整的，会犯许多认识上的错误。不幸的是，中国的科普知识普及还不够到位，知道这层楼成就的人好像并不多，程序员中恐怕更少。下面就来看看这些用一只手的手指数得清的大哲们，到底有什么成就，能比万有引力定律和相对论还重要。&lt;/p&gt;
&lt;p&gt;1、希尔伯特 (1862～1943)&lt;/p&gt;
&lt;p&gt;第1位进到此楼层是一位名叫“希尔伯特”的大数学家，如果你学过《泛函分析》，那么你在学习希尔伯特空间时可能已经对这位大数学家有所了解；如果你不是学数学出身的，又对数学史不感兴趣的话，恐怕你从来没有听说过这个名字。不过如果我问一下，知不知道二次世界大战前世界数学中心在那里，你肯定会有兴趣想知道。&lt;/p&gt;
&lt;p&gt;不妨说一下，二战前整个世界的数学中心就在德国的哥廷根，而我们这位大数学家希尔伯特便是它的统帅和灵魂人物。即使在二战期间，希特勒和丘吉尔也有协定，德国不轰炸牛津和剑桥，作为回报，英国不轰炸海德堡和哥廷根。&lt;/p&gt;
&lt;p&gt;整个二十世纪上半期的超一流数学家，几乎都出自其门下。这里不妨举几个我们熟悉的人物，例如冯·诺伊曼就曾受到他和他的学生施密特和外尔的思想影响，还到哥廷根大学任过希尔伯特的助手，钱学森的老师冯·卡门是在哥廷根取得博士学位的。顺便提一下，这位大数学家发现当时物理学上出了很多大的成果如相对论和量子力学，但是这些物理学家的数学功力明显不足，因此有一段时间带领他的学生们研究过物理学，并独立发现了广义相对论，只是不好意思和物理学家争功劳，将广义相对论的功劳全部让给了爱因斯坦。&lt;/p&gt;
&lt;p&gt;广义相对论相对于这位大数学家在数学上的贡献，其实是算不了什么的，只是由此可看出这位大数学家品格的高尚之处。如果再去看看牛顿之流的人物的品行，整天和莱布尼茨、虎克等人争功劳，利用自己的优势地位打压他人，甚至闹得上法庭，和这位希尔伯特先生比起来，简直就是个小丑。&lt;/p&gt;
&lt;p&gt;说到这里，你可能对这位大数学家“希尔伯特”有了一些初步映象，感觉到了他的重要性，不过他在数学上的主要成就可不是几句话说得清楚的。首先，他是一位集大成者，精通当时数学所有分支领域，在数学的各个领域都有较大的贡献，当然这些成就只能让他成为一个大科学家，不能带他进入这层楼。事实上这位“希尔伯特”解决的任何一个数学问题都够不到这层楼的高度，那么他怎么混到这层楼来了呢？&lt;/p&gt;
&lt;p&gt;话得从1900年说起，当时还很年轻的希尔伯特在当时的世界数学大会上做了一个报告，高屋建瓯地提出了著名的23个未解决的数学问题，然后整个二十世纪上半期，全世界的数学家们都在这23个问题的指导下展开研究，直到现在仍然有许多数学家受这23个问题的指导在进行研究。例如我们熟知的哥德巴赫猜想，就属于其中第8个问题素数分布的一个子问题。&lt;/p&gt;
&lt;p&gt;如果用“高瞻远瞩”来形容这位大数学家的话，那么这个世界上恐怕没有第二个人再配得上“高瞻远瞩”这四个字，不论是欧拉、高斯、牛顿、爱因斯坦还是被誉为最有才华的数学家伽罗华，概不例外。&lt;/p&gt;
&lt;p&gt;虽然那23个问题是归纳总结出来的，并不全是原创，但是其中有不少问题是可以上升到哲学的高度，引起深度思考的。可能大多数人都会觉得希尔伯特是进不到这层楼的，我们知道提出问题的人和解决问题的人是一样伟大的，何况他提出的问题是如此之多，基于这点，个人觉得应该让希尔伯特跨进这层楼的门槛里。&lt;/p&gt;
&lt;p&gt;看完这位希尔伯特的成就，你可能会觉得对你的世界观并没有产生任何影响。确实如此，他提出的问题不是用来影响你的，而是用来影响其他大科学家和大哲的，下面再来说说另一位对他提出的23个问题中的第2个问题有杰出贡献的大哲，你就会感觉到大哲们的成果的威力了。&lt;/p&gt;
&lt;p&gt;2、哥德尔 (1906~1978)&lt;/p&gt;
&lt;p&gt;这位大哲的名字叫“哥德尔 (G?del) ”，你可能从来也没有听说过这个名字，即使你读了一个数学系的博士学位，如果你的研究方向不和这位大哲对口的话，你也不一定了解这位大哲的成就，更不知道他的成果对我们这个世界有何意义。&lt;/p&gt;
&lt;p&gt;简单地说，这位大哲20多岁时就证明了两个定理，一个叫做“哥德尔完全性定理”，另一个更重要的叫做“哥德尔不完全性定理”。你也许会觉得奇怪，第9层楼的成就就已经上升到了公理的高度，这种证明定理的事情不是学者和大师们做的事情吗？怎么能比第9层楼的成就还高呢？下面就来简单说一下这两个定理的含义，你就会明白这属于系统级的定理，绝不是普通的定理和公理所能比拟的。&lt;/p&gt;
&lt;p&gt;“哥德尔完全性定理”证明了逻辑学的几条公理是完备的，即任何一个由这些公理所产生出的问题，在这个公理系统内可以判定它是真的还是假的，这个结论表明了我们人类所拥有的逻辑思维能力是完备的。这条定理并不能将其带入这层楼来，带其进入这层楼的是另一条定理。&lt;/p&gt;
&lt;p&gt;“哥德尔不完全性定理”是在1930年证明的，它证明了现有数学的几条公理（ZF公理系统）是不完备的，即由这些公理产生出的问题，无法由这几条公理判断它是真的还是假的。例如希尔伯特23个问题中的第1个问题，也就是著名的康托尔连续统假设，哥德尔在1938年证明了现有公理系统中不能证明它是“假”的，科恩（Cohen，或许也可以称得上是“半”个大哲）在1963年证明了现有公理系统不能证明它是“真”的。最有趣的是，即使你将某个不可判定的问题，作为一条新的公理加入进去，所组成的新的公理系统仍然是不完备的，即你无法构造一个有限条公理的系统，让这个公理系统是完备的。&lt;/p&gt;
&lt;p&gt;也许你仍然无法理解上面这段话的含义，不妨先说一下它对我们现实世界的影响。你可能知道1936年出现的图灵机是现代计算机的理论模型，如果没有哥德尔不完全性定理的思想，图灵机什么时候能出来是很难说的，所以这位哥德尔可以算作计算机理论的奠基者的奠基者。计算机对我们这个世界产生的影响比原子弹大了多少，我想不用我说大家也都清楚。当然，对现实世界的影响只能把哥德尔同图灵等人一样划到大科学家那一层去，能进入这层乃是另有原因。&lt;/p&gt;
&lt;p&gt;可能你看过《未来战士》、《黑客帝国》、《I，Robot》之类的科幻电影，于是你产生制造一个和人一样或者比人更高一级的智能机器人的想法，这就引入了一个达到哲学高度的问题，“人到底能不能制造出具有和人一样的思维能力的机器来？”。&lt;/p&gt;
&lt;p&gt;我只能告诉你，“你的愿望是良好的，但现实是残酷的”。如果你仔细思考一下不完全性定理的含义，并结合现代计算机所具有的能力分析一下，你会发现这个问题的答案暂时是否定的。如果你想造出和人一样思维能力的机器，那么你需要去好好学习这位大哲及其后续研究者的成果，并在他们的基础上有新的突破才行。&lt;/p&gt;
&lt;p&gt;为了说明这位大哲所研究领域的重要性，这里顺便再讨论一个我们日常争议不休的问题，那就是孔夫子的“人之初、性本善”以及西方认为“人之初、性本恶”的观点孰优孰劣的问题。可能有许多人发现西方社会现在领先我们，于是就认为“性本恶”是对的，“性本善”是错的，中国应该抛弃以前的旧思想，改用西方的思想。当然也有一些老学究们，认为中国的人文思想是领先于西方的，自然而然地认为“性本善”是对的，“性本恶”是错的。&lt;/p&gt;
&lt;p&gt;如果你学过大哲用过的公理化的分析方法，你就知道一套系统的多条公理间只要不会推导出矛盾的地方，即可以自圆其说，那么它可以看作是对的。这样你可以很轻易地给这个问题下一个结论，即“性本善”和“性本恶”是对等的，不存在孰优孰劣的问题，更不存在谁对谁错的问题。只要你不同时将“性本善”和“性本恶”放入一个系统内，那么是不会有问题的，甚至你也可以认为“人之初、既无善、亦无恶”，或者认为“人之初、部分善、部分恶”，都是可以自圆其说的，所以我们的老祖宗提出的思想并没有问题，之所以落后乃是其他原因造成的。这个问题其实在高斯所处的时代就有了结论，那时有人提出了非欧几何，即平行线公理问题，有人认为过一点可以作多条平行线，还有人认为平行线在无穷远点是相交的，和欧氏几何关于过一点只能作一条平行线的公理都是矛盾的，但是他们各自的系统内推导出的结论都是正确的。&lt;/p&gt;
&lt;p&gt;上面说的只是对哥德尔不完全性定理的一些粗浅解析，实际上如果深入思考一下它的含义的话，你会发现它对物理学等许多学科有重大影响，包含的道理实在是深刻，远非一般的思想所能比拟，有兴趣者不妨“google”或“百度”一下“哥德尔”。或许只有我们的老祖宗“老子”提出的哲学思想，深度可以有得一比。&lt;/p&gt;
&lt;p&gt;哥德尔不完全性定理也给那些认为科学是严谨的人当头一棒，原来连数学这样的纯理论学科都是不严谨的，其他学科就更不用说了。&lt;/p&gt;
&lt;p&gt;至此，已经说完数学上的大哲，下面不妨再看看物理学上的大哲，物理学上好像只出过一位叫“海森堡”的大哲（注：由于本人对物理学不甚了解，不知道“霍金”够不够得上大哲的称号）。&lt;/p&gt;
&lt;p&gt;3、海森堡 (1901~1976)&lt;/p&gt;
&lt;p&gt;海森堡这个名字相信没有几个人不知道的，大部分人在学习物理时都学过他的“测不准关系”，也就是因为这个“测不准关系”，海森堡爬到了第十层楼。&lt;/p&gt;
&lt;p&gt;如果你看过《时间简史》和《霍金讲演录－黑洞、婴儿宇宙及其他》，你也许已经了解测不准关系的威力，所以这里不想做过多的讨论，只谈一些和本土产生的哲学思想相关的东西。&lt;/p&gt;
&lt;p&gt;首先看看争论了几千年，并且现在仍然有人在争论不休的“宿命论”问题。霍金认为，只要这个宇宙有一个初始状态，粒子的运动是按照一定物理定律进行的（比如相对论、量子力学属于这些物理定律的一部分），那么所有的粒子运动轨迹将是确定的，然后只要你承认唯物论，即精神是由物质决定的，那么宿命论就是“对”的。当然由于测不准关系的存在，对人而言，又是无法准确预测的，因此也可以将其看作是“不对”的。简单的说，可以认为宿命论是“对”的是绝对的，宿命论是“不对”的是相对的。&lt;/p&gt;
&lt;p&gt;可能上面这段话你现在仍然难以理解，或许你又觉得你的命运并不是上天注定的，而是可以通过自己的努力可以改变的。我要告诉你的是，你在想什么也是事先已注定的，包括你在预测本身也是事先注定的，因为大脑思考问题最终是基本粒子运动的结果，而这些粒子的运动必然要遵循物理定律进行，所以你会不会努力，想不想努力，包括你在想你该不该努力这件事本身也是事先注定的。顺便说一下，你现在正在看这篇文章，可能正在想这个宿命论问题值得怀疑，或者觉得写得不够好，准备砸个板砖上来；或者你在想这篇问题写得有点意思，准备看完后转给朋友看一看；又或者你看到这里，觉得很累了，准备休息一下；…；这些都是上天事先就注定的。从你自身的相对角度看，因为你事先不知道后来会发生什么，也可以认为不是事先注定的，可能这句话有些不好理解，不妨好好理解前面说过的公理化思想。&lt;/p&gt;
&lt;p&gt;如果你没看过《霍金讲演录－黑洞、婴儿宇宙及其他》，你可能会觉得很惊讶，宿命论历来不都被认为是唯心论吗，怎么由唯物论推导出了宿命论呢？现实就是这样和你开了一个大的玩笑，不过这个玩笑也是事先注定的。如果你再仔细用公理化的方法思考一下唯物论和唯心论的矛盾性，就像前面分析性善论和性恶论一样，你会发现唯物论、唯心论不一定就是冲突的，矛盾的双方是可以统一的，只要你不要同时将唯物和唯心放进同一个系统中就行。&lt;/p&gt;
&lt;p&gt;当然也有聪明者仍然会怀疑宿命论问题的正确性，因为这里有一个前提条件，即宇宙要有一个初始状态。宇宙有没有初始状态，我们并不知道啊，虽然有大爆炸学说，但那也只是假说而已，并没有得到确证，有些人就认为宇宙是一直都存在的。这样看来似乎你又有合理的理由在怀疑宿命论了，不过我仍然要告诉你，你现在在怀疑宿命论仍然是事先注定的，不相信的话就来看看下面的分析。&lt;/p&gt;
&lt;p&gt;虽然宇宙的初始状态值得怀疑，但是这个宇宙至少已经存在了一段时间，这点我想是毋庸置疑的。我们可以在我们已知的宇宙存在的这段时间内，任意取一个时间点t0，那么在这个时间点t0上，所有的粒子都有一个运动状态。在时间点t0之后的时间里，由于粒子运动是按照物理定律进行的，因此粒子运动轨迹由时间点t0的状态决定。说白一点，如果取100年前的一个时间点作为t0，那么现在的所有粒子运动状态100年前就已经确定了，如果取10000年前一个时间点作为t0，那么最近10000年内所有粒子运动的轨迹在10000年前就确定了，当然，你可以取更早的时间，比如100亿年前的时间点。&lt;/p&gt;
&lt;p&gt;总之，现在你会发现宇宙有没有初始状态并不会影响宿命论的正确性，所以这个世界的一切都是注定的。只不过由于粒子间相互影响过于复杂，我们无法知道这些粒子的运动轨迹而已。当然，如果将测不准关系用上的话，那么就是这个运动轨迹对人来说是无法准确预测的，所以不妨开个玩笑：“算命先生经常算得不准大概是测不准关系的缘故吧”。&lt;/p&gt;
&lt;p&gt;如果你再深入思考一下测不准关系，你会发现这是一个测量系统的问题。由于宿命论的存在，这个世界本身实际上是确定的，是“准“的，之所以测不准乃是我们人类所具有的测量能力依赖于基本粒子造成的。所以我在前面说宿命论是“不对”的是相对的，它是相对于我们人类的测量能力而言的。根岑（Gentzen，曾任希尔伯特的助手）在一个更强的系统内证明了ZF系统内的问题都是可判定的，从一个侧面说明这个世界本身是确定的。（注：它和哥德尔不完全性定理并不矛盾，由于数学上的复杂性，这里就不详细解释了）&lt;/p&gt;
&lt;p&gt;不妨再想想我们老祖宗提出的“是庄周梦见了蝴蝶？还是蝴蝶梦见了庄周？”，“风动？幡动？还是心动？”之类的问题，当然以前你都认为这是纯粹的唯心主义，甚至认为是封建糟粕，但是如果结合测不准关系的内涵，再结合前面所说的公理化分析方法进行分析，估计你现在不敢轻易地下结论。&lt;/p&gt;
&lt;p&gt;也许到现在你仍然无法理解为什么把大哲们划在了大科学家的上一层，你可能仍然觉得万有引力、相对论等成果是最伟大的。下面就来谈谈为什么大哲比大科学家高一层。&lt;/p&gt;
&lt;p&gt;如果把人类在现有能力情况下，将来所能够拥有的知识总集看成是一个集合A，人类现在已有的知识总集看成是集合B，显然，集合B只是集合A的一个子集，并且是很小的一个子集。牛顿力学、相对论这些理论只能算作集合B里的一个子集，相对于集合A，只能算作是沧海一粟。 换句话说，在人类现有能力可做的事情集合中，牛顿力学和相对论等理论给出了详细的办法让你可以做其中的一些事情，当然剩下的更多的事情是牛顿力学和相对论所无法解决的。&lt;/p&gt;
&lt;p&gt;哥德尔不完全性定理和测不准关系的意义在于，它指出集合A的范围，即将人类现有能力发挥到极限的情况下，那些事情是你能做到的，那些是你不能做到的。当然，它并没有给出具体的方法让你去做你能做到的事情，它只是告诉我们我们人类现在发现的能力所能达到的极限。或许将来发现人类有其他新的未发现的能力，那么这个极限就被打破了。比如将来能发现不依赖于基本粒子的其他测量方法，并且测量过程中不会改变其他粒子的状态，那么测不准关系就被打破了。&lt;/p&gt;
&lt;p&gt;看到这里，估计你已经发现了一些秘密，科学兜了一大圈，最终还是回到了哲学，也就是我们所认为的玄学上。同时你也会发现，我们老祖宗提出的所谓玄学，原来和现代科学是相通的，并非象某些人想像的那样全是糟粕。如果有人认为西方现代暂时领先我们，进而就认为西方古代就已经超越我们，我们老祖宗就已经落后西方，他们的思想都是糟粕的话，那么我认为他可能犯了崇洋媚外的毛病。我不得不化用一句周杰伦在春晚上的歌词送给他：“你不妨抓一副我们祖传的中医良方，治一治你那崇洋媚外的内伤”。顺便告诉他一下，中医用的阴阳五行理论，它的前提假设就是宿命论。&lt;/p&gt;
&lt;p&gt;上面说的这几位大哲的成果，可能对你的世界观会有很大的影响，于是你可能会羡慕起这些大哲们的成果来。如果你有大志的话，你会希望有朝一日你也能变成大哲，但是你发现上面的大哲是研究数学和物理学的，而你是学计算机的程序员，那么是不是没有机会变成大哲呢？&lt;/p&gt;
&lt;p&gt;如果你能将NP难题给彻底解决掉，意味着计算机内的计算的奥秘基本被揭开，或许你可以进到这层楼来；或者你能发现另外一套计算机可以理解的数学公理系统，并且这个公理系统是完备的，那么计算机取代人类进行思维的一个必要条件就满足了，计算机将具有真正意义上的“逻辑思维和推理能力”，你可以轻松地进到这层楼来。如果你发现了新的方法可以打破测不准关系，同样你也可以轻松地进到这层楼来。&lt;/p&gt;
&lt;p&gt;如果你能彻底揭开人类抽象思维的奥妙，并让计算机懂得了如何创建抽象，具备抽象思维能力，那么也就具备了“设计能力”，可以取代人类进行各种设计了，你也可以轻松地进到这层楼来。顺便说一下，如果你对软件设计有真正深刻理解的话，就会明白这不是在写科幻小说。对此感兴趣者，不妨好好地研究一下程序切片方面的技术，会让你对软件设计和测试等方面的理解有质的提高，或许有一天你能打开这扇大门。&lt;/p&gt;
&lt;p&gt;当然，计算机要完全取代人还有其他必要条件，后面还会提及。&lt;/p&gt;
&lt;p&gt;值得一提的是，虽然第10层楼是本文中所写的最高层，但是大哲们并没有觉得他们到了顶层，他们通常都还会努力寻找通往更高一层的楼梯。如果你也有成为天下第一的想法，那么你或许会想要做什么事情才能超越大哲们的成就，当然，这都得依赖于找到更高一层楼的楼梯。&lt;/p&gt;
&lt;p&gt;个人认为，再往上一层楼的楼梯是通往天堂的道路，也就是说第11层楼的名字叫“天堂”，是“上帝”住的地方，而不是人住的地方。如果将来某天有人能爬到天堂的话，那么他已经不是人了，而是由人变成了“上帝”。&lt;/p&gt;
&lt;p&gt;你也许会怀疑这个世界到底有没有“天堂”，“上帝”是否根本就不存在，我也很有同感。因此有必要再写上一段文字，讨论一下“上帝”的问题。如果你想了解天堂的奥妙，有没有办法让你变成“上帝”，不妨看看继续往下看看第11层楼的玄妙。注意我这里用的是“玄妙”二字，因为上帝在大部分人眼里估计都是“玄之又玄”的东西。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第11层 上帝&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;看了上面的小标题，你可能会觉得奇怪，这篇文章不是讲“程序员的十层楼”吗？怎么冒出了第11层来了？&lt;/p&gt;
&lt;p&gt;其实这并不矛盾，程序员确实只有十层楼，因为爬到第11层时，已经变成上帝，不再是程序员了；所以超出10层楼本身并不重要，关键的问题是看你有没有能力变成上帝。&lt;/p&gt;
&lt;p&gt;1、谁是上帝？&lt;/p&gt;
&lt;p&gt;菜鸟们认为Linus Torvalds是程序员中的上帝，看完了前面各层楼的介绍，此时再看到这句话，相信你要忍不住在心里笑起来。当然，你会不会笑起来是事先注定的。Don Knuth也不是上帝，他离上帝还有三层楼的距离。即使是大哲们，他们离天堂也还差一层楼，因此这个世界上有史以来还没有任何一个人变成过上帝。&lt;/p&gt;
&lt;p&gt;我们感兴趣的是，将来会不会有人爬到比大哲们更高的楼层上，变成了上帝。&lt;/p&gt;
&lt;p&gt;要变成上帝，你得有上帝一样的能力，上帝会造人，你会吗？&lt;/p&gt;
&lt;p&gt;你也许会怯生生地问：“我可以和爱人生小孩，算不算造人？”，你可能还会理直气壮地说：“现在生物学上都可以克隆人了，早就有人掌握了造人的方法”。&lt;/p&gt;
&lt;p&gt;事实上克隆人需要有人的体细胞，必须要先有人才会有体细胞。上帝造人时，这个世界上并没有人，是从无生命的物质“尘土”中创造出的人。因此，用最原始的方法生人和克隆人都是从有生命信息的物质中生人，不能算作造人。&lt;/p&gt;
&lt;p&gt;这样看来，你根本不会造人，不过我可以告诉你一个“玄方”，让你有机会学会如何造人。&lt;/p&gt;
&lt;p&gt;如果你揭开了人类情感的奥秘，让计算机也可以拥有和人类一样的情感，那么计算机将可以理解人类的需求，具有了“情商”，将具有完整的和人一样的能力。此时，人类进化到了机器人，科幻小说将变成现实，也就是说你已经掌握了真正的造人能力，晋升为“上帝”了。&lt;/p&gt;
&lt;p&gt;未来到底有没有人能变成“上帝”，人能不能进化到机器人，这是宿命论中事先注定了的。说到这里，不妨再告诉你一个打破宿命论的方法，这个方法就是你要爬到比上帝还要高的楼层。&lt;/p&gt;
&lt;p&gt;“还有比上帝还高的楼层？”，你可能会第1时间内冒出这个问题，其实我也有同样的怀疑。因此在写第12层楼前，有必要弄清楚它到底存不存在，即你可不可以骑到上帝的头上的问题。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;骑到上帝的头上？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为了解决是否可以骑到上帝的头上这个问题，不妨先假设存在比上帝高的楼层，也就是存在打破宿命论的方法。&lt;/p&gt;
&lt;p&gt;宿命论的本质原因是因为时间是单向运行，不可逆转造成的。如果你找到一种可以使时间逆转的方法，那么你就打破了宿命论，爬到了比上帝还高的楼层。&lt;/p&gt;
&lt;p&gt;看到这里，你也许会摆脱刚才陷于宿命论的困惑情绪，变得充满希望般高兴起来。不过，如果你的逻辑思维能力足够好，仔细思考一下，会发现存在一个逻辑上的悖论。&lt;/p&gt;
&lt;p&gt;在你找到时间逆转的方法之前，显然这个世界仍然是需要服从宿命论的，也就是说你能不能找到打破宿命论的方法是事先注定的。假设你在某个时间点t0处找到了打破宿命论的方法，你在打破宿命论后，想利用时间逆转的方法回到某个时间点t2。下面来看看你到底能不能回到时间点t2。&lt;/p&gt;
&lt;p&gt;取位于t0和t2之间的任意一个时间点t1，你在回到时间点t2之前，必须先经过时间点t1，考虑你到达t1的那一时刻，由于t1比t0要早，这个时间点上你还没有找到时间逆转的方法，所以到了时间t1点后，你无法再使用时间逆转的能力回到时间点t2去，所以你永远也回不到时间点t2，由于时间点t2是任意取的，因此，你永远也无法使时间逆转，或者说你根本就没打破过宿命论，这与你在时间点t0打破了宿命论产生了矛盾。&lt;/p&gt;
&lt;p&gt;上面这段话看起来似乎有点像“人永远迈不出一步”的诡辩一样，你可能会想返回到时间点t1时，仍然可以拥有时间逆转能力啊。不过你又会发现一个新的问题，时间点t1本来是没有时间逆转能力的，现在又认为时间点t1又有时间逆转能力，那时间点t1到底是有还是没有时间逆转能力呢？或者说在时间点t0前，宿命论注定了时间点t1是没有时间逆转能力的，现在你又认为时间点t1具有时间逆转能力，那么这两个时间点t1究竟是不是同一个时间点？如果不是同一个时间点，说明你没有回到过去；如果是同一个时间点的话，岂不是自相矛盾吗？&lt;/p&gt;
&lt;p&gt;为了说得更形象一些，不妨假设你坐一艘超光速飞船，准备从时间点t0回到时间点t2去，假设你回到t2后，随着时间的流逝，又达到了时间点t0，如果这时你又再次坐超光速飞船返回时间点t2，那么一个值得思考的问题就出现了，“你在时间点t2能不能看到上次返回时间点t2的飞船？”&lt;/p&gt;
&lt;p&gt;如果回答不能看到飞船，那么上次返回的飞船那里去了呢？显然很难解释通。如果回答能看到飞船，那么你可以到达时间点t2后，下次时间到达t0时，你又坐飞船返回t2，这次你将可以看到上两次的两艘飞船。如果这样一直循环下去，最后你会发现你可以在时间点t2看到无穷多的飞船。用程序员的术语说，叫做“程序陷入了死循环”，最后系统必然会出现“Out of Memory”现象而崩溃。&lt;/p&gt;
&lt;p&gt;当然，你也可以认为有其他的方法，不需要飞船，可以一次性从时间点t0直接跳跃到时间点t2，并不需要经过时间点t1。下面不妨来分析一下这个方法是否可行。&lt;/p&gt;
&lt;p&gt;既然是直接跳跃到时间点t2，那么你必然是在一个无穷小的时间里出现在时间点t2的某个空间里，例如你要在时间点t2回到某个广场上。首先说明一下为什么是无穷小的时间里出现的，因为如果不是无穷小的时间里出现的话，那么必然可以取到一个时间点t1，会导致前面所说的时间点t1上出现悖论。&lt;/p&gt;
&lt;p&gt;你在广场上出现的时，广场上的空气必然要为你让开空间，而这是在无穷小的时间里完成的，那么很容易推导出你周围的空气获得的加速度和速度都是无穷大，因而它具有的动能也是无穷大，无穷大的能量和无穷大的速度意味着什么？一只鸟都可以将飞机撞下来，如果宇宙是有限大的话，它可以让这个宇宙炸毁无穷次；即使宇宙是无限大，它也足以让宇宙炸毁一次。宇宙都毁灭了，又何来的时间？还能说你回到了时间点t2吗？&lt;/p&gt;
&lt;p&gt;也许上面说的这些你仍然难以相信，不妨再说得更现实一些，假设你要回到100年前的一个时间点，这100年中，天上有多少流星湮灭了？有多少新星生成了？宇宙膨胀了多少？你有能力让湮灭的流星复原、生成的新星重新返回未生成前的状态，膨胀的宇宙收缩回去吗？如果这些东西的状态没有回复到100年前，又怎么能说明你回到的是100年前的时间点呢?&lt;/p&gt;
&lt;p&gt;根据上面的推导和分析，个人认为使时间逆转的方法是不存在的，所以第12层楼是不存在的，自然没有人可以骑到“上帝”的头上。&lt;/p&gt;
&lt;p&gt;宿命论将在有时间的时间里永远统治这个世界。&lt;/p&gt;</summary><category term="程序员"></category></entry><entry><title>若，人生只是初见</title><link href="http://hackecho.com/2011/04/if-we-meet-first-time/" rel="alternate"></link><updated>2011-04-10T22:22:53-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-04-10:2011/04/if-we-meet-first-time/</id><summary type="html">&lt;p&gt;似乎只是一瞬间，时光便悄悄的滑过了三月的轮廓。在这烟花般的季节里，我怀着对曾经的感怀，静静的游荡在这片蒙蒙烟雨间。&lt;/p&gt;
&lt;p&gt;雨落无声，回忆无数。触摸着那丝丝微雨的柔情，我仿佛看到了那些陈旧的往事，随着凌乱的雨丝，一幕又一幕的穿透时光的壁垒，让苍老的思绪故地重游，再一次的去品味那一段段遗失的美好。&lt;/p&gt;
&lt;p&gt;然而，或许是思绪穿梭的太过于久远，让我再无力量去追寻过往的脚步，只能任岁月的风霜染白我满怀的柔情，于寂寞流年里，刻画出一副静止的画面，将那些可爱的人，出现过的风景，都一一的收录其中，并永久的珍藏于心间。&lt;/p&gt;
&lt;p&gt;模模糊糊的，时间已过了好久，心中怀念的太多，脑海里徘徊的也太多，每当想要去描绘的时候，伤情的笔却又不知道该从何处落下，于是，我就这样介乎于半醒半梦之间，任沧桑褪尽旧日的芳华，孜然一身，谱写着这段风月的幽曲。&lt;/p&gt;
&lt;p&gt;若，人生只是初见，我是否还会在每一次相聚的时刻，脑海里就已经勾勒出别离的画面？&lt;/p&gt;
&lt;p&gt;若，人生只是初见，我是否还会在每一个安静的午夜，发疯似得去找寻曾经存在过的痕迹？&lt;/p&gt;
&lt;p&gt;若，人生只是初见，我是否还会在每一个独处的瞬间，像傻子一样微笑的回味着自己的经历？&lt;/p&gt;
&lt;p&gt;若，人生只是初见，我是否还会在每一次别离的过后，躲在无人发现的角落里独自黯然神伤？&lt;/p&gt;
&lt;p&gt;匆匆岁月间，相遇、别离、回首、再到淡忘、就好像一个轮回一样，反反复复，来来往往，走到最后又有几人还记得当初相遇的地点？行云流水的日子，总会把一切痕迹都给抹平，任你立场多坚定，意志多顽强，到最后能留下的也只是一些散乱的文字罢了。&lt;/p&gt;
&lt;p&gt;一直以来都很喜欢这么一句话：“一个人总要走陌生的路，看陌生的风景，听陌生的歌，然后在某个不经意的瞬间，你会发现，原本费尽心机想要忘记的事情真的就这么忘记了。”其实不管是费尽心机想要忘记的，还是费尽心机想要铭记的，都是经不起岁月冲刷的，时光流逝，带走的除了生命力之外，其他的也就是记忆中的一些片段而已，无它……&lt;/p&gt;
&lt;p&gt;雨、渐渐的停了，望着朦胧中浮现出的真实，原来一切都没有什么变化，尘世依旧是那年的尘世，风景依旧是那年的风景，唯一不同的是缺少了当年的赏花人。&lt;/p&gt;
&lt;p&gt;蹒跚于这条充斥着回忆和淡忘的人生路上，或许我们都苍老了容貌，或许我们都成长了经历，或许我们都淡忘了彼此，或许……太多太多！&lt;/p&gt;
&lt;p&gt;若，人生真的只是初见，我宁愿舍弃三千繁华，只为固守那一份初见的美好。可惜的是，人生又怎会只是初见呢，这不过是我妄想过后的胡语罢了，人有悲欢离合，月有阴晴圆缺，过去了就是过去了，不管故事有多么精彩，情节有多么动人，到最后也只能成为怀念而已。&lt;/p&gt;
&lt;p&gt;夜，一如既往的深沉，就好像一场无声息的黑色葬礼般，那么的隆重，又那么的忧伤。伫立于这样的夜色下，我静静的倾听着晚风拂过的呢喃，让记忆的漩涡一次次的将我卷入，不再去做陡然的掩饰，也不再去做无力的挣扎，任凭自己堕入那无尽的哀愁深渊。&lt;/p&gt;
&lt;p&gt;或许，这是人生所必须经历的一道坎，若能迈过去，从此海阔天空，凌驾红尘。若迈不过去，就只能在轮回中飘忽不定的游荡，最终成为一个不知疲倦的迷途者。&lt;/p&gt;
&lt;p&gt;若人生只是初见，我们又何须感伤的别离的苦，耳里听着淡淡的音乐，心里想着尘封的旧事，似乎一切都是那么的顺其自然，就好像与生俱来的本能的一样。原来、不是我们在风月中学会了感伤，而是、我们的感伤早已深深的嵌入了时光。&lt;/p&gt;
&lt;p&gt;经历了太多，感慨的太多。当历尽沧桑繁华后，让那些沉淀下来的记忆当记忆沉淀下来，化为一首幽香的梦曲，于行行笔墨中，凝聚成千年的梦境。&lt;/p&gt;
&lt;p&gt;文/残月&lt;/p&gt;</summary><category term="人生"></category><category term="初见"></category></entry><entry><title>当你懂得，或已错过</title><link href="http://hackecho.com/2011/04/missing-when-you-knowing/" rel="alternate"></link><updated>2011-04-05T18:51:49-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-04-05:2011/04/missing-when-you-knowing/</id><summary type="html">&lt;p&gt;文/马德&lt;/p&gt;
&lt;p&gt;一天上午,一位母亲风风火火地找到我。&lt;/p&gt;
&lt;p&gt;老师,你看到小萍了吗,我家闺女!母亲的头发枯黄,被风刮得东一绺西一绺的,像秋天的衰草,是一种刺痛人心的乱。&lt;/p&gt;
&lt;p&gt;我一愣。小萍,不是回家了吗?昨天学校月休,学生们都回家了,难道她没回去?我也有些乱了方寸,心紧跟着“怦怦”跳起来。&lt;/p&gt;
&lt;p&gt;哦,昨天,她倒是回来了,可是,今天早上,她,她就没影了……都怨我,唠叨了几句……这孩子,怎么就跑了呢!母亲像是向我解释,又像是自言自语,一副手足无措的样子。&lt;/p&gt;
&lt;p&gt;哦,这样啊。没事,她不会跑到哪里,我给你问问吧。我找出班级电话簿,挨个给小萍的同学打电话。但打了一个遍,都说没见到。突然间,母亲的情绪有些失控,怎么办,这可怎么办啊。她一边说,一边捶胸顿足,看她急的样子,都快要疯掉了。&lt;/p&gt;
&lt;p&gt;顾不上和我多说一句话,小萍的母亲跨上自行车,一转眼,就没了踪影。她走之后,我心里一直没着没落的。小萍平时还算一个听话懂事的学生,我想,她一定不会走到哪里去的。果然,傍晚的时候,一个学生给我打来电话,说打听到了小萍的消息——她到了另一个班的一位同学家里,一切都好着呢。&lt;/p&gt;
&lt;p&gt;我赶紧给小萍的家里打电话,接电话的,是小萍的父亲。他喘着短促的粗气,当获知女儿的下落后,便骂骂咧咧地数落起女儿来。看来,他是真生气了。我说,小萍的妈妈呢。她啊,已经出去找了一天了,这会儿,还没回来呢。&lt;/p&gt;
&lt;p&gt;学生返校的当天,我便找小萍谈话。没想到,小萍竟一脸的委屈。她说,每次她都不愿回家,因为每次回家之后,母亲就总是没完没了唠叨个不休,上学这几年,都是这个样子,她都受不了了。真的,老师,我不想见到她。小萍的话冷冷的,仿佛她谈论的,不是母亲,而是另一个毫不相干的人。&lt;/p&gt;
&lt;p&gt;尽管,我一再劝她不要和母亲闹僵了,但小萍的态度始终有一搭无一搭的,不放在心上。&lt;/p&gt;
&lt;p&gt;后来,小萍考上大学。之后,便没有她的任何消息。&lt;/p&gt;
&lt;p&gt;再次见到小萍,是在班里的一次同学聚会上。她看到我的一霎,眼圈便红了。我问她怎么啦。她说,妈妈得了脑血栓,全身瘫痪,已经不能动弹了。她一边抹泪,一边说,老师,你知道吗,我妈妈现在已经不能说一句话了。说完,小萍哭得更厉害了,老师,我真后悔,当时,没有听你的话,现在,我再想听妈妈的唠叨,已经不能了。我记得,你当时给我细细算过一笔账,你说,人一辈子,除了上学,工作,结婚生子,真正守在母亲身边的日子没有多少天,要好好珍惜才对。然而,年少叛逆的我,哪里懂得这些啊。现在懂得了,又有什么用呢。&lt;/p&gt;
&lt;p&gt;那次聚会,小萍没有待多久,就匆匆走了。&lt;/p&gt;
&lt;p&gt;我把这个故事曾经讲给好多学生听。每次月休回家,我都要嘱咐学生,回家之后的两天里,一定要认真而耐心地听父母讲的每一句话,哪怕,他们说的根本是错的,哪怕他们絮叨到没完没了。而你能坐在父母膝边,认真倾听他们的唠叨,就是最好的孝顺。&lt;/p&gt;
&lt;p&gt;千万不要把孝顺留待将来。你要知道,当你懂得的时候,可能,已经错过。&lt;/p&gt;</summary><category term="亲情"></category></entry><entry><title>ThinkPHP学习笔记（一）</title><link href="http://hackecho.com/2011/04/thinkphp-notes/" rel="alternate"></link><updated>2011-04-04T15:24:01-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-04-04:2011/04/thinkphp-notes/</id><summary type="html">&lt;p&gt;因为是自己的笔记，所以比较杂乱，见谅。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Action：&lt;/strong&gt;模块控制器类，你暂时可以理解为一个Action文件代表着一个应用模块，Action文件中的每一个方法(function)代表着一个操作，操作分为有输出到模板的操作和只具执行不需要输出的操作。对于有输出的操作，则代表了你的项目中一个展示给用户应用的web页面。（注意：这不是正统的术语解释）&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;//IndexAction.class.php&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;IndexAction&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Action&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="p"&gt;....&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Model：&lt;/strong&gt;数据表相对应的Model类，可以理解为一个Model文件对应着你项目数据库的其中一个表。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;//UserModel.class.php&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;UserModel&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Model&lt;/span&gt;
    &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="o"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Action目录放置命名为xxxAction.class.php的控制器文件，Model目录放置对应数据库表的命名为xxxModel.class.php的类文件。&lt;/p&gt;
&lt;p&gt;1 在TP开发中，要增加一个应用模块，就在Action文件夹里建立一个类，类的文件命名格式是模块名称+Action.class.php。例如我们这里的应用模块是Index，所以定义文件名为IndexAction.class.php&lt;/p&gt;
&lt;p&gt;2 应用模块类的定义要继承框架的Action类。要为这个应用模块添加一个操作，则定义一个以此操作为命名的function.例如上面的index操作。&lt;/p&gt;
&lt;p&gt;在Conf文件夹内，建立一个config.php文件。这个文件，就是Myapp项目的配置文件。系统会自动加载config.php文件中的配置是以数组返回方式进行定义，会覆盖TP框架中的common目录下convention.php的默认配置。（convention.php中有数据库配置）&lt;/p&gt;
&lt;p&gt;配置设置可以利用C函数动态改变。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;有关TP的模板引擎的变量输出：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在应用模块中，如果某个操作是需要页面显示的，只要对应在Myapp/Tpl/default/里建立一个文件夹，文件夹以模块的名称来命名，然后在这个文件夹下建立一个以这个function名称来命名的html文件，就可以在这个方法中使用$this-&amp;gt;display()方法来直接调用该模板。（也可以调用其它模块的其它模板或显式指定模板文件位置和名称，先忽略）&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Tpl&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; 模块名的文件夹 &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; 函数名的&lt;span class="n"&gt;html&lt;/span&gt;文件（即模板）
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在Action类里面使用 assign方法对模板变量赋值：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;this&lt;/span&gt;-&amp;gt;assign(&amp;#39;name&amp;#39;,&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;value&lt;/span&gt;);
// 下面的写法是等效的
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;this&lt;/span&gt;-&amp;gt;name = &lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;value&lt;/span&gt; ;
// 模板变量赋值后就需要调用模板文件来输出相关的变量，模板调用通过display方法来实现
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;this&lt;/span&gt;-&amp;gt;;display();
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE HTML PUBLIC &amp;quot;-//W3C//DTD HTML 4.0 Transitional//EN&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    测试输出：&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果要同时输出多个模板变量，可以使用下面的方式：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$&lt;span class="n"&gt;array&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
$&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt;   &lt;span class="s"&gt;&amp;#39;thinkphp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
$&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;   &lt;span class="s"&gt;&amp;#39;abc@123.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
$&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;phone&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;   &lt;span class="s"&gt;&amp;#39;12345678&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;用{$array.name}在模板中输出
智能模式下的URL基本结构是这样的&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;servername&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;appName&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;moduleName&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;actionName&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;你可以理解为&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt; 服务器地址 &lt;span class="o"&gt;/&lt;/span&gt; 入口文件位置 &lt;span class="o"&gt;/&lt;/span&gt; 应用模块名称 &lt;span class="o"&gt;/&lt;/span&gt;具体操作名称&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;GET&lt;/span&gt;变量参数
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;127&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;0&lt;span class="p"&gt;.&lt;/span&gt;1&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;配置开启rewrite。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模型对象：&lt;/strong&gt;即数据对象，你项目里每一个Model类文件都会对应着一个数据表(或者视图)，模型与数据表存在一种映射关系。&lt;/p&gt;
&lt;p&gt;开发过程中，只要简单地定义好与数据表对应的模型类（xxxModel.class.php），就可以进行对数据操作了。&lt;/p&gt;
&lt;p&gt;关于MVC模式的经典语录：C的作用，就是从M中取得数据到V&lt;/p&gt;
&lt;p&gt;自动完成功能要详细阅读手册。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模板常量：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;__ROOT__&lt;/span&gt;    网站根目录地址
&lt;span class="n"&gt;__APP__&lt;/span&gt;         当前项目（入口文件）地址
&lt;span class="n"&gt;__URL__&lt;/span&gt;         当前模块地址
&lt;span class="n"&gt;__ACTION__&lt;/span&gt;   当前操作地址
&lt;span class="n"&gt;__SELF__&lt;/span&gt;       当前 &lt;span class="n"&gt;URL&lt;/span&gt; 地址
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;dump($var, $echo=true,$label=null, $strict=true)&lt;/strong&gt;函数。浏览器友好的变量输出。&lt;/p&gt;
&lt;p&gt;连贯操作:所谓连贯操作，是TP利用__call方法来实现的一些特殊的Model类方法，可以对数据对象连续调用数个方法(参数)来设定特定的条件，然后执行最终所指定的操作，这类特定方法的命名都很直观易记：
用于查询表达式的&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="s"&gt;&amp;#39;field&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;要查询的字段名
&lt;span class="s"&gt;&amp;#39;table&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;数据表名称 不指定时，默认为当前数据对象所对应的表
&lt;span class="s"&gt;&amp;#39;where&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;查询条件
&lt;span class="s"&gt;&amp;#39;order&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt; 排序
&lt;span class="s"&gt;&amp;#39;limit&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;结果限制
&lt;span class="s"&gt;&amp;#39;having&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;having&lt;/span&gt;支持
&lt;span class="s"&gt;&amp;#39;group&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;支持
&lt;span class="s"&gt;&amp;#39;distinct&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;distinct&lt;/span&gt;筛选支持
&lt;span class="s"&gt;&amp;#39;lazy&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;惰性查询支持
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;用于统计查询的&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="s"&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;统计满足条件的记录个数
&lt;span class="s"&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;统计某个字段的总和
&lt;span class="s"&gt;&amp;#39;min&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;取得某个字段的最小值
&lt;span class="s"&gt;&amp;#39;max&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;取得某个字段的最大值
&lt;span class="s"&gt;&amp;#39;avg&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;统计某个字段的平均值
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;获取单条记录：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nb"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;$&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;$&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;是查询条件表达式。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;利用find方法进行查询，会自动加上limit=1来得到指定条件的一条记录。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;//SELECT * FROM `think_form` WHERE id=&amp;#39;2&amp;#39; LIMIT 1&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;dump&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;getLastSql&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// SELECT * FROM `think_form` WHERE ( `email` = &amp;#39;abcdefg&amp;#39; ) LIMIT 1&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;[&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;&amp;#39;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;abcdefg&lt;/span&gt;&lt;span class="p"&gt;&amp;#39;;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;&amp;#39;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;dump&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;getLastSql&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但是这样未免麻烦了些，这时我们可以使用连贯操作，结果是一样的。不过这样就直观了很多&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;abcdefg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;多个条件时同样如此设置
$&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; $&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;$&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;find&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;dump&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; $&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; $&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;getLastSql&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;2 getField($field,$condition='') 获取一条记录的某个字段的值&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;//SELECT `email` AS `abcdefg` FROM `think_form` LIMIT 1&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;[&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;&amp;#39;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;abcdefg&lt;/span&gt;&lt;span class="p"&gt;&amp;#39;;&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;getField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意：这里如果我们使用&lt;code&gt;$data = $Form-&amp;gt;where($where)-&amp;gt;getField();&lt;/code&gt;
返回的将会是这个条件的id值
sql将会是&lt;code&gt;SELECT * FROM &lt;code&gt;think_form&lt;/code&gt; WHERE ( &lt;code&gt;email&lt;/code&gt; = 'abcdefg' ) LIMIT 1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3 getFields($field,$condition='',$sepa=' ')获取数据集的个别字段值&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; $&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;getFields&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;SELECT&lt;/span&gt; `&lt;span class="n"&gt;email&lt;/span&gt;` &lt;span class="n"&gt;FROM&lt;/span&gt; `&lt;span class="n"&gt;think_form&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;4 getby字段名('字段值') --动态根据指定字段获取一条数据&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; $&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;getbyemail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;abcdefg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; `&lt;span class="n"&gt;think_form&lt;/span&gt;` &lt;span class="n"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;abcdefg&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;LIMIT&lt;/span&gt; 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;5 获取多条记录select($options=array()) 或 findAll($options=array())&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$option 参数设定的是查询表达式，不设置时，默认是获取全部数据.参数支持如下键名&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;table&lt;/span&gt; 指定表名称，可以跨表访问，若不填则是当前&lt;span class="n"&gt;DAO&lt;/span&gt;
&lt;span class="n"&gt;distinct&lt;/span&gt; 指定是否只列出不重复数据，如果想列出不重复数据，则为&lt;span class="n"&gt;true&lt;/span&gt;，不填则无此功能
&lt;span class="n"&gt;field&lt;/span&gt; 指定要搜索的字段，不填则为&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;join&lt;/span&gt; 填写&lt;span class="n"&gt;join&lt;/span&gt;，可以支持数组或者直接使用字符串，如果是字符串，那么只支持&lt;span class="n"&gt;LEFT&lt;/span&gt; &lt;span class="n"&gt;JOIN&lt;/span&gt;，
       如果想使用&lt;span class="n"&gt;RIGHT&lt;/span&gt; &lt;span class="n"&gt;JOIN&lt;/span&gt;，那么只能使用数组定义，并且必须写清&lt;span class="n"&gt;RIGHT&lt;/span&gt; &lt;span class="n"&gt;JOIN&lt;/span&gt;
&lt;span class="n"&gt;where&lt;/span&gt; 指定查询条件&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;where&lt;/span&gt;可以多说点，功能很多。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;首先说最简单的字符串查询，直接执行就OK了。
使用数组指定查询条件。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$&lt;span class="n"&gt;whereArr&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &amp;quot;&lt;span class="n"&gt;account&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;tdweb&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt;
    &amp;quot;&lt;span class="n"&gt;home&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;China&lt;/span&gt;&amp;quot;
&lt;span class="p"&gt;);&lt;/span&gt;
$&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &amp;quot;&lt;span class="n"&gt;where&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;$&lt;span class="n"&gt;whereArr&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
$&lt;span class="n"&gt;Dao&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;$&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样默认是查询&lt;code&gt;SELECT * FROM &lt;code&gt;test&lt;/code&gt; WHERE ( &lt;code&gt;account&lt;/code&gt; = 'tdweb' ) AND ( &lt;code&gt;home&lt;/code&gt; = 'China' )&lt;/code&gt;是查询相等条件的。
那如果我想查询like条件怎么办？
解决方法之一是定义LIKE_MATCH_FIELDS配置，这里指明要进行like查询的字段。现在我们稍微改下程序。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;testDb&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;LIKE_MATCH_FIELDS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;account&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;);&lt;/span&gt;  
    $&lt;span class="n"&gt;Dao&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;Test&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;);&lt;/span&gt;  
    $&lt;span class="n"&gt;whereArr&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;  
    &amp;quot;&lt;span class="n"&gt;account&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;tdweb&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt;  
    &amp;quot;&lt;span class="n"&gt;home&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;China&lt;/span&gt;&amp;quot;  
&lt;span class="p"&gt;);&lt;/span&gt;  
$&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;  

&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;$&lt;span class="n"&gt;Dao&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;$&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;  
&lt;span class="n"&gt;echo&lt;/span&gt; $&lt;span class="n"&gt;Dao&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;getLastSql&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;得到的SQL就是&lt;code&gt;SELECT * FROM &lt;code&gt;test&lt;/code&gt; WHERE ( &lt;code&gt;account&lt;/code&gt; LIKE '%tdweb%' ) AND ( &lt;code&gt;home&lt;/code&gt; = 'China' )&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;接着，可以看如下代码&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;testDb&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
    $&lt;span class="n"&gt;Dao&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;Test&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;);&lt;/span&gt;  
    $&lt;span class="n"&gt;whereArr&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;  
    &amp;quot;&lt;span class="n"&gt;account&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;eq&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;tdweb&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;),&lt;/span&gt;  
    &amp;quot;&lt;span class="n"&gt;home&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;like&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt;&amp;quot;&lt;span class="c"&gt;%Chi%&amp;quot;),  &lt;/span&gt;
    &amp;quot;&lt;span class="n"&gt;age&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;between&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt;&amp;quot;1&lt;span class="p"&gt;,&lt;/span&gt;3&amp;quot;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="p"&gt;);&lt;/span&gt;  
$&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;  
    &amp;quot;&lt;span class="n"&gt;where&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;$&lt;span class="n"&gt;whereArr&lt;/span&gt;  
&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;$&lt;span class="n"&gt;Dao&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;$&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;  
&lt;span class="n"&gt;echo&lt;/span&gt; $&lt;span class="n"&gt;Dao&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;getLastSql&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里的$whereArr定义为一个二级数组，没一个字段都定义了一个数组，这样可以支持更高级复杂的查询。
其中支持的关键字：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;EQ&lt;/span&gt; 相等  
&lt;span class="n"&gt;NEQ&lt;/span&gt; 不相等  
&lt;span class="n"&gt;GT&lt;/span&gt; 大于  
&lt;span class="n"&gt;EGT&lt;/span&gt; 不大于  
&lt;span class="n"&gt;LT&lt;/span&gt; 小于  
&lt;span class="n"&gt;ELT&lt;/span&gt; 不小于  
&lt;span class="n"&gt;NOTLIKE&lt;/span&gt; 不相似  
&lt;span class="n"&gt;LIKE&lt;/span&gt; 相似  
&lt;span class="n"&gt;NULL&lt;/span&gt; 空  
&lt;span class="n"&gt;NOTNULL&lt;/span&gt; 不为空  
&lt;span class="n"&gt;EXP&lt;/span&gt; 使用自己写的表达式
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上述内容还需消化。。&lt;/p&gt;</summary><category term="ThinkPHP"></category></entry><entry><title>补习一下开源软件协议的知识</title><link href="http://hackecho.com/2011/04/open-source-knowledge/" rel="alternate"></link><updated>2011-04-02T19:03:06-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-04-02:2011/04/open-source-knowledge/</id><summary type="html">&lt;p&gt;近日接触到很多开源的东西，都有各自的开源协议。记得以前Linux操作系统老师讲过一些，但已记不大清楚。为了更好的使用这些开源软件，只好再补习一下了。&lt;/p&gt;
&lt;p&gt;下面只是一些常见的协议，具体的详解请参照&lt;a href="http://www.opensource.org/licenses/alphabetical"&gt;http://www.opensource.org/licenses/alphabetical&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mozilla Public License&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MPL License，允许免费重发布、免费修改，但要求修改后的代码版权归软件的发起者。这种授权维护了商业软件的利益，，它要求基于这种软件得修改无偿贡献版权给该软件。这样，围绕该软件得所有代码得版权都集中在发起开发人得手中。但MPL是允许修改，无偿使用得。MPL软件对链接没有要求。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BSD开源协议&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;BSD开源协议是一个给于使用者很大自由的协议。可以自由的使用，修改源代码，也可以将修改后的代码作为开源或者专有软件再发布。 当你发布使用了BSD协议的代码，或则以BSD协议代码为基础做二次开发自己的产品时，需要满足三个条件：&lt;/p&gt;
&lt;p&gt;1． 如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的BSD协议。&lt;/p&gt;
&lt;p&gt;2． 如果再发布的只是二进制类库/软件，则需要在类库/软件的文档和版权声明中包含原来代码中的BSD协议。&lt;/p&gt;
&lt;p&gt;3． 不可以用开源代码的作者/机构名字和原来产品的名字做市场推广。&lt;/p&gt;
&lt;p&gt;BSD代码鼓励代码共享，但需要尊重代码作者的著作权。BSD由于允许使用者修改和重新发布代码，也允许使用或在BSD代码上开发商业软件发布和销售，因此是对商业集成很友好的协议。而很多的公司企业在选用开源产品的时候都首选BSD协议，因为可以完全控制这些第三方的代码，在必要的时候可以修改或者二次开发。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Apache Licence 2.0&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Apache Licence是著名的非盈利开源组织Apache采用的协议。该协议和BSD类似，同样鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再发布(作为开源或商业软件)。需要满足的条件：&lt;/p&gt;
&lt;p&gt;1． 需要给代码的用户一份Apache Licence&lt;/p&gt;
&lt;p&gt;2． 如果你修改了代码，需要再被修改的文件中说明。&lt;/p&gt;
&lt;p&gt;3． 在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。&lt;/p&gt;
&lt;p&gt;4． 如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache Licence。你可以在Notice中增加自己的许可，但不可以表现为对Apache Licence构成更改。&lt;/p&gt;
&lt;p&gt;Apache Licence也是对商业应用友好的许可。使用者也可以在需要的时候修改代码来满足需要并作为开源或商业产品发布/销售。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GPL&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GPL许可证是自由软件的应用最广泛的软件许可证，人们可以修改程式的一个或几个副本或程式的任何部分，以此形成基於这些程式的衍生作品。必须在修改过的档案中附有明显的说明：您修改了此一档案及任何修改的日期。 您必须让您发布或出版的作品，包括本程式的全部或一部分，或内含本程式的全部或部分所衍生的作品，允许第三方在此许可证条款下使用，并且不得因为此项授权行为而收费。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LGPL&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Linux就是采用了GPL。GPL协议和BSD, Apache Licence等鼓励代码重用的许可很不一样。GPL的出发点是代码的开源/免费使用和引用/修改/衍生代码的开源/免费使用，但不允许修改后和衍生的代码做为闭源的商业软件发布和销售。这也就是为什么我们能用免费的各种linux，包括商业公司的linux和linux上各种各样的由个人，组织，以及商业软件公司开发的免费软件了。&lt;/p&gt;
&lt;p&gt;GPL协议的主要内容是只要在一个软件中使用(“使用”指类库引用，修改后的代码或者衍生代码)GPL协议的产品，则该软件产品必须也采用GPL协议，既必须也是开源和免费。这就是所谓的”传染性”。GPL协议的产品作为一个单独的产品使用没有任何问题，还可以享受免费的优势。&lt;/p&gt;
&lt;p&gt;由于GPL严格要求使用了GPL类库的软件产品必须使用GPL协议，对于使用GPL协议的开源代码，商业软件或者对代码有保密要求的部门就不适合集成/采用作为类库和二次开发的基础。&lt;/p&gt;
&lt;p&gt;其它细节如再发布的时候需要伴随GPL协议等和BSD/Apache等类似&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Public Domain&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;公共域授权。将软件授权为公共域，这些软件包没有授权协议，任何人都可以随意使用它。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;zlib/libpng&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;只要不误传该软件的起源并保留原始发布的公告，任何人可以以任何目的使用该软件，包括商业应用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Artistic许可&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使作者保持对进一步开发的控制。&lt;/p&gt;</summary><category term="开源协议"></category></entry><entry><title>用HP Scrawlr检测数据库SQL注入漏洞</title><link href="http://hackecho.com/2011/03/sql-injection-with-hp-scrawlr/" rel="alternate"></link><updated>2011-03-30T22:32:33-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-03-30:2011/03/sql-injection-with-hp-scrawlr/</id><summary type="html">&lt;p&gt;您需要是不是正要检测在线数据库的漏洞呢？正好，HP为我们提供了一个免费工具来检测网站是否存在SQL注入漏洞。HP Scrawlr能够爬行您的站点，以查找代码中的安全漏洞。这款软件是免费的，并且很容易上手。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;引言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SQL数据库是目前世界上最快的一种数据库，每秒钟可以完成数百万次的事务处理。使用PHP和ASP代码处理SQL连接的时候，如果代码写的不好的 话，就会为网站的安全留下隐患：黑客可以通过插入代码来获得您的服务器上数据库的控制权。所以，一定要保护好您的SQL数据库。测试软件和网络的安全性应 该成为安全审计的一部分。HP为我们提供了扫描网站的SQL漏洞的免费软件。Scrawlr只可用于合法地扫描您自己的站点，而不得用于您的组织之外的站 点。安全分析人员进行渗透测试时，应当将这款软件也纳入到他们的安全工具库中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HP Scrawlr&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hewlett  Packard公司提供了一款免费的工具，供人们用来爬行他们的站点，并从中查找安全漏洞。Scrawlr是由HP的web安全研究团队开发的，可用于对 单独的网页进行SQL注入漏洞的检测和利用。这个程序运行速度非常快；在运行期间，它可以利用HP的智能引擎技术来创建和动态执行SQL注入。最后，它还 能提高一份简单的报告来供管理员分析有关结果。如果该程序成功的话，您就会看到数据库和各种表。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scrawlr&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面是Scrawlr的两个截图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://images.51cto.com/files/uploadimg/20091009/1527390.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://images.51cto.com/files/uploadimg/20091009/1527391.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQL注入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;黑客可以使用简单的SQL命令来进行插入、删除操作，甚至能控制整个数据库。黑客可以先在web中查找数据库，然后通过简单的注入命令来返回机密数据，并将其复制粘贴到自己的机器中。下面是一个简单的SQL注入范例：&lt;/p&gt;
&lt;p&gt;下面我们来绕过登录表单。这里是来自实际应用代码片段：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;SQLQuery&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;Username&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Users&lt;/span&gt; &lt;span class="n"&gt;WHERE&lt;/span&gt;
&lt;span class="n"&gt;Username&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; ‘&amp;quot; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;strUsername&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &amp;quot;‘ &lt;span class="n"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;Password&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; ‘&amp;quot; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;strPassword&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &amp;quot;‘&amp;quot;
&lt;span class="n"&gt;strAuthCheck&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GetQueryResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SQLQuery&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="n"&gt;strAuthCheck&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;&amp;quot; &lt;span class="n"&gt;Then&lt;/span&gt;
    &lt;span class="n"&gt;boolAuthenticated&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;Else&lt;/span&gt;
    &lt;span class="n"&gt;boolAuthenticated&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;End&lt;/span&gt; &lt;span class="n"&gt;If&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这是一个典型的登录处理，终端用户来到站点，然后提交他们的用户名和口令。随后，这个查询从“Users”表中寻找是否有与提供的用户名和口令匹配的记录。对于糟糕的ASP代码或者PHP代码，黑客将能使用下列类型的代码来发动进攻。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注入代码：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;用户名：‘ &lt;span class="n"&gt;OR&lt;/span&gt; ‘‘&lt;span class="p"&gt;=&lt;/span&gt;‘
口令：‘ &lt;span class="n"&gt;OR&lt;/span&gt; ‘‘&lt;span class="p"&gt;=&lt;/span&gt;‘
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这个会使SQLQuery变成下面的样子：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;Username&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Users&lt;/span&gt; &lt;span class="n"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;Username&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; ‘‘
&lt;span class="n"&gt;OR&lt;/span&gt; ‘‘&lt;span class="p"&gt;=&lt;/span&gt;‘‘ &lt;span class="n"&gt;AND&lt;/span&gt;
&lt;span class="n"&gt;Password&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; ‘‘ &lt;span class="n"&gt;OR&lt;/span&gt; ‘‘&lt;span class="p"&gt;=&lt;/span&gt;‘‘
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样，黑客只是在应该输入有效用户名的地方键入了一个字符串：‘ OR ‘‘=‘，就轻而易举地绕过了登录屏。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;结束语&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;执行SQL注入的方法数以千计，这里介绍的并不是理想的“黑客”代码。本文不是关于黑客技术的，而是关于如何保护您的网站的。  HP只是众多能够保护您的网站中的工具之一。对于保护您的信息资产来说，渗透测试是一种重要的手段。它不仅有助于测试代码，而且还能帮您测试防火墙。不过 Scrawlr软件也有其不足之处，例如：&lt;/p&gt;
&lt;p&gt;•最多只能爬行1500个URL地址&lt;/p&gt;
&lt;p&gt;•在爬行期间无法进行脚本解析&lt;/p&gt;
&lt;p&gt;•在爬行期间无法解析Flash&lt;/p&gt;
&lt;p&gt;•在爬行期间无法提交表单&lt;/p&gt;
&lt;p&gt;•仅有简单的代理支持&lt;/p&gt;
&lt;p&gt;•没有身份验证或者登录功能&lt;/p&gt;
&lt;p&gt;•不能检测SQL盲注&lt;/p&gt;
&lt;p&gt;任何软件都不是十全十美的，但是它们对于安全漏洞和漏洞利用测试来说确实是非常有帮助的。如果站点仅通过了一种安全软件的测试，就以为高枕无忧那就太盲目了。感谢HP有为我们带来了一个软件“帮手”！&lt;/p&gt;</summary><category term="SQL"></category></entry><entry><title>我的青春，你来过 - 【转自豆瓣】</title><link href="http://hackecho.com/2011/03/you-were-in-my-youth/" rel="alternate"></link><updated>2011-03-29T18:05:43-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-03-29:2011/03/you-were-in-my-youth/</id><summary type="html">&lt;p&gt;伴着一阵阵隐隐的心痛，看完了《致我们终将逝去的青春》。泪眼朦胧的挥别了郑微，挥别了年少时的那个“玉面小飞龙”。我知道她们终将要离开我，一转身，便是个诀别，今后都不会再见。即使多年后的梦里，当我们再次遇见那个曾经深深爱过的陈孝正，也只能说一声，我们再也回不去了，对不对？&lt;/p&gt;
&lt;p&gt;青春终将腐朽，曲终人散时，才发现爱是那样铭心，而伤害却也同样刻骨。那个曾经如此飞扬跋扈的小飞龙，那个曾经如此孤傲冷峻的阿正，那棵老槐树，那本《安徒生童话&amp;gt;&amp;gt;,那场7年的失约，那个陪你一起走过青春的阮阮，那个一生中最亮的月光，统统都将被埋葬。&lt;/p&gt;
&lt;p&gt;正如故乡是用来怀念的，青春就是用来追忆的，当你怀揣着它时，它一文不值，只有将它耗尽后，再回过头看，一切才有了意义――爱过我们的人和伤害过我们的人，都是我们青春存在的意义。&lt;/p&gt;
&lt;p&gt;每个人或多或少都可以在郑微身上找到自己当年的影子，每个年轻的女孩都会遇到自己生命中的阵孝正，而每一个陈孝正都要在经历过失去后才会蜕变成林静，而每个郑微在长大后都知道林静才是最终最好的选择。&lt;/p&gt;
&lt;p&gt;成长的代价就是要失去一些东西，而那些东西当时不觉得有什么珍贵，若干年后，过尽千帆才明白这些将不会在以后的人生路上再次出现。可是没关系，每个人的成长之路都是如此，但愿我们失去后会懂得好好珍惜现在所拥有的一切，因为那些都是用青春，用眼泪，用心碎换来的。在未来的日子里，有过去的记忆温暖于心，甜蜜也好，痛苦也罢，都是存在过的证据。我的青春，你来过。虽然没有陪我走下去，但我是如此庆幸，在我一生中最美好的时光里，有你来过的痕迹，久久都不曾退去。这就够了。希望你日后想起，也会会心一笑，我们曾经的傻气。&lt;/p&gt;
&lt;p&gt;写到这里，泪水早已落下。我的青春年华，我的欢声笑语，我的誓言哭泣，我的伤痕累累，我的诀别离去，如同一幕幕黑白电影，慢慢变得清晰，再慢慢得灰飞烟灭。过去是如此的浓墨重彩，如今看来却只剩黑白。&lt;/p&gt;
&lt;p&gt;有人说我们的青春，并非说的是郑微，陈孝正和林静。而是指微微，阮阮，还有朱小北她们。见仁见智的问题。其实，谁没有过青春，就连许正阳回忆起自己的青葱岁月，也可以骄傲的说，当年我是如此的爱微微。还有老张，如此默默的感情，没有张扬，只有等待和祝福，又何尝不是另一种美好的青春呢？还是那句话，有谁没有过青春呢？又有谁的青春不会逝去呢？&lt;/p&gt;
&lt;p&gt;网上有人偏爱阮阮，那样的女孩，我想是大多数人喜欢的吧。爱情在她心里，是绚烂的烟花，一次就耗尽了生命，但是谁又有勇气抵挡那花开般的美丽呢？&lt;/p&gt;
&lt;p&gt;我想，我要去买书。在书的扉页写上“献给我已经腐朽的青春”。若我以后生个女儿，在她十八岁的时候，我会把书送给她，然后告诉她，我曾经爱过谁，又伤害过谁。&lt;/p&gt;
&lt;p&gt;致我们终将逝去的青春。&lt;/p&gt;
&lt;p&gt;【转自豆瓣】&lt;/p&gt;</summary><category term="青春"></category></entry><entry><title>如何分辨极客与伪极</title><link href="http://hackecho.com/2011/03/how-to-recognize-false-geek/" rel="alternate"></link><updated>2011-03-26T18:37:31-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-03-26:2011/03/how-to-recognize-false-geek/</id><summary type="html">&lt;p&gt;有着非常强健的体魄，或者非常专业的某项体育技能的，100%不是极客。极客没有时间也没有兴趣刻意锻炼身体。身体非常虚弱的，100%不是极 客，70%是伪极，呆极客或者宅。极客虽然不会进行长期稳定的体育运动，但是他们享受户外的活动。绝不会始终宅在家里。所以身体一定是健康的，却不是好坏 两个极端。&lt;/p&gt;
&lt;p&gt;不戴眼镜的，100%不是极客。&lt;/p&gt;
&lt;p&gt;出门站在衣柜犹豫不知穿什么衣服的，80%不是极客。极客们讲求效率，不会在穿衣戴帽等事情上浪费时间。另一方面，他们也没有太多的衣物供不同场合的选择。出门随手拽两件衣服披上就走的，90%是极客。&lt;/p&gt;
&lt;p&gt;拥有一辆不错的个人车的，70%不是极客。极客开车的机会不多，也不会下血本买费钱费油的好车。&lt;/p&gt;
&lt;p&gt;酒量特别好的，100%不是极客。极客们饮酒的机会不多。不过由于常常帮朋友修理电脑导致被请客在外就餐的机会也不少，所以酒量比宅要高很多。&lt;/p&gt;
&lt;p&gt;经常哭穷的，100%不是极客。极客们手头都是相对宽裕的。他们的心态比较中置，对于不同的家庭背景或者收入状况不会加以打击或者憧憬，因为他们所追求的不是纯物质生活，更多的在于精神上。他们自己的经济条件完全可以覆盖他们的支出，所以经常抱怨富二代的，90%是伪极。&lt;/p&gt;
&lt;p&gt;掌握多门外语的，80%是极客。原因是先进的技术等他们感兴趣的东西大多来自不同的国家，第一手掌握的消息往往都是外语的文章。这迫使他们潜移默化 的接触外语，从而提高了自己的外语水平；同时，受过高等教育的他们往往喜欢做一些利于别人的无偿的翻译工作。掌握多门外语同时有过从事无偿翻译工作经历 的，90%是极客。只掌握部分特定场合使用的日语（类似于一代以及雅蠛蝶）是宅的几率达到100%。&lt;/p&gt;
&lt;p&gt;声称能帮你盗号的，100%不是极客。80%是伪极。凭借现在的互联网安全背景来看，能凭借木马病毒钓肉鸡骗取账号密码的，只有专搞破坏的骇客 （hacker）。真正的极客不屑于从事破坏活动。他们关心的是如何进一步巩固互联网安全。如果声称能帮你加强计算机安全或者通过长篇大论给你普及安全意 识的，100%是极客。&lt;/p&gt;
&lt;p&gt;玩网络游戏的，诸如WOW或者EVE的，100%不是极客。极客绝对喜欢玩游戏，同时也会拥有移动或者家用主机，但是绝对不会玩儿需要大量精力和时间的游戏。包括DoTA。所以，玩深度游戏却自称极客的人，100%是伪极。&lt;/p&gt;
&lt;p&gt;帮你修理电脑，结果看都不看直接告诉你重装系统的，70%是伪极。能够帮你弄好电脑并且告诉你哪个硬件需要升级的，90%是极客。&lt;/p&gt;
&lt;p&gt;使用两个显示器分屏显示的，60%是极客。超过三个显示器的，80%是伪极，100%是富二代的宅或者呆极客。&lt;/p&gt;
&lt;p&gt;拥有个人互联网站点的（并非托管型博客类似于新浪百度等等）80%是极客。使用WordPress平台构建站点的，90%是极客。&lt;/p&gt;
&lt;p&gt;使用Android或者iOS等平台的手机（勉强包括MeeGo以及黑莓RIM等），那么他有80%以上的可能性是极客或者呆极客。使用诺基亚s60等系统的，100%不是极客。&lt;/p&gt;
&lt;p&gt;用上网本的，100%不是极客。极客要求的是效率和速度，上网本绝对会让他们发疯。出门背着超过两公斤的电脑和相关装备的，90%是极客。带着硬盘以及移动电源一起出门的，100%是呆极客。&lt;/p&gt;
&lt;p&gt;查看他的个人电脑，使用Chrome或者FireFox浏览器的，80%是极客。浏览器中插件数量多于5个的，这个百分比提升到90%。插件多于20个的，90%是伪极或者呆极客。使用IE，360，腾讯TT等浏览器的，100%不是极客。&lt;/p&gt;
&lt;p&gt;查看他们的书签，其中包含瘾科技或者cnBeta之类的业界新闻网站的，80%是极客。有一本道草榴小狼窝之类的网站书签并拥有账号的，100%是伪极或者宅。&lt;/p&gt;
&lt;p&gt;查看他的软件版本，有很多beta版本的，是极客的可能性很高。Beta版多于stable版本的，是伪极的几率比较高。使用苹果 MacOS，Linux以及衍生系统ubuntu等等操作系统的，80%是极客或者呆极客。同时使用Windows系统作为主要系统的，不是极客的几率增 加。如果在MacOS或linux系统下安装了VM等虚拟windows使用的，90%是极客。查看他的硬件，使用7200转以上的机械硬盘的，40%是 极客。使用混合硬盘的，几率提高到60%。使用性价比高的固态硬盘的，100%是极客。使用最高端和昂贵的固态硬盘的，80%是伪极，100%是富二代或 者呆极客。硬盘里面拥有诸多1080p和720p大片片源的，60%是极客。拥有大量高清日本爱情动作片的，100%是宅。（因为极客的片子普通人找不 到）硬盘中充斥大量动画片的，100%是宅。70%是伪极。&lt;/p&gt;
&lt;p&gt;经过前文以及上面的描述的排查，如果你发现你的生活中真的有这么一位极客朋友，那么恭喜你，你有着别人无法比拟的精神财富。你现在和以后要做的是， 多邀请他一起吃饭一起旅行，在精神和物质上对其无微不至的照料，争取通过一切手段维护并且发展你们之间的友谊，比如经常来往，经常送他礼物之类。&lt;/p&gt;
&lt;p&gt;当然，没有人一出生就是极客；所谓的极客也是通过后天的兴趣培养出来的。所以，遇到伪极不要打击或者挖苦，你要做的是耐下心来鼓励他，帮助他转职成为一名准极客，甚至真正的极客。&lt;/p&gt;</summary><category term="极客"></category></entry><entry><title>近日小记</title><link href="http://hackecho.com/2011/03/my-recent-life-notes/" rel="alternate"></link><updated>2011-03-26T00:33:59-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-03-26:2011/03/my-recent-life-notes/</id><summary type="html">&lt;p&gt;有一段时间没更新博客了，主要是这段时间全部心思都在知行客团购网上。那天晚上，脑海中突然闪现出这样一个想法，便激动地无法入眠。以前也有过很多次灵感的爆发，比如今年寒假时想到的“优惯网”创意。当时我在微博上说，每天一觉醒来，上网一看，我的想法还没有人实现，便又可以安心地度过一天了。可当时忽略了重要的一点，就是执行力的问题。这也是后来在一次创新工场的宣讲会上我学习到的，执行力永远是第一位。当时有很多同学支持我，我很感动，不过，优惯网流产了，终究现在没有出现。至于将来会不会出现，我们可以wait and see，呵呵。&lt;/p&gt;
&lt;p&gt;想到“知行客团购网”时，我给自己下了一个目标，从网站策划，到域名和服务器以及网站程序的到位，最后到联系商家，上线第一个产品的时间，一定要控制在10天之内。如今，刚刚正好12天，商家已经初步到位，预计近一周内一定上线。鉴于所有的工作都是在课余时间完成的，所以我觉得，还行。我还有与我一同为这个网站努力的同伴，在这个过程中，收获的绝不仅仅是一个网站。&lt;/p&gt;
&lt;p&gt;细细数来，还有四个近在眼前的各类软件比赛摆在面前。3天后新软攀峰，一个月后百度PM大赛，海云天杯，还有需要我们一个小组共同完成的星巴克环保项目。哦忘了，还有我们的数据库大作业...如果放在以前，这样数来一定会数崩溃的，而现在，我不是一个人在战斗，有些比赛获奖与否已经不重要，重要的是过程。&lt;/p&gt;
&lt;p&gt;感觉时间过的好快，每天有做不完的事儿。YP前几天说心情好烦，却不知道烦得究竟是什么。我说有什么好烦的，生活多美好！其实我理解，有些时候，我们有种感觉，自己好像长大了，再也回不到小时候无忧无虑的时代了。我们的心开始有了牵挂：家人、事业、未来。有时候看着镜子里的自己，不禁会问自己：还记的5年前镜子里的你吗？你们的区别在哪儿呢？有时候会感觉自己多了一些担当，自己不再是以前那个调皮的小孩子，闯了祸有父母保护，没了钱找父母要，犯了错也无所谓。肩上的责任有了分量，人也沧桑。&lt;/p&gt;
&lt;p&gt;准备写日志时无言以出，写到中间，想到了很多东西，但原谅我，朋友，我不能写出来，只能欲言又止。&lt;/p&gt;
&lt;p&gt;这几天想深入研究一下Wordpress，还有PHP，还有一软通特别版的开发。计划多多，不求自己能全部做到，只求做好，哪怕一部分。&lt;/p&gt;
&lt;p&gt;博客的主机换到了北京总参机房，总算结束了国外的流亡之路，不过转移过程中数据库出了点问题，没来得及修复。不久的将来会有一次博客调整，到时候一并解决吧。剧透一下，hackecho.com的一个兄弟网站快要上线了，目前在我本地PHP环境中孵化着呢~~还有苹果达人哦~~&lt;/p&gt;</summary><category term="生活"></category></entry><entry><title>戒掉Facebook的三十天后（附原文）</title><link href="http://hackecho.com/2011/03/30-days-after-no-facebook/" rel="alternate"></link><updated>2011-03-18T01:54:43-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-03-18:2011/03/30-days-after-no-facebook/</id><summary type="html">&lt;p&gt;&lt;strong&gt;下面是从无名处转来的一篇简单翻译后的文章，最后附有英文原版。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;注：Facebook：世界最大的社交网络，中国同类网站有人人网、开心网等。&lt;/p&gt;
&lt;p&gt;————————&lt;/p&gt;
&lt;p&gt;在这个社交网络泛滥的年代，朋友转发了一个博客链接，讲的是一个重度“脸书”用户“挑战自己”，决定停用这个社交网络平台，并且记录下自己的心得体会。有很多有意思的观点，有些直指这个“最牛浪费时间机器”（world’s biggest time sink）的痛处。原文很长，并且不可否认，作者的有些观点，连我都持保留性意见。根据曾经的师太在康大研究网络交流的一些经验，有些还是以偏概全了，所以只是节选了一些有意思的词句，就不逐句翻译了。&lt;/p&gt;
&lt;p&gt;————————&lt;/p&gt;
&lt;p&gt;终于完成了这个“离开Facebook”三十天的计划！在过去的两年里，我一直是Facebook的忠实用户。我不能保证，在过去的这三十天里，我所有的感悟都能够引起你的共鸣，但愿某些共通之处，会引发你的思考。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Facebook上的交流通常都是都是“次重要的”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我意识到当我停止使用Facebook后，生活中的交流量（communication volume）大幅减少，但是那些重要的有意义的交流却没有受到影响，丢失的那些，在我看来，其实是写噪声（noise）。&lt;/p&gt;
&lt;p&gt;坦诚的说，Facebook上的交流是浅层次的。你可能会阅读成百上千的并无太深层次的朋友们写的状态消息，大多数内容都是无聊并且没什么意义的。Facebook在情感上造成这种“你在于你的朋友保持联络，建立感情”的假象，但实际上，你只是在浪费时间。某些状态消息的确是诙谐或者机智（witty）的，但没有什么是会改变你生活的。阅读这些状态消息的确会让你与你的朋友圈，这个世界，有一种连续性的“保持联系”的快感，但长期和深远的影响则微乎其微。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你需要为冲动型分享（impulse sharing）付出代价&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;刚离开Facebook的时候，我总有冲动想要分享我在某刻的所思所想，或者贴出一张有意思的照片。过去，每当我分享一些我生活的片段，我会不断的回头check，看看有谁回复了，引发了什么有有意思的对话，我是不是要进一步回复…&lt;/p&gt;
&lt;p&gt;当我的生活中没有了Facebook，我必须强迫自己让这些情绪自然而然的消退（come and go）。我会感到失望，失望可能会看到这些文字或者图片的朋友们，会有怎样有趣的反应和回复。&lt;/p&gt;
&lt;p&gt;但从另一个角度想想，我放下了这种虚无的跨空间“联系感”，我更加专注于我眼前所做的事情，并能更好的心无旁贷的与我眼前的朋友们交流。这样的变化是缓慢的，需要一段时间才能体会到。&lt;/p&gt;
&lt;p&gt;我感觉我从前的生活，过多的被这种虚无的联系感锁牵绊和制约，我因为失望看不到我的朋友给我的回复（有些人甚至都不是我的朋友，不过是陌生人而已），所以“迫使”我要不断的分享我现在生活的状态，这股力量推使着我无法专心于眼前的生活。现在，是时候夺回主动权，让我来理智的选择我生活的方式了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;朋友们不再是有个性的个体，他们变成了一个整体&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Facebook让我觉得我的一个一个立体鲜明的朋友变成了一个网络，一整版的“新鲜事”，一个没有个性的群体。当我更新状态的时候，我到底是在和谁说话呢？是哪个特定的朋友吗，不是，是这个整体。&lt;/p&gt;
&lt;p&gt;我甚至感到惊奇，在离开Facebook的这些日子里，我其实有多么“不留恋”我在Facebook上的那些朋友，因为对于我而言，他们不是一个个独立的个体，不过是一团模糊的概念，我甚至都不知道和我失去联系的到底是五个，七个还是十几个朋友，我并没有特别的想念其中的一个或者几个。&lt;/p&gt;
&lt;p&gt;对于那些，我至少在现实生活中说过话的朋友，我可能会有些想念，但我并不需要用FB来保持和那些“真实朋友”的联系，我可以打电话，面对面聊天，出来和他们吃饭，所以我也并不觉得离开了Facebook，就是离开了他们。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Facebook造成了一种虚假的并且满意度不高的社交体验&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我总是希望有一个“独处”和“群居”的平衡，也就是说，当我一个人宅太久的时候，我会希望和朋友们见见面，但当连续几晚都party的话，我有希望花些时间一个人待在家里。那Facebook上的交流，是算一个人待在家里，还是算和朋友聚会呢？它让我觉得自己好像和朋友们在一起，但泡Facebook半天之后，我仍然觉得“社交饥渴”，希望有和朋友面对面的机会，同时，我又没有很好的利用我“独处”的时间，并没有把宝贵的时间花在和自己对话上，而是浪费在查看并且回复朋友们的状态上了。&lt;/p&gt;
&lt;p&gt;这就好比是，渴了，应该和白开水，却喝了咸水，当下觉得解渴，过后却更渴。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Facebook是电脑之间的交流，而不是人际交流&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;事实是，使用FB的过程，你不过是在用电脑，手机或者其他电子设备来输入或者输出无关紧要的信息罢了。&lt;/p&gt;
&lt;p&gt;下次在你想用FB的时候，好好想想，你到底在干什么，你周围有其他人吗，你在和他们说话吗，这个对提升你的生活质量有帮助吗，你期待这个从哪方面能够带动你前进，如果接下来的二十年你继续这样使用Facebook，你能想象后果是什么吗？&lt;/p&gt;
&lt;p&gt;面对面的人际交互有太多是网络交流所不能取代和比拟的，至少现在不行（btw，要是康大的杰夫和杰尔米同学要是看到这句话，要是整个CSCW的committee看到这句话，是会觉得要吐血而亡，还是任重道远呢…）&lt;/p&gt;
&lt;p&gt;笑容也不是笑容，拥抱也不是拥抱，一切只是你按了某个键而已。我觉得Facebook不是社交，不过是逃避真实社交的一种方式罢了。如果你要反对我说的这句话，那你就当面来跟我说吧，如果你只是通过打字，留言来告诉我这不正确，你不过是在支持我的论点而已。是的，我知道这很邪恶, XD&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;朋友并不是真的朋友&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;关于这一点，作者讲了很多他自己如何通过戒掉Facebook，从而返回到他自己感到舒服的社交圈里的故事，在这里不一一陈述，不过一个重要的观点是：&lt;/p&gt;
&lt;p&gt;有多少你在Facebook上交流得热火朝天的朋友，你可以在生活中和他们成为真正的朋友呢，你们到底有多少共通点，你们有多聊得来？真正想想这一点，你会发现，在Facebook上，你有多少“松散的”社会关系，那些你只见过一面的人，甚至你都没有见过面的人，都知道你周末去哪儿玩了，晚餐吃了什么，这样的真实社交和虚假社交的落差，你可以接受吗？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你不过只是上了瘾而已&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你在FB上交流最多的人，通常也是对Facebook上瘾比较重的人。他们频繁更新状态并且留言，因为他们在这个平台上花费了大量的时间，所以你看到的最多的信息也是来自于他们。简而言之，如果你和他们交流过多，这些非常没有工作效率，不重视自己时间，不为自己创造有效价值的人，会对你造成不好的影响，并最终也把你拽入这个浪费时间的深潭。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Facebook是一种懒惰的社交方式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;仅仅是打一些字，点击一些链接，你就认为你拥有了你希望的真实的社交生活了吗？你有多看重你在Facebook上建立的这些友谊和关系，你有多享受这样的交流过程，还是你只是懒惰甚至是逃避可能的面对面的社交场合，通过网络交流来填补自己空虚的内心？（哇，作者这里讲得也太狠了点儿吧 呵呵）&lt;/p&gt;
&lt;p&gt;除了Facebook，你还可以做什么？&lt;/p&gt;
&lt;p&gt;你可以去看看演出，和朋友吃吃饭，认识一些陌生的新的朋友，即使你会紧张，但你可以通过练习来让自己更自然。&lt;/p&gt;
&lt;p&gt;是时候来好好审视一下你在Facebook上花的时间是否给你带来了有效果有意义有回报的交流体验和人际关系价值了，这些有没有帮助你巩固某些关系，让你得到有益的启示和教导，还是只是让你和一群无所事事的人一起每天无所事事？你可能会交到一些有意思的朋友，但那些远远比不上你所浪费的时间。&lt;/p&gt;
&lt;p&gt;的确，面对面的交流对你的社交技巧的要求更高。如果你不是一个擅长交流的人，你可能可以在网络上扮演这样一个“聊得来”的角色，但长期看来，你仍然得不到任何现实生活中社交技巧的提升。&lt;/p&gt;
&lt;p&gt;———————–&lt;/p&gt;
&lt;p&gt;当然，作者最终的结论是，他永远不会重返Facebook了。&lt;/p&gt;
&lt;p&gt;那你呢？&lt;/p&gt;
&lt;p&gt;————————&lt;/p&gt;
&lt;p&gt;原文：&lt;/p&gt;
&lt;p&gt;It’s been about 30 days since I quit Facebook, so I wanted to share an update on what that’s been like. Many others also quit the service last month, and many more are on the fence as to whether they should do the same.&lt;/p&gt;
&lt;p&gt;Here are some realizations I’ve had as a result of leaving Facebook after 2+ years as an active user. I’m sure some of these realizations can be generalized to social networking as a whole, but I’m going to focus mainly on my personal experience with Facebook. I can’t guarantee you’ll find much overlap between my realizations and your experiences, but I’m sure some people will see similar patterns.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Facebook communication is mostly low-priority noise.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When I dropped Facebook, I noticed that the communication volume in Life dropped significantly. However, I felt no drop in the level of significant and meaningful communication. What I seemed to lose was mostly a lot of noise.&lt;/p&gt;
&lt;p&gt;Generally speaking, communicating via Facebook is a shallow experience. You read streams of brief messages from a variety of people, but the messages don’t contain much depth. Most are trivial and mundane. Some are clever or witty. Very little of the information you’ll digest on Facebook is memorable and life-changing. Using Facebook can still give you a feeling of connectedness, but the long-term benefits are negligible.&lt;/p&gt;
&lt;p&gt;Facebook essentially gives you the emotional sense that you’re doing something worthwhile (i.e. connecting with people), but when you step back and look at your actions and results from a more objective perspective, it becomes clear that you’re really just spinning your wheels.&lt;/p&gt;
&lt;p&gt;Consequently, when I dropped Facebook, I let go of a lot of trivial communication, but I don’t have the sense that anything truly valuable has been lost.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Impulse sharing comes with a price.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In the weeks after quitting Facebook, I still felt the urge to share certain things with my online “friends”. I’d have a clever thought and feel, I should post this.Or I’d take a really cool photo and think, I ought to share this.&lt;/p&gt;
&lt;p&gt;In the past I’d have shared those tidbits out of habit. Then I’d check back in later and read through a few dozen comments people left. And there would be a little emotional reward in having that sense of connection.&lt;/p&gt;
&lt;p&gt;But without the option to impulse-share during the past 30 days, I allowed those feelings to come and go without acting on them. I noticed that there was a consequence to sharing in real-time. I wasn’t being very present in the moment. While things were happening around me, I was off thinking about my online posse and what I might wish to share with them.&lt;/p&gt;
&lt;p&gt;When I stopped acting on the desire to impulse-share, I become more present to what I was doing in the moment. Instead of being distracted by thoughts of connecting with people at a distance, I did a better job of connecting with the people right in front of me. I felt more immersed in my experiences. That was a subtle change at first, but it feels good.&lt;/p&gt;
&lt;p&gt;During the past two years, I’d often feel obligated to share frequent updates with my online “friends”, most of whom I’d never met in person. If I didn’t post an update for a while, some would complain. If I shared something cool, people would thank me for it.&lt;/p&gt;
&lt;p&gt;Now that I’ve been rolling back this conditioning, I can see what a dead end it’s been. I allowed social media to condition me to behave a certain way, but it’s not a conscious choice I would have made otherwise. So it’s nice to regain conscious control over this part of Life.&lt;/p&gt;
&lt;p&gt;Even after 30 days, the desire to impulse-share is still there, but it’s growing fainter, replaced by a growing desire to “be here now,” fully present in what’s going on in front of me. I still like sharing, but it’s better to do so thoughtfully instead of impulsively.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Friends lose their individuality and become part of a collective.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Facebook compacts so much communication into a single stream, and this can have a depersonalizing effect. As I continued to use the service to interact with people en masse, I gradually began thinking of my online friends as a network, stream, or blob, as opposed to valuing each person as a unique individual.&lt;/p&gt;
&lt;p&gt;When I’d post a status update, who was the intended recipient? Which friend was I updating? In truth I wasn’t sharing with anyone in particular. I was simply sharing with the collective.&lt;/p&gt;
&lt;p&gt;If I posted something on a friend’s wall, I wasn’t just communicating with that friend. I was communicating with their posse too. If I used the private messaging feature, it was just one message among dozens. Friends were becoming like interchangeable drones.&lt;/p&gt;
&lt;p&gt;One thing that surprised me was just how few of my Facebook friends I actually missed when I left the service. It was difficult to think of my old Facebook friends as individuals. They were all just part of the collective whole. When I unplugged from the collective, it wasn’t like I’d lost any individual friends. I can barely remember the names of all the people I used to connect with there. I’d already lost the ability to distinguish Third of Five from Seven of Nine.&lt;/p&gt;
&lt;p&gt;Dropping Facebook wasn’t at all like disconnecting from hundreds of individual friends. I didn’t miss anyone in particular because my Facebook experience was like connecting with a collective. I noticed the absence of the collective when I left, but I didn’t miss it per se.&lt;/p&gt;
&lt;p&gt;The exception is that if I knew specific Facebook friends from real life, meaning that we’d met in person and had at least one good conversation together, then I could still see them as individuals. But I don’t need Facebook to stay in touch with those people anyway, so I didn’t feel like I was losing any of these connections by dropping Facebook.&lt;/p&gt;
&lt;p&gt;I realize this might sound rather strange, but it’s the best I can explain it. My Facebook page was maxed out at 5K friends and was very active. If I’d only had 50-100 friends, then it might not have felt like I was interacting with a collective.&lt;/p&gt;
&lt;p&gt;The feeling that I was interacting with a collective began to feel rather creepy, as you might imagine. I’m glad to be off of Facebook, since I really don’t wish to be assimilated. It’s nice not to feel like there’s an endless stream of other people’s thoughts flowing through my mind all the time. I can hear my own thoughts once again, and they’re a lot more relaxed and coherent.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Facebook creates a false and unsatisfying sense of socializing.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I’m somewhere between an introvert and an extrovert. As a child I was very introverted. In kindergarten I was the kid who played in the sandbox all by himself. I don’t think I was lonely. I just found sand toys more interesting than people.&lt;/p&gt;
&lt;p&gt;As I aged, however, I gradually became more extroverted. Partly this was by choice. I pushed myself to develop my social skills and to embrace what I once avoided.&lt;/p&gt;
&lt;p&gt;It’s said that you’re an introvert if you recharge your batteries while being alone, and you’re an extrovert if you recharge in the company of others. That metaphor doesn’t seem to work for me though. I prefer balance, usually by taking turns. If I spend a lot of time alone, I feel a strong desire to go out and be social. But after a very social week, I feel the desire to retreat back to my cave and enjoy more solitary time.&lt;/p&gt;
&lt;p&gt;Being active on Facebook had the effect of filling my social bucket. But it was essentially a false fill, like drinking salt water instead of fresh water. Instead of providing a real sense of connection that satisfies, it made me think I was out there being social, but I’d still be “hungry” afterwards. Facebook activity could never recharge my batteries in the way that face to face interaction could.&lt;/p&gt;
&lt;p&gt;When I dropped Facebook, I began feeling genuinely more social when I’d go out. Even when running errands, I’d notice myself chatting and joking around with people more often. When I was active on Facebook, I wouldn’t do that as much because I had the false sense that I was being social by interacting with my online posse.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Facebook is computer interaction, not human interaction.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The reality of using Facebook is that you’re just typing and viewing insignificant bits of information on a digital device (computer, cell phone, iStuff, etc).&lt;/p&gt;
&lt;p&gt;The next time you use such a service, pause for a moment and do a reality check. What are you actually doing? Who’s with you? How is this advancing your life? What if you do this for 20 more years? What do you expect to gain from it?&lt;/p&gt;
&lt;p&gt;You can call it social networking, but it’s not really a social experience if you’re actually alone sitting at a computer. Real socialization is face to face.&lt;/p&gt;
&lt;p&gt;There’s a tremendous richness to in-person socialization that just doesn’t translate over the Internet, at least not yet.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;&lt;em&gt;hug&lt;/em&gt;&lt;/strong&gt; isn’t a real hug. A smiley isn’t a real smile. All you’re doing is pushing buttons.&lt;/p&gt;
&lt;p&gt;I’ll go so far as to say that Facebook isn’t social networking. It’s anti-social retreating.&lt;/p&gt;
&lt;p&gt;If you want to disagree with me about this, you’ll have say it to my face. If you try to tell me off by typing something on a digital device, you’re only proving me right. Evil, I know.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A friend isn’t necessarily a “friend”.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I can be friendly with people from all walks of life, but when it comes to which people are most compatible as my long-term friends, the Facebook pool isn’t a good fit for the kinds of lasting friendships I really wish to cultivate.&lt;/p&gt;
&lt;p&gt;The main issue is the age difference. Most of my Facebook friends were in their 20s. I’m sure that’s a big part of the service’s demographic. It’s also a big part of my blog’s readership, and many of my articles are targeted to the needs of that age group. I already have many friends in their 20s, but if I draw too many of my friends from this pool, it comes with a price.&lt;/p&gt;
&lt;p&gt;I can relate to what it’s like to be a 20-something these days, so I’m able to be a friend to someone in that age group, but it’s rare that such people are able to be a good friend to me. They simply don’t have the life experience to give the kind of value I gain from a good friendship.&lt;/p&gt;
&lt;p&gt;In your 20s it’s common to do a lot of soul-searching and experimenting to figure out what to do with your life. To get the career part of your life going well, you basically have to figure out 4 things: (1) what you can do to earn a good income, (2) what skills and talents you can develop to a high degree, (3) what you enjoy doing, (4) what you can contribute. It takes some effort to figure these out. Then it takes more effort to massage yourself into the area of intersection, such that you can earn a good income doing what you love and what you’re good at, and thereby make a meaningful contribution too. Most of the 20-somethings I know are still struggling to figure this out, so they can’t be of much help to me in working on what lies beyond this.&lt;/p&gt;
&lt;p&gt;I like having younger friends. They help me stay young at heart, and they help me keep my thinking from becoming stale. Their needs and concerns provide me with an endless supply of ideas. But I also need older, more experienced friends, especially people in their 40s, 50s, and beyond. I gain so much from their wisdom and knowledge. Having the right balance is key. Otherwise you become socially stagnant, and the sparkle drains from your social life. Instead of appreciating your friends, you start taking them for granted. I noticed I was beginning to fall into this trap last year, so I knew it was time to shuffle the deck and rebalance this part of Life.&lt;/p&gt;
&lt;p&gt;The problem with Facebook is that it greatly unbalanced the social part of Life, skewing it in the direction of spending lots of time with people nearly half my age. This dragged my thinking backwards in terms of maturity. When I dropped Facebook, my social life began to rebalance itself automatically. This is causing other positive ripples as well. Many problems are easier to solve when you approach them with a 40-something’s discipline or a 50-something’s patience as opposed to a 20-something’s youthful energy.&lt;/p&gt;
&lt;p&gt;Ask yourself what your life would be like if 80-90% of your social interactions were with people roughly half your age. Can you see how that might unbalance your social life?&lt;/p&gt;
&lt;p&gt;For many years this has been a challenging part of Life to balance. It took a while to recognize and accept that my online “friends” and my best in-person friends come from different pools and move in different circles.&lt;/p&gt;
&lt;p&gt;Most of my Facebook “friends” wouldn’t have been very compatible as in-person friends. We wouldn’t have had enough in common to develop a particularly deep friendship, and the interactions would have been too unbalanced. So it seems odd to refer to them as friends in the same way I’d refer to my in-person friends.&lt;/p&gt;
&lt;p&gt;I’ve learned the hard way that I can’t just fill up my social bucket with an endless supply of 20-something friends and expect good results, even if they’re very intelligent, growth-oriented, open-hearted 20-somethings. This kind of imbalance happens by default when I leave too many doors and windows open since the bulk of my online readership is in their 20s. If I allow too many of my typical readers to become my friends, my social life becomes unbalanced and stagnant, even as it maintains the illusion of freshness. It took a long time to recognize that this was happening.&lt;/p&gt;
&lt;p&gt;In order to rebalance this part of Life, I’ve had to deliberately close some of those accessible avenues, such that I can spend more time connecting with people who can add serious value to Life and help me keep growing (peers, mentors, etc). I like having some 20-something friends, but I can’t have hundreds of them. So that’s one reason Facebook really had to go — using Facebook was a lame attempt on my part to expect that my peers would come from the same pool as my readers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Facebook is ruled by addicts.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is probably obvious, but the Facebook “friends” that you’ll interact with most frequently will tend to be those who are the most addicted. They post more status updates and comments because they spend a lot of time on the service. So you end up giving the most attention to those who are the greatest addicts.&lt;/p&gt;
&lt;p&gt;In short, you end up spending the most time interacting with the people who are the worst influences — highly unproductive people who don’t value their time. This can have many adverse effects, such as causing you to become more addicted to the service and to feel the urge to post more often just for the sake of posting.&lt;/p&gt;
&lt;p&gt;If your strongest connections on Facebook are the most addicted, how is that going to influence you over time? The closer you become with those people, the more you’ll get sucked into spending more time on the service.&lt;/p&gt;
&lt;p&gt;After I left Facebook, I asked myself, Should I really be giving so much attention to the greatest social networking addicts?&lt;/p&gt;
&lt;p&gt;While even the biggest addicts can be very intelligent, helpful, and growth-oriented, their addiction tends to sap their ambition, causing them to make little forward progress in life. It should come as no surprise that many of these people are financially stagnant. It’s hard to improve your finances when you devote so much time to non-income generating activities each day.&lt;/p&gt;
&lt;p&gt;When I dropped Facebook, I also dropped off the radar of some of the biggest social networking addicts. I’m no longer subject to their influence, which was probably stronger than I’d care to admit. Breaking free of this cycle was a wise choice. I should have done it sooner.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Facebook is lazy socialization.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Social networking makes it easy to become socially lazy. With a few clicks, you can delude yourself into thinking you have an active social life.&lt;/p&gt;
&lt;p&gt;But is that the real story? Are you enjoying some intelligent face time with these friends? Or are you merely exchanging witty banter? Do you deeply value these friendships? Are you having the social experiences you desire? Or are you just wasting time clicking and typing and telling yourself you’re being social?&lt;/p&gt;
&lt;p&gt;What else could you be doing instead of social networking?&lt;/p&gt;
&lt;p&gt;You could go dancing or see a show with your boyfriend or girlfriend. No one special in your life? Wonder why… A person with halfway decent social skills can change that in a day. Has the Internet become your social hiding place? Does the thought of going outside and socializing with strangers make you anxious? If so, you can overcome that weakness with practice.&lt;/p&gt;
&lt;p&gt;You could have a nice chat with a wealthy mentor about how to improve your finances. No wealthy friends? Think you’re going to meet them on Facebook?&lt;/p&gt;
&lt;p&gt;It’s a good idea to pause and take a look at your social results. Has social networking transformed your life for the better? Has it helped bring empowering relationships, valuable contacts, and intelligent mentors into your life? Or does it leave you drifting in a sea of social drifters?&lt;/p&gt;
&lt;p&gt;I found that spending more time on Facebook didn’t produce much value for me socially. I did make some interesting contacts now and then, but it wasn’t worth the time spent.&lt;/p&gt;
&lt;p&gt;It’s true that in-person networking is more challenging. If your social skills are weak, you can pretend to be a social butterfly online just by throwing a lot of time at it. But you’re still going to be limited in the long run by your ability to connect with people face to face. Make sure you don’t let your social skills atrophy to the point where you end up spending more and more time alone, vainly trying to feed the illusion that you have a real social life.&lt;/p&gt;
&lt;p&gt;Be sure to keep challenging yourself socially. If you only do what’s easy, you’ll grow weaker with each passing year.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Facebook is an expensive way to increase visibility.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I know there’s a great deal of hype about the business value of social networking. Much of that hype is circulated by those who are trying to make money from it. Be wary of taking advice about gold from those who make a living selling picks and shovels.&lt;/p&gt;
&lt;p&gt;From a business standpoint, one supposed benefit of social networking is that it can raise your visibility. Raising your visibility is great. If you’re more visible (among the right people), you can attract more business. That part is all good.&lt;/p&gt;
&lt;p&gt;But not all visibility-raising methods are the same. If you use Facebook to raise your visibility, it comes with a hefty price. As you raise your visibility, you also increase your accessibility.&lt;/p&gt;
&lt;p&gt;For example, if you have a Facebook page, then you also have an inbox. At this time Facebook makes it impossible to disable the inbox. People can email you there. People I’d never met would email me on Facebook each day. Why? Because they could. Facebook made it easy for them to do so. They didn’t need my permission. Facebook would even let non-friends email me whenever they felt like it. Maybe that’s a bug, but that’s how it worked from my perspective.&lt;/p&gt;
&lt;p&gt;If you have a Facebook page with a wall on it, then people can post comments on your wall. If you have a fan page, someone can “like” your fan page, spam your wall, and then “unlike” your fan page, and it’s impossible to ban them from repeated abuse. You just have to deal with it.&lt;/p&gt;
&lt;p&gt;At low numbers, more accessibility isn’t so bad. Maybe you’d like the chance to communicate with more people. That’s all fine.&lt;/p&gt;
&lt;p&gt;At higher numbers, the visibility-accessibility linkage becomes untenable. The more visible you are on Facebook, the more people have access to interact with you in some way, whether it’s by sending you private messages, posting messages on your wall, or inviting you to events and groups. Beyond a certain point, this kind of contact becomes impractical to deal with in any meaningful way.&lt;/p&gt;
&lt;p&gt;I like that Facebook may have helped to increase my visibility by introducing people to my work who might otherwise never have learned about it. However, the price tag for that gain in visibility is a corresponding increase in accessibility. That price turned out to be way too high for me. I like helping people, but I can’t serve as a personal friend and therapist to thousands of individuals. That isn’t a sustainable way for me to contribute.&lt;/p&gt;
&lt;p&gt;When I dropped Facebook, I breathed a major sigh of relief. In a way I’m still sighing 30 days later. It really is a great relief not to be so accessible anymore. I finally feel like I have the space to think about what I desire to contribute of my own accord instead of feeling overwhelmed with an endless flood of requests from others. The visibility gains that Facebook provides just aren’t worth the price. There are much easier and more effective ways to build visibility that don’t yield an accessibility penalty, such as doing interviews.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What About Twitter?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As for my Twitter account, the jury’s still out, but for now I’m still using it.&lt;/p&gt;
&lt;p&gt;Twitter doesn’t create the same accessibility problem because by following zero people there, I’m not forced to have an inbox on the service. Even if I did have an inbox, it wouldn’t be bad because people could only send 140-character messages. But I find it best not to have an inbox there at all, so I never need to worry about people expecting me to reply to their direct messages. A few people apparently consider it poor Twitter etiquette to have thousands of followers and not follow anyone back. I don’t lose any sleep over it.&lt;/p&gt;
&lt;p&gt;Occasionally I’ll skim through the public messages that people address to me, especially if I posted a question for feedback purposes, but I normally don’t pay much attention to the @stevepavlina replies since they’re mostly re-tweets of my own stuff. So if you tried to get my attention by publicly posting a message to me on Twitter, there’s a good chance I never saw it.&lt;/p&gt;
&lt;p&gt;For now I’m okay using Twitter for posting broadcast-style messages because Twitter doesn’t force upon me the scaling headaches that Facebook does. If I double my Twitter followers, the service doesn’t require me to spend any more time there to keep my account tidy.&lt;/p&gt;
&lt;p&gt;I nuked my Linkedin account at the same time I left Facebook. Linkedin is supposed to be a business networking service, and I had about 350 contacts there, but I always found that service utterly useless, so it was a no-brainer to dump it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Try a 30-Day Facebook Fast&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you have any doubts about your own Facebook usage, I highly recommend you to try a 30-day Facebook fast.&lt;/p&gt;
&lt;p&gt;It’s easy to do this because Facebook lets you (temporarily or permanently) deactivate your account without deleting your data. So if you decide you want to go back to using it later, you can always log back in again, and everything can be restored with a few clicks, including your wall, photos, etc.&lt;/p&gt;
&lt;p&gt;As for the how-to, all you do is login to your Facebook account, and click Account -&amp;gt; Account Settings. Then at the bottom of that page, click “deactivate.” Follow the instructions from there. This won’t delete your data, but it will take your profile offline. You’ll become invisible on the service. To restore it later, just login again and click a similar link to bring it back.&lt;/p&gt;
&lt;p&gt;If you really want to stay in touch with certain people from Facebook who don’t already have an alternate means of contacting you, you can send them a private message before you deactivate your account to let them know how to reach you during your hiatus.&lt;/p&gt;
&lt;p&gt;I’m a big advocate of testing. If you’re an active Facebook user, and you go 30 days without it, you’ll gain a much clearer understanding of its role in your life. In my case it was obvious within a few days that the benefits I got from using it weren’t worth the effort, but there were other subtleties I didn’t notice until weeks later.&lt;/p&gt;
&lt;p&gt;This is your life. It’s up to you to ensure that you’re getting good value from your online activities. Don’t just go through the motions because you’ve been conditioned by some service to behave a certain way.&lt;/p&gt;
&lt;p&gt;As for myself, I’m sure it’s obvious that I have no plans to return to Facebook. Resistance is NOT futile.&lt;/p&gt;</summary><category term="facebook"></category></entry><entry><title>单链表的一些算法实现</title><link href="http://hackecho.com/2011/03/algorithm-of-single-linked-list/" rel="alternate"></link><updated>2011-03-10T23:26:35-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-03-10:2011/03/algorithm-of-single-linked-list/</id><summary type="html">&lt;p&gt;记得数据结构课上老师讲过单链表的一些算法实现，后来渐渐意识到这一部分非常重要，今天在这里搜集整理一下。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;首先定义节点：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;数据
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;下一个结点
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;创建带n个数据的单链表：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;LinkList&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Init&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;LinkList&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 1 &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;在索引为i的位置插入数据为data的结点：&lt;/strong&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;LinkList&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;0 &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;GetLen&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="nb"&gt;j&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;j&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;InsertNode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;InsertNode&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;InsertNode&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;InsertNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;删除索引为i的结点：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;LinkList&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 0 &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;=&lt;/span&gt; &lt;span class="n"&gt;GetLen&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="nb"&gt;j&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;j&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;DelNode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DelNode&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;delete&lt;/span&gt; &lt;span class="n"&gt;DelNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;归并单链表：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;LinkList&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LinkList&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;listNode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetNode&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;listNode&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;就地反转：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;LinkList&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Back&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="o"&gt;/*&lt;/span&gt;先把原来的链表头结点断开
    &lt;span class="o"&gt;*&lt;/span&gt;建立一个新的链表，然后把原来的链表插入到新链表的头部
    &lt;span class="o"&gt;*&lt;/span&gt;最后把原来链表头部指向新链表，最后注意要释放新链表的头部
    &lt;span class="o"&gt;*&lt;/span&gt;也就是最后一个元素&lt;span class="o"&gt;**************************************/&lt;/span&gt;
    &lt;span class="n"&gt;LinkList&lt;/span&gt; &lt;span class="n"&gt;tempList&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;tempList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;TempNode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tempList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetNode&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TempNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TempNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;TempNode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TempNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;Delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetLen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; 1&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;是否有环：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;LinkList&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;HaveCircle&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; !&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; !&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; !&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;选择排序：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;LinkList&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;small&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;small&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;small&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; !&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;small&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;small&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;small&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="C++"></category><category term="单链表"></category></entry><entry><title>Win 7忘记密码的恢复方法</title><link href="http://hackecho.com/2011/03/find-password-of-win7/" rel="alternate"></link><updated>2011-03-08T18:41:27-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-03-08:2011/03/find-password-of-win7/</id><summary type="html">&lt;p&gt;&lt;strong&gt;声明：本文只供学习交流之用，请勿将此方法用于非法用途，转载请注明来自&lt;a href="http://www.hackecho.com"&gt;天堂皓月&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基本思想：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在登陆界面想办法启动cmd，取得管理员权限，开启（或新增）系统管理员，进入后重置密码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实现方法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;大家注意登陆界面的“轻松访问”按钮，打开后可以看到一系列应用程序，如“讲述人”“放大镜”“高对比度”等，这些应用程序的可执行文件都在“C:Windowssystem32”(假设Windows7安装在C盘)目录里。&lt;/p&gt;
&lt;p&gt;我们可以通过第三方系统（如CE，另一个XP等）进入系统目录，更改（以“放大镜”为例）magnify.exe文件的权限，右击“magnify.exe”选择“权限”——高级——所有者，将当前系统管理员帐号设置为所有者(如果没有当前帐号在列表，则单击“其他账户”，手动输入当前账户名)。单击“确定”返回权限设置窗口，点击“添加”，将当前管理员帐户添加到列表，并将账户对该文件读取权限设置为“完全控制”。&lt;/p&gt;
&lt;p&gt;然后同第一步差不多，设置当前账户对“cmd.exe”权限为完全控制，然后将“magnify.exe”重命名为“magnify.exe.bak”（或其它），将“cmd.exe”重命名为“magnify.exe”。&lt;/p&gt;
&lt;p&gt;然后重启登录Windows7，在登录界面单击右下角的“轻松访问”按钮，在打开的窗口勾选“启动放大镜”，此时启动的就是cmd窗口了(是以system身份开启的，自然有管理员权限)，在cmd输入下面的命令开启administrator账户，重启即可使用administrator了：&lt;/p&gt;
&lt;p&gt;命令如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;administrator&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;yes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;解释：强制开启&lt;span class="n"&gt;administrator&lt;/span&gt;账户&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;administrator&lt;/span&gt; 123456 &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;解释：强制将用户&lt;span class="n"&gt;administrator&lt;/span&gt;密码改为123456&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后，如果administrator账户无法使用，那么就创建另外一个具有相同权限的管理员账号，重启登录Windows7，在登录界面单击右下角的“轻松访问”按钮，在打开的窗口勾选“启动放大假”，启动cmd窗口，输入：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt; 123 &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;回车
&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="n"&gt;localgroup&lt;/span&gt; &lt;span class="n"&gt;administrators&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;回车
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;恭喜，重启，进入admin账户就可以了。&lt;/p&gt;</summary><category term="Win 7"></category><category term="密码"></category></entry><entry><title>对MVC架构的简单解读</title><link href="http://hackecho.com/2011/03/intro-of-mvc-structure/" rel="alternate"></link><updated>2011-03-05T23:42:16-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-03-05:2011/03/intro-of-mvc-structure/</id><summary type="html">&lt;p&gt;因最近开发的需要，开始自学PHP，学习中的一些心得和技巧将会记录在博客里。作为一名初学者，我选择了使用SpeedPHP开发框架，因为它是个轻量级的框架。这篇文章是SP教程里的，简单摘录一下，以加深理解。&lt;/p&gt;
&lt;p&gt;本文将讲述在网络系统（WEB系统）开发中，MVC（模型-视图-控制器）架构的理念、设计以及在sp框架中的实际应用方式等。&lt;/p&gt;
&lt;p&gt;首先我们来看看MVC架构的示意图：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackecho.com/?attachment_id=139"&gt;&lt;img alt="MVC" src="/static/images/2011/03/捕获-300x118.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从上图我们可以将MVC简单地理解成：&lt;/p&gt;
&lt;p&gt;和访问者交互的是控制层（Controller层），控制器（controller）是同类交互的集合，每一个交互的操作，都对应了一个动作（action）。在sp框架中，全部的控制器类都必须继承于spController。&lt;/p&gt;
&lt;p&gt;对数据库进行存取的是模型层（Model层），在sp框架中，全部的模型器类都必须继承于spModel。&lt;/p&gt;
&lt;p&gt;显示页面模板的是视图层（View层），在sp框架中，视图层被集成到了控制器内，所以在实际开发中，视图层所要制作的只有页面模板。&lt;/p&gt;
&lt;p&gt;上面简单描述了MVC架构的理解。下面讲述一下关于sp框架中的MVC理念，可能比较抽象而不好理解，但是还请耐心去阅读，毕竟在实际开发中，对MVC理念的理解是非常必要和重要的。&lt;/p&gt;
&lt;p&gt;sp框架中的MVC理念，是将网络系统划分为三个关注点：交互、数据、页面模板；也就是我们设计或分析一个网络系统，就可以从这三个角度去进行：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;交互：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;表现在系统提供了哪些功能，这些功能可以划分为哪些大类，每一个大类的功能分别都有些什么操作等等。&lt;/p&gt;
&lt;p&gt;比如PHP论坛系统，我们可以粗略划分成板块、帖子、用户、站内信息、后台管理等几大类的功能，然后用户的功能里面又包括了注册、登录、修改用户信息等等的多个操作。&lt;/p&gt;
&lt;p&gt;对应sp框架的控制层（controller层）而言，一个功能大类可以说是一个控制器类（当然，如果该类型概况的范围比较大，那么还需要继续拆分成多个控制器类），单个类型内的每一个功能就是一个动作（action，控制器类的方法函数）。然后根据访问者对系统的每一次操作，sp框架都会自动选择对应控制器类中的对应动作进行处理。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;表现在系统对数据库进行了那些操作。网络系统几乎都需要和数据库打交道。那么，在进行对交互的分析和对系统本身的分析后，我们也大致上可以归纳系统需要哪些数据了。然后我们将这些数据整理归类，最终可以得出系统需要的数据表是哪些。&lt;/p&gt;
&lt;p&gt;就刚才的PHP论坛，按照“板块、帖子、用户、站内信息、后台管理”这五个分类功能，我们可以基本归纳出它们需要：板块记录表、帖子记录表、用户表、站内信息表、后台设置表等等。&lt;/p&gt;
&lt;p&gt;对应sp框架的模型层（Model层）而言，一个表可以说就是对应了一个模型类。而sp框架中的模型父类（spModel）为这些模型类提供大部分与数据库存取的功能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;页面模板：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每一个网络系统的开发中，我们都将需要制作相当数量的页面。简单来说，控制器的每一个动作（action）都有可能产生一个页面，所以在理清所有交互，完成控制器的设计后（未写代码前），我们就可以得到需要的页面模板的清单了。然后在模板引擎的帮助下，页面模板的制作可以与控制器的开发同时进行，以提高开发效率。&lt;/p&gt;
&lt;p&gt;按照上面的PHP论坛交互的设计，那么我们可以得到的页面模板有许多，比如板块方面，有首页模板、分区模板、板块模板等；帖子方面有帖子内容模板、发帖模板、回帖模板等。&lt;/p&gt;
&lt;p&gt;sp框架将视图层（View层）集成到了控制器内，所以在开发中，控制器将会把需要的数据发送到模板上面。而视图层所需要的开发，就仅是按照模板的语法进行页面模板的制作即可。&lt;/p&gt;
&lt;p&gt;根据“交互、数据、页面模板”这三个关注点，那么我们就可以比较全面地去分析和设计一个网络系统了。请注意这三个关注点并非孤立的，而“交互”正是“数据”与“页面模板”的基础，所以对“交互”的分析务必要做到正确并且完善。如果您希望了解更多关于系统分析与设计方面的知识，请到sp网站上面阅读相关文章。&lt;/p&gt;
&lt;p&gt;当我们理解了MVC后，下一步我们可以开始进入实战，来制作一个简单的留言本程序了。&lt;/p&gt;
&lt;p&gt;关于留言板程序，如果有机会，我会再做一个详细分析放上来的。PHP框架开发非常重要的基础就是理解MVC架构，这只是一个简单的入门介绍而已，深入的学习还在后头。&lt;/p&gt;</summary><category term="MVC"></category><category term="PHP"></category></entry><entry><title>今年夏天，什么季</title><link href="http://hackecho.com/2011/03/where-to-go-this-summer/" rel="alternate"></link><updated>2011-03-04T23:55:28-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-03-04:2011/03/where-to-go-this-summer/</id><summary type="html">&lt;p&gt;去年大一夏天，我一人独自外出流浪。我深知，大学四年的暑假绝不能荒废，我们应该做一些有意义的事情。大一那时没有技术，实习的话什么也干不了，于是干脆利用这个时间到处走走，旅行，也能给人很多收获。&lt;/p&gt;
&lt;p&gt;去年暑假回来后，我一直处在思考的状态。明白了很多，懂了很多。明白了有些事情发生了，有些人离开了，有些爱情丢失了，就再也回不来了；至少我曾经拥有过，我学会了珍惜，也学会了珍藏。&lt;/p&gt;
&lt;p&gt;这一段时间里，我看到了很多新兴领域的崛起，这些领域包括了移动开发和互联网开发等等。不能说我“见证了”Android的成长，但起码看到了它是怎样一步一步走来，走出一个全新领域的过程；也不能说我又非凡的“前瞻”力，但我依稀感觉到了它巨大的发展潜力。&lt;/p&gt;
&lt;p&gt;我对互联网虽没有达到痴迷的程度，但着实非常喜欢。喜欢那B/S架构带来的体验，喜欢从一个小小的窗口、从head/body里看世界，喜欢一种connection。当然，应用软件也很喜欢，C/S架构的胖客户端也是很有潜力的！&lt;/p&gt;
&lt;p&gt;今年夏天，会是什么季呢。。&lt;/p&gt;
&lt;p&gt;那么从现在就开始吧。&lt;/p&gt;</summary><category term="Android"></category><category term="移动互联网"></category></entry><entry><title>[转]写给亲爱的自己</title><link href="http://hackecho.com/2011/03/to-dear-myself/" rel="alternate"></link><updated>2011-03-04T14:00:13-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-03-04:2011/03/to-dear-myself/</id><summary type="html">&lt;p&gt;&lt;img alt="写给亲爱的自己" src="http://www.umiwi.com/public/article_image/2011/03/20110303132238_41337.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;亲爱的自己，从今天起为了自己骄傲的活着吧，好好爱自己，没有人会心疼你。&lt;/p&gt;
&lt;p&gt;亲爱的自己，不要太在意一些人太在乎一些事，顺其自然以最佳心态面对，因为这世界就是这么不公平往往在最在乎的事物面前我们最没有价值。&lt;/p&gt;
&lt;p&gt;亲爱的自己，永远不要为难自己，比如不吃饭、哭泣、自闭、抑郁，这些都是傻瓜才做的事。&lt;/p&gt;
&lt;p&gt;亲爱的自己，学会聪明一点，不要老是问周围的人一些很白痴的问题，那真的很无聊。&lt;/p&gt;
&lt;p&gt;亲爱的自己，如果不开心了就找个角落或者在被子里哭一下，你不需要别人同情可怜，哭过之后一样可以开心生活。&lt;/p&gt;
&lt;p&gt;亲爱的自己，学会控制自己的情绪，谁都不欠你，所以你没有道理跟别人随便发脾气，耍性子。&lt;/p&gt;
&lt;p&gt;亲爱的自己，你可以失望但不能绝望，你要始终相信，tomorrow is another day.&lt;/p&gt;
&lt;p&gt;亲爱的自己，你不要老是想依赖别人，更不能奢望别人在你需要的时候第一时间站出来，毕竟你们谁都不是谁的谁。&lt;/p&gt;
&lt;p&gt;亲爱的自己，永远不要轻易对别人许下承诺，许下的承诺就是欠下的债！&lt;/p&gt;
&lt;p&gt;亲爱的自己，这个世界只有回不去的而没有什么是过不去的。&lt;/p&gt;
&lt;p&gt;亲爱的自己，别人对你好，你要加倍对别人好，别人对你不好，你还是应该对别人好，因为那说明你还不够好。&lt;/p&gt;
&lt;p&gt;亲爱的自己，不管现实有多惨不忍睹你都要固执的相信这只是黎明前短暂的黑暗而已。&lt;/p&gt;
&lt;p&gt;亲爱的自己，不要抓住回忆不放，断了线的风筝，只能让它飞，放过它，更是放过自己。&lt;/p&gt;
&lt;p&gt;亲爱的自己，全世界只有一个你，就算没有人懂得欣赏，你也要好好爱自己，做最真实的自己。&lt;/p&gt;
&lt;p&gt;亲爱的自己，好好对待陪在你身边的那些人，因为爱情可能只是暂时的但友情是一辈子的。&lt;/p&gt;
&lt;p&gt;亲爱的自己，你必须找到除了爱情之外，能够使你用双脚坚强站在大地上的东西。&lt;/p&gt;
&lt;p&gt;亲爱的自己，记得要常常仰望天空，记住仰望天空的时候也要看看脚下。&lt;/p&gt;
&lt;p&gt;亲爱的自己，相信你的直觉，不要招惹别人，也不要让别人来招惹你。&lt;/p&gt;
&lt;p&gt;亲爱的自己，永远不要跟别人搞暧昧，你玩不起！&lt;/p&gt;
&lt;p&gt;亲爱的自己，不要太低调了，有时要强悍一点，被欺负的时候，一定要讨回来！但是一定不要记恨，小人之见随他们去好了，怜悯会使你高贵。&lt;/p&gt;
&lt;p&gt;亲爱的自己， 要快乐、要开朗、要坚韧、要温暖，这和性格无关。&lt;/p&gt;
&lt;p&gt;亲爱的自己，要自信甚至是自恋一点，时刻提醒自己我值得拥有最好的一切。&lt;/p&gt;</summary><category term="人生"></category><category term="生活"></category></entry><entry><title>说说微创业——关于开放平台和微时代</title><link href="http://hackecho.com/2011/03/about-micro-venture/" rel="alternate"></link><updated>2011-03-03T23:18:46-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-03-03:2011/03/about-micro-venture/</id><summary type="html">&lt;p&gt;大概从人人网对外发布了开放平台战略的那天，我就开始对开放平台有所关注。今天阅读了一些关于开放平台的思考的文章，收获了很多。除了开放平台，也正好借此机会，说一下这几天思考的微传媒战略。&lt;/p&gt;
&lt;p&gt;开放平台的产生不适偶然，而是发展的必然。Facebook则在这场变革中起了领头羊的作用，带领一批批IT公司走上了开放平台战略的道路。&lt;/p&gt;
&lt;p&gt;首先解释一下什么叫做开放平台：在软件业和网络中，开放平台是指软件系统通过公开其应用程序编程接口（API）或函数（function)来使外部的程序可以增加该软件系统的功能或使用该软件系统的资源，而不需要更改该软件系统的源代码（来自百度百科）。看过一个笑话是说，如果一个程序员写出了“摧毁地球”的程序，那么他不算是真正的程序员，为什么呢，因为真正的程序员应该写出“摧毁行星”的程序，然后把地球当一个参数传过去。这从侧面反映出面向对象的封装性是多么受欢迎。而开放平台提供商已经将一系列与自身平台相关的功能封装好并开放接口，这样我们就可以在获得授权的情况下，快速开发出一些实用、好玩的功能。这就是开放平台的作用。&lt;/p&gt;
&lt;p&gt;如今国内的开放平台浪潮正在袭来，人人网、开心网、新浪微博、搜狐微博、网易微博、百度框计算、淘宝开放平台、天涯开放平台、腾讯开放平台、盛大、阿里巴巴、51、豆瓣…各个巨头都看到了它的魅力，谁也不甘落后。如此多的开放平台，自然而然造就了一批优秀的开发者，提供了很多创业机会，“微创业”也逐渐兴盛起来。&lt;/p&gt;
&lt;p&gt;人人网开放平台上的成功我们是有目共睹的。几个月之内，人人的应用数量呈几何级增长，而依靠强大完善的架构体系，使第三方应用与人人社交习惯紧紧联系在一起，给用户非常良好的操作体验，农场引起的全民偷菜就是最好的例子。新浪微博上，巨大的用户数量和用户粘度也为其开放平台的发展奠定了良好的基础，审核制度保证了应用的质量，一款新的应用发布后，很快就会获得大众的认可，被人们接受。试想，一款以用有了用户量，自然就会和经济利益挂钩（公益除外），众多的开放平台又实现了“让一部分人先富起来”的伟大战略方针！&lt;/p&gt;
&lt;p&gt;由于开放平台技术门槛较低，个人也可以很容易地参加进来，因此很多人想到了创业。就像移动互联网中应用的开发者一样，希望能从中开始自己的事业。这不失又为我们提供了一个很好的机会，也是各个平台自己发展的很好的契机。&lt;/p&gt;
&lt;p&gt;所以，微创业，就从开放平台开始吧。&lt;/p&gt;
&lt;p&gt;下面说一些这几天对微传媒的思考。以新浪微博为例，依靠这种好友与好友的社会关系，将人们用一张网紧紧地联系在一起。这张网是如此的紧密，听说过“六人理论”的都会明白。所以，这将带来一种“裂变式”的消息传播方式。迈克尔杰克逊去世的消息最早是在Twitter上发布并传播出去的，一条上千次转发的消息至少会被推送到上万人的新消息中。裂变式传播的效应是不可忽略的，是无法估量的。这是微传媒发展的大前提。&lt;/p&gt;
&lt;p&gt;简单地说，如果一条广告（更确切地说应该是软广告，硬广告会被抵制）经过了几次裂变，其宣传功效是令人惊讶的。想一想“凡客体”的传播，我很佩服凡客诚品的负责人会想到这种传播方式，没有投入一分钱，就使销售业绩翻几番，如果不是依靠了微博的力量，怎么会成为现实。&lt;/p&gt;
&lt;p&gt;微传媒隐藏了巨大的商机，巨大的发展潜力，这一块地盘，也必将是未来几年内巨头分瓜之地。呵呵，考验执行力的时机到了！&lt;/p&gt;</summary><category term="开放平台"></category></entry><entry><title>听创新工场COO陶宁讲移动互联网的发展</title><link href="http://hackecho.com/2011/03/development-of-mobile-network/" rel="alternate"></link><updated>2011-03-02T00:11:15-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-03-02:2011/03/development-of-mobile-network/</id><summary type="html">&lt;p&gt;很早便锁定了今晚的第120期IT龙门阵，主题是创新工场COO陶宁讲关于IT产业变迁和移动互联网领域的创业与发展。创新工场关注的四大领域分别是移动互联网、消费互联网、电子商务和云计算，由于对移动互联网我还算是情有独钟，便想借此机会希望能得到陶老师的指导。另外，还有创新工场里的豌豆夹和友盟团队的负责人也将出席进行指导，所以更不能错过如此难得的机会了。&lt;/p&gt;
&lt;p&gt;（我对北京的交通表示一下小小的不满…）&lt;/p&gt;
&lt;p&gt;现场人很多，我看了一下签到表上很多都是著名IT公司的部门负责人，更有许多人是直接递名片的，当然还有很多充满热情的创业者。我去的比较晚，本来就不大的巴黎厅早已座无虚席。我相信来到这里的人，不论是在读的大学生还是已有成绩的项目负责人，都是带着对移动互联网的激情来的，置身其中，顿能感到一种强烈的创业者的热情，我想这才是我们真正需要的东西。&lt;/p&gt;
&lt;p&gt;留给我很深印象的是豌豆夹的项目负责人王俊煜和友盟团队负责人蒋凡，第一：年轻，第二：充满激情。作为创新工场第一批孵化项目，他们在移动互联网领域取得的巨大成功是有目共睹的，而他们还具有的共同点就是在创业过程中坚持不懈。想起马云讲过的一句话：“所有的成功秘诀都是不管用的，真正的成功方法只有一条，就是坚持不懈！”&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2011/03/IMG_2021.jpg"&gt;&lt;img alt="人山人海的ARIVA三层巴黎厅" src="/static/images/2011/03/IMG_2021-300x225.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面是一些我记录的感想，稍微总结一下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.关于大学生创业&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;大学生创业很难获得VC的支持和投资，因为我们没有经验，我们不可能是第二个扎克伯格。经验很重要，哪怕是失败的经历，只要能够从中学习到了一些东西，对于我们都是财富。&lt;/p&gt;
&lt;p&gt;当然，这只是VC方面，我感觉大学生创业的热情还是需要鼓励的，我个人更提倡Dorm创业，成功的可能性会更大一些。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.团队，产品，经验&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;毫无疑问，团队永远是第一位的，产品和经验永远都是建立在一个优秀的团队上才有可能成功。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.Idea不值钱&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们不是爱因斯坦，谁敢保证自己突然间的灵感别人也没有呢？市场基本情况大概如此，同一个热门项目，往往都会有很多家公司在做，关键不是谁先有了这个idea，而是执行力。&lt;/p&gt;
&lt;p&gt;有时候我也会因为有了一个非常完美的想法而激动，但随着时间的流逝，大多都慢慢淡去，忽而有一天网上出现了同类的产品，我才后悔莫及…想起有一本非常知名的书叫做《执行力》，我必须把它加入我的读书计划了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.关于移动互联网&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这才是今天的主题——移动互联网。&lt;/p&gt;
&lt;p&gt;网上有很多很好地对移动互联网的分析报告，我就不再重复了。我自己总结，大概一句话就可以：今天的移动互联网相当于过去的互联网。如果说现在的智能手机太贵，想想几年前还动辄几千美元的电脑吧，如果说移动互联网、3G互联网还不普及，想想几年前高昂的电脑网费吧，如果说自己觉得移动平台的应用已经饱和，想想几年前你看到天空、华军时是怎么想的吧，如果…&lt;/p&gt;
&lt;p&gt;真的，其实，移动互联网还是个早期的产物，而我也始终相信，它的成长速度是飞快的，移动互联网还有很长的路要走。&lt;/p&gt;
&lt;p&gt;最后，是豌豆夹项目负责人王俊煜的一句话：“最近我一直在招人，面试，有很深的感触，对于来应聘的人，你们一定要记住，一定要学会自掘后路。”&lt;/p&gt;</summary><category term="创业"></category><category term="移动互联网"></category></entry><entry><title>在VC中解析XML的方法</title><link href="http://hackecho.com/2011/02/parse-xml-in-vc/" rel="alternate"></link><updated>2011-02-25T21:49:54-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-02-25:2011/02/parse-xml-in-vc/</id><summary type="html">&lt;p&gt;昨天突发奇想，准备在交大一软通的第二个版本中加入RSS阅读器的功能，以便可以快速阅读知行论坛的帖子和获取晨光上的资源。今天下午开始研究怎样用VC来解析XML文件，现在总算把这一模块写完了。如果单独分离出来，应该是一个不错的RSS阅读器。&lt;/p&gt;
&lt;p&gt;记得前不久学期实训时我们小组做播放器，其中的网络搜索模块中用到了解析XML文件（百度MP3未公开的API哦，自己谷歌下就知道了）。当时由于这个模块归我负责，所以开始接触了XML，由于知识有欠缺，稀里糊涂中，也算可以一次性获得5首百度搜索返回的结果了。今天想找出来当时写的实验代码看看，结果却发现已经删了，不得已，重新开始学习一下吧。&lt;/p&gt;
&lt;p&gt;自己写一个全新的XML解析引擎出来对我来说还有点难度，于是我把目光放在了现成类库或组件上。目前找到三种方法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.免费的易火RSS解析引擎&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;很强大的引擎，而且免费，但因为是COM组件，需要系统注册使用，所以放弃了（一软通是绿色软件）；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.利用MSXML解析XML文档&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是我在实训时用的方法，实现起来很简单，但要做的很强大就需要进行深度学习了。因为考虑到有些电脑上可能没有安装MSXML组件，所以放弃了；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.利用Markup类库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最后一软通中用了这种方法，只需导入一个头文件和一个源文件就可以了。这是官方的下载地址&lt;a href="http://www.firstobject.com/dn_markup.htm"&gt;http://www.firstobject.com/dn_markup.htm&lt;/a&gt;，官网上还有详细的说明文档，虽然是英文的，但读起来还算可以。&lt;/p&gt;
&lt;p&gt;以下是我在使用Markup过程中的两个感受，写下来以防忘记。&lt;/p&gt;
&lt;p&gt;①预编译的问题&lt;/p&gt;
&lt;p&gt;官网上说要使用这个类库，需要把VC的预编译取消。这是一种方法，不过对于大一点的工程来说，取消预编译真的是对编程人员的一种折磨！其实还有一个很简单的方法可以使编译通过，在Markup.cpp文件头部加入下面一句代码就可以了：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#include &amp;quot;stdafx.h&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;②浏览特定元素&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;CMarkup&lt;/span&gt; &lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;UserInfo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FindChildElem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;&lt;span class="n"&gt;ITEM&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntoElem&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FindChildElem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;SN&lt;/span&gt;&amp;quot; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;CString&lt;/span&gt; &lt;span class="n"&gt;csSN&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetChildData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OutOfElem&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;利用IntoElem()和OutElem()可以很方便地实现遍历XML文件并提取有用的信息。一软通中知行和晨光的帖子就是这样提取出来，然后存到二维数组中进行调用的。&lt;/p&gt;
&lt;p&gt;Markup还有其他很多强大功能，实现了对XML文件很好地操作，需要时可参考官网技术文档。&lt;/p&gt;
&lt;p&gt;交大一软通马上就要发布第二个版本了，目前是我一个人在做，第一个版本后发布后同学们的支持鼓励和仅三天就突破1000的下载量，一直是我继续完善它的最大动力！&lt;/p&gt;
&lt;p&gt;希望有一天，一软通真的能成为交大名副其实的“一软通”。&lt;/p&gt;</summary><category term="C++"></category><category term="XML"></category></entry><entry><title>(转)为什么你应该（从现在开始就）写博客</title><link href="http://hackecho.com/2011/02/why-you-must-write-blog-from-now-on/" rel="alternate"></link><updated>2011-02-23T03:22:02-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-02-23:2011/02/why-you-must-write-blog-from-now-on/</id><summary type="html">&lt;p&gt;&lt;strong&gt;（一）为什么你应该（从现在开始就）写博客&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用一句话来说就是，&lt;strong&gt;写一个博客有很多好处，却没有任何明显的坏处&lt;/strong&gt;。（阿士顿的情况属于例外，而非常态，就像不能拿抽烟活到一百岁的英国老太太的个例来反驳抽烟对健康的极大损伤一样）&lt;/p&gt;
&lt;p&gt;让我说得更明确一点：&lt;strong&gt;用博客的形式来记录下你有价值的思考，会带来很多好处，却没有任何明显的坏处&lt;/strong&gt;。Note：碎碎念不算思考、心情琐记不算思考、唠唠叨叨也不算思考、没话找话也不算思考，请以此类推。&lt;/p&gt;
&lt;p&gt;下面是我个人认为写一个长期的&lt;strong&gt;价值博客&lt;/strong&gt;的最大的几点好处：&lt;/p&gt;
&lt;p&gt;1) &lt;strong&gt;能够交到很多志同道合的朋友&lt;/strong&gt;。我自己既写博客，也读别人的博客，在这个时代，对于生活中的绝大多数人来说，拓宽朋友圈子的途径几乎只有一个，通过网络，而如何在网络中寻找到气味相投的朋友，如何判断别人和自己是否有共同语言？显然，通过天天在SNS上碎碎念的那些日记是难以做到的。我佩服的一些朋友几乎全都是长期用博客记录想法的人，&lt;strong&gt;因此，和他们即便不打照面，也是心照不宣&lt;/strong&gt;。即便素未谋面也能坐下来就聊得热火朝天。&lt;/p&gt;
&lt;p&gt;为什么博客在结交志同道合的朋友方面的潜力要远胜于原始的交谈方式？很简单，&lt;strong&gt;第一，博客无地域限制，整个互联网上从A到B只有一个点击的距离&lt;/strong&gt;，而传统的建立朋友圈子的方法则受到地域限制。&lt;strong&gt;第二&lt;/strong&gt;，也是更重要的一点，即如果按照以前结交朋友的方式，需要互相聊天，交流观点，然后才逐渐熟悉起来，这需要一个较长的过程，而且更糟糕的是，当你遇到另一个陌生人，又要把整个过程重复一次，表达你已经对老友表达过的那番想法。可博客却做到了“&lt;strong&gt;一次表达，无数次阅读&lt;/strong&gt;”，当我看到一个写了好几年的博客，看完了之后我仿佛和这个人交谈了很久，&lt;strong&gt;用程序员们喜欢听的话来说就是，“博客极大地增强了话语的复用性”&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我_（指刘未鹏）_曾在CSDN上写了近六年的博客，在一年半前建立了一个Google Groups（TopLanguage），由于我的博客的长期阅读者都是互相有共同语言的，因此这个Group一开始就热火朝天，而高质量的技术讨论则进一步吸引了更多的牛人的参与，雪球滚起来之后，就很难停下来了，将近一年半下来，从这个Group的讨论中我获益良多。而对于非程序员朋友，科学松鼠会则是一个很好的例子。&lt;/p&gt;
&lt;p&gt;2)&lt;strong&gt;书写是为了更好的思考&lt;/strong&gt;。我在《书写是为了更好的思考》里面详细总结了书写的好处，这里就不拷贝粘贴了。&lt;/p&gt;
&lt;p&gt;3) &lt;strong&gt;“教”是最好的“学”&lt;/strong&gt;。&lt;strong&gt;如果一件事情你不能讲清楚，十有八九你还没有完全理解&lt;/strong&gt;。绝大多数人应该都知道在程序员行业面试官经常要求你讲解一个东西给他听，他会说他不懂这个东西（他如果真的不懂的话效果其实是最好的），而你的任务则是说到让他理解为止。&lt;/p&gt;
&lt;p&gt;为了让一个不明白的人做到明白，你必须要知道从明白到不明白他究竟需要掌握哪些概念，这就迫使我们对我们大脑中整个的知识体系来个寻根究底，把藏在水面之下的那些东西统统挖出来，把大脑中的那些我们知道、&lt;strong&gt;但不知道自己知道&lt;/strong&gt;的潜在概念或假设（assumptions）都挖出来，把它们从内隐记忆拉扯到外显记忆中。因为只有完全知道、&lt;strong&gt;并知道自己知道&lt;/strong&gt;一切来龙去脉的人，才能真正把一件事情讲得通通透透。&lt;/p&gt;
&lt;p&gt;但是，你可能会怀疑，那除了能够讲清楚之外，弄清自己到底知道哪些东西还有其他什么好处吗？如果没有其他好处，那我又何必费这个劲呢？我又不当老师。&lt;/p&gt;
&lt;p&gt;TopLanguage上的一位朋友sagasw曾经讲了这样一个小故事：&lt;strong&gt;据说在某个著名软件公司里，开发组的桌上会放着一只小熊，大家互相问问题之前，先对着小熊把问题说一遍，看能不能把问题描述的清晰，基本上说的比较有条理以后，答案也就随之而来了&lt;/strong&gt;。当然，你不一定要对小熊说，你可以在大脑中虚构一个听众，一个不懂行的听众，然后你说给他听。这是可行的，我经常在路上用。不过如果你能坐下来，我建议你还是说给实际的听众听——即写下你的思考，因为书写是更好的思考。&lt;/p&gt;
&lt;p&gt;我们的绝大多数知识在绝大多数时候都隐藏在潜意识中，其实我们意识的窗口很小，我们的工作记忆只能容纳寥寥数个条目（记得那个“看你能够记住屏幕上同时闪现的多少个数字”的flash小游戏吗？），我们平时所作的推理过程很大部分都是自动的，发生在潜意识中，而我们只能感知到一些中间结论。不信你回忆一下你在和别人讨论问题的时候有多少次觉得“&lt;strong&gt;反正就是这样，我感觉得到它是对的，但是你问我，我也说不清到底怎么回事&lt;/strong&gt;”，对此&lt;strong&gt;你不觉得很奇怪吗？如果你都不能从逻辑上支持你的结论，你怎么就能确信它是对的呢？仅仅因为你的直觉强烈地告诉你它是对的？那如果旁边有另一个人，他和你持相反的观念，而他的直觉也强烈地告诉他他是对的。这时候你又怎么想？“他的直觉错了，我的直觉是对的”？难道你这么自信你的直觉是世界上最可靠的？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我自己则是非常&lt;strong&gt;珍惜类似这样的机会&lt;/strong&gt;，即当“我强烈地觉得它是对的，但我却说不出所以然来”，这时候&lt;strong&gt;往往是到大脑中翻箱倒柜的时候，弄清来龙去脉的时候，深入反思的时候，纠正一直以来错误的潜在前提假设的时候&lt;/strong&gt;。另一方面，“&lt;strong&gt;我强烈地觉得这个说法有问题，但我却说不清它为什么有问题，到底哪有问题&lt;/strong&gt;”，这也是一个极有意义的瞬间，它几乎总是意味着你对一个问题的认识有潜在的偏差，肯定是在你自己都没有觉知到的地方引入了一个潜在的假设、偷换了一个重要的概念，等等。而这种时候就是深入反思的时候，当你终于潜到问题的底层，触摸到问题的实质，把水面之下的冰山整体看清了的时候你会有一种通体舒泰的感觉。&lt;/p&gt;
&lt;p&gt;为什么说以上这些？因为刚才说的是你必须等待这样的反思机会，但&lt;strong&gt;如果你选择经常总结自己的知识体系，并说出来给你的读者听，你就会发现你自己创造了这样的机会&lt;/strong&gt;。如果我们平时不反思，我们觉得很多事情都是当然的，但结果如果要你一开口说给别人听，常常会发现事情就开始变得不那么明显了，你说着说着，就开始莫名其妙地发现自己需要用到“&lt;strong&gt;反正&lt;/strong&gt;”这个词了。&lt;/p&gt;
&lt;p&gt;于是，反思的机会就来了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一旦你把自己潜意识里面的东西从幕后拉出来，你就有了面对并反思它们的可能，而不是任它们在幕后阴险地左右你的思维。&lt;/strong&gt;很多时候我们的思路出了问题并不是我们不会反思，而是不知道自己的思维中有那些隐含的假设（assumptions），如果你只感觉到答案，却&lt;strong&gt;不知道你大脑得到这个答案之前做了哪些推理，你又怎么知道哪一环可能出了问题呢&lt;/strong&gt;？另一方面，一旦你弄清了自己到底是怎么想的，离意识到问题就不远了，很简单的道理——如果别人和你争辩的时候总是只摆立场，你就很难和他辩，但如果他把自己的推理过程原原本本暴露给你，批判起来总是容易得多的。（也正因为这个原因有很多人总是把逻辑藏在背后，不敢暴露出来）&lt;/p&gt;
&lt;p&gt;绝大多数时候其实我们都会不假思索地得出一些结论，就像上了发条的自动机，但其实我们并不知道这些结论到底怎么来的，在思维的背后到底发生了哪些事情，故而当我们发现我们的结论错了的时候，一头雾水，没法着手寻找到底在哪错了。如果你注意一下很多人的发言（论坛、博客等等），如果你把他们的发言分为“前提”、“假设”、“逻辑”、“结论”这四个部分，你会发现一大堆人只会不停地下结论，摆立场，却见不到这些结论或离场的前提、假设和个中逻辑，倒也不是他们不愿意写出逻辑，而是因为反思自己的思维过程实在是一件困难非常的事情，我们的推理过程很大一部分发生在意识的水面之下，只有当有了重要结论的时候这条逻辑链才会浮出来冒一个泡，让我们的意识捕捉到。更何况绝大多数时候我们用的其实并不是完整严密的逻辑思维，而是思维捷径。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;去教一个完全不懂的人，则是一种最最强大和彻底的反思途径&lt;/strong&gt;——因为他没有任何预备的知识，所以要让他弄懂你所知道的，你就必须彻底反思你的知识体系，弄清这座大厦的根基在什么地方，弄清它的骨架在什么地方，一砖一瓦到底是怎么垒起来的，你不能自己站在11层上，然后假设你的读者站在第10层，指望着只要告诉他第11层有那些内容就让他明白。你的读者站在第一层，你必须知道你脚下踩着的另外10层到底是怎么构造的。&lt;strong&gt;这就迫使你对你所掌握的、或之前认为正确的那些东西作彻彻底底的、深刻的反思，你的受众越是不懂，你需要反思得就越深刻&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;4) &lt;strong&gt;讨论是绝佳的反思&lt;/strong&gt;。另一方面，&lt;strong&gt;很多时候我们并不是有机会说给完全不懂的人听，更大的可能性是说给同领域有一定基础的人听&lt;/strong&gt;，这个时候并不代表就不能促使反思了，实际上，你会发现，如果你公开你的想法，&lt;strong&gt;几乎总能看到与你持不同意见的人，&lt;/strong&gt;然后你通过&lt;strong&gt;比较你和他的观念之间的差别&lt;/strong&gt;，会发现你们在一开始的思路上就存在差异，差异从哪里来的？在&lt;strong&gt;进一步讨论中你们就会不断地迫使对方拿出更深层次的理由&lt;/strong&gt;，这同样也是一种非常有效地促使自己反思的方法，在讨论的过程中双方的理由自然会变得越来越深入，越来越接近问题的本质，&lt;strong&gt;一些平时难以注意到的深层面的差异性就会逐渐浮现出来，你也就多了一次难得的机会去审视自己的思维中到底存放了哪些错误的信息&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;5) &lt;strong&gt;激励你去持续学习和思考&lt;/strong&gt;。如果你没有持续学习和思考的习惯，你的博客很快就会没有内容可写，就只能整点碎碎念或者转载，然后你就会失去读者，然后你就会关掉博客，然后一旦关掉博客之后你也就死了写博客的心，然后就少了一条激励你去思考和总结的途径，然后你变得更不高兴总结和思考，然后…&lt;/p&gt;
&lt;p&gt;为了打破这个死循环，不要永久停止更新你的博客，就算你两个月，三个月都不写，只要你每篇都是写自己思考的产物，写有价值的东西，在互联网上，金子的确总是会发光的，因为有无数的信息聚合平台在期待这些有价值的内容，有搜索引擎为你的内容提供海量的潜在读者，有海量的人肉在手动挖掘和转载那些有价值的东西。&lt;strong&gt;我们所能做的最差的一个决策莫过于停止做一件没有任何坏处，却有一大堆好处的事情&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;为了让你的博客有价值，你必须不断总结自己学习的结果，你必须不断思考，给出比别人深刻、独到的见解。这看起来有点本末倒置，但很快本和末就会正过来。&lt;/p&gt;
&lt;p&gt;6) &lt;strong&gt;学会持之以恒地做一件事情&lt;/strong&gt;。很多人在生活中容易觉得迷失，不知道想要做什么，是因为没有一件能够持续地做的事情，用俗话来说就是没有主心骨。用积极心理学的话来说就是没有一件能够创造流体验的事情，而书写自己的思想则是一件容易产生流体验的事情，在书写的时候，特别是理性地书写的时候，大脑逐渐进入推理分析模块，一切不愉快的情绪，烦躁感都会逐渐消隐下去。&lt;strong&gt;不过前提是你得开始，并且坚持过一开始的困难期，以后的一切便成了习惯成自然。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;7) &lt;strong&gt;一个长期的价值博客是一份很好的简历&lt;/strong&gt;。这里的“简历”并非是狭义上的求职简历，毕竟现在还没有到&lt;strong&gt;价值博客的时代&lt;/strong&gt;，很多人写博客都是到处转载或者干脆碎碎念，正因此面试官未必拿个人博客当成了解一个人的更可靠窗口。这里的“简历”是指一个让别人了解自己的窗口，虽然我们未必做得到像罗永浩、Keso这样的博客，个人的影响力已经足以支撑出一份事业（牛博和5gme），&lt;strong&gt;但至少你会因此而结识更多的人，你的博客价值越高，你结识的人就越牛，跟牛人交流又会让你的眼界得到极大的开阔，打开一扇又一扇你原本不知道的门，于是你就变得更牛。这是一个良性循环&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（二）怎么做到长期写一个价值博客&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;注意到我并没有说“怎么做到长期&lt;strong&gt;坚持&lt;/strong&gt;写一个价值博客”，因为当思考和总结成为习惯之后，诉诸文字以及借助书写来进一步思考就变成了一件自然而然的事情，就变成了一件“因为你在思考和总结从而必须书写下来”的事情，博客就变成了副产品。&lt;/p&gt;
&lt;p&gt;一开始的时候你是因为要写博客而去使劲地思考和总结，指望给出令人眼睛一亮的东西，到了后来，就变成了因为你习惯了思考和总结，因为你意识到书写是更好的思考，你就必须使你的想法成为文字。至此本和末就会各归原位，不再颠倒。&lt;/p&gt;
&lt;p&gt;怎样做到长期写一个价值博客？也许有人会给出很多有趣有用的小技巧来提供动机和激励，譬如如何做SEO，如何鼓励读者留言等等，但是这些我都不想说，我只想说最最重要的，那就是：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;让你自己成为一个持续学习和思考的人，并只写你真正思考和总结之后的产物，其他一切就会随之而来。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;就像那句经常被人传阅的话：只做你最感兴趣的事情，钱会随之而来。&lt;/p&gt;
&lt;p&gt;这方面的具体例子大家可以留意一下，随处可见，就不一一举了。我想再重复一下的是，千万不要碎碎念，我能理解每个人都想偶尔发发牢骚的冲动，但是现在已经有了一个很好的窗口：twitter，所以立即停止在你的博客上碎碎念，阅读博客的人希望得到信息而非噪音。&lt;strong&gt;如果实在忍不住想碎碎念的话不妨换一下位置，这么来告诉自己：如果你看到别人博客来上这么一段，你会有兴趣看吗？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（三）可能出现的问题以及怎样应付&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;即便上文给出了N条写博客的理由，但有时候只要一条不写的理由就会让人停止做一件事情。所以我特别加上一节“可能出现的问题以及怎样应付”，《影响力2》第五章雄辩地证明，“Much of Will is Skill”，&lt;strong&gt;意志力很大程度上来源于有正确的方法，而非天生&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;1) &lt;strong&gt;担心别人认为没有价值&lt;/strong&gt;。事实是，你面临过的问题总会有人面临过，你独立思考了，别人没有，你的文章对他们就会有价值。当然，肯定会对某些人没有价值，他们早就知道了，但就算你再厉害，也总是有人比你厉害的，不能说因为这些原因就不记录你自己的想法了，你自己思考了之后理解得最深刻，就算有别人想过了，总有人没有想到的。况且，思考成了习惯，你的思考能力也会越来越强，你的文章也会越来越有价值。重复，&lt;strong&gt;无论你面临什么困惑，总会有很多人同样面临过，于是你苦苦思索之后的结果，肯定会对很多人有意义。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;或者，&lt;strong&gt;你想通了之后觉得其实也很简单于是不愿意或者不好意思写了，但要知道，问题在想通了之后总是简单的，问题的困难程度不在于想通了之后还觉得有多难，而在于从你觉得它难到你觉得它简单需要耗费多少思维体力&lt;/strong&gt;，你耗费的时间越长，说明有越多的人最终还是没有想明白（路越长走到底的人越少）。&lt;/p&gt;
&lt;p&gt;最后，虽然我现在看一年前的文章觉得挺不成熟，但是如果没有那些不成熟的思考，也不会有现在更成熟的思考，我几年后来看现在写的东西，还是会觉得不成熟。&lt;/p&gt;
&lt;p&gt;2) &lt;strong&gt;担心想法太幼稚或有漏洞等等被别人笑话&lt;/strong&gt;。人非圣贤。正是因为单个人的想法总是有漏洞，才值得拿出来交流（《书写是更好的思考》，讨论是绝佳的反思），被别人指出问题正是改进的空间，藏着掖着的想法永远不可能变得更成熟。&lt;/p&gt;
&lt;p&gt;Much of intelligence is knowledge，有这么一个非常发人深省的经典心理学实验：&lt;/p&gt;
&lt;p&gt;将孩子们分成两组，通过给他们不同的阅读材料让一组相信智力是天生的，不可在后天改变的，另一组则让他们相信智力其实只是知识和技能的代名词，完全是后天习得的。接下来让他们做一组任务，那些被相信智力天生说的孩子，倾向于回避困难的任务，选择较容易的任务，这里的逻辑想必是这样的：如果做困难的任务，就增大了失败的几率，就在降低了自己在别人和自己心目中的智力的值。为了保护这个智力的值不被降低，应该避免那些有失败风险的项目。而另一组孩子则对于有挑战性的事情跃跃欲试，并且在失败的时候明显没有前者沮丧，因为失败也是学得新的东西，不管怎样都是“智力”的提高。&lt;/p&gt;
&lt;p&gt;况且，只会批判乃至嘲笑别人的人是最不知道怎么建设的人，忽略他们。&lt;/p&gt;
&lt;p&gt;3) &lt;strong&gt;得不到激励&lt;/strong&gt;。这其实是个最无聊的问题了，只有写碎碎念的博客才会面对“激励”的问题。如果写自己的总结，写自己独立的思考，那么书写下来、理解通透，本身就是一个极大的激励。就算放在自己的私密笔记本里面也一样有成就感。况且，如果你真做到了书写&lt;strong&gt;价值博客&lt;/strong&gt;，那么绝对不用担心你的观点得不到传播，也许一开始会耗时长一点，但是这在任何事情上都是必要的初始阶段，Gmail小组的核心人物、FriendFeed创始人Paul Buchheit，和编程界名博Coding Horror的博主Jeff Atwood都曾经感叹过：Overnight success takes a long time，不过对于价值博客来说，现在网络上的聚合类服务这么多，机器的、人肉的、半人肉的都有，情况又要好得多了，而且我相信情况还会越来越好。&lt;/p&gt;
&lt;p&gt;4) &lt;strong&gt;写不出来&lt;/strong&gt;。这个问题也比较无聊，思考本不是一件急于求成的事情。长期订阅我的博客的朋友知道我一般发文频率在一个月三五篇，实际上有不少次我个把月也不发布文章，原因很简单，要么是有手头的事情要处理思考的时间被压缩了，要么是遇到比较大或者比较困难的问题需要长时间的思考和积淀，没有关系，如果没有想清楚就再想想，爱思考的人和不爱思考的人有一个本质的区别，前者在生活中总是挂着几个问题在大脑中，它们时常都会冒出来骚扰你一下，让你琢磨琢磨，不爱思考的则是没事不主动想问题，遇到问题还要先想想是否能找捷径（找人帮忙）解决。&lt;/p&gt;
&lt;p&gt;无论如何，不用急于求成，在一个主题上深入下去思考，总能挖到别人挖不到的角落。你能让一个问题在大脑中停留的时间越长，就越是能够发现新的东西，一般来说，我认为有价值的问题我会让他在意识或潜意识中待短则一个星期，长则一个月（视问题大小而定），利用走路吃饭的时间琢磨（我发现很多我佩服的人也都有这个习惯），&lt;strong&gt;有时即便已经想通了写下来了发出去了，大脑仍然还是会在回味问题，还没有把它撤出潜意识，然后看到某篇文章或某本书的时候忽然又有所新的感悟&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;能够把问题长时间停靠在潜意识中是一种技能，能够带来很大的好处，停留得越长你越琢磨得透彻，比别人看到的就越多&lt;/strong&gt;。我们必须要带着问题的眼镜看待事物才能发现新的视角，否则就会出现视而不见效应，别的不说，广为人知的例子是阿基米德的“尤里卡！”，如果不是长时间琢磨着一个问题，一直把它放在思维中，是不会从洗澡领悟到“排水测体积”的，否则他洗了那么多年澡怎么不早发现呢？&lt;/p&gt;
&lt;p&gt;所以，如果你习惯了思考问题，就总会有东西写，先有思考，然后有总结，然后在总结中进一步思考。&lt;/p&gt;
&lt;p&gt;当然你也可以试试把不成熟的想法写下来，试图整理成条理清晰的文字，然后看看能否在整理的过程中走得更远。这往往是可行的。比如这篇文章在我的简记里面原本其实只有三行字（包含大约十来个备忘关键词），而最初在我的大脑里面其实只有一个走路时冒出来的问题:为什么要写博客？&lt;/p&gt;
&lt;p&gt;1 你可以看一下&lt;a href="http://delicious.com/pongba/toplanguage"&gt;我收藏的一些精彩主题&lt;/a&gt; &lt;em&gt;（将链接到原作者设定的链接）。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;2 尽管我并不完全同意这句话本身，但它这种解决问题链上更基本环节的问题的精神是我赞同的。&lt;/p&gt;
&lt;p&gt;3 《影响力2》这个名字起得很聪明，其实它并不是《影响力》的作者写的。&lt;/p&gt;
&lt;p&gt;4 我忘了这则实验的出处了，但实验的精神是记忆犹新的，哪位同学记得原始出处的麻烦提醒我一下。&lt;/p&gt;
&lt;p&gt;5 对于阿基米德这个故事的真实性是有争议的，毕竟几千年久远的事情谁弄得清呢。但是故事的道理是很本质的，我们平时也经常有类似的体验，加上阿基米德的“尤里卡”实在太出名了，所以我相信用用无妨。&lt;/p&gt;
&lt;p&gt;感谢本文的原作者&lt;a href="http://mindhacks.cn/"&gt;刘未鹏&lt;/a&gt;。&lt;/p&gt;</summary><category term="思考"></category></entry><entry><title>交大一软通 V2.0 开发完毕</title><link href="http://hackecho.com/2011/02/finish-of-bjtuer/" rel="alternate"></link><updated>2011-02-19T20:45:02-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2011-02-19:2011/02/finish-of-bjtuer/</id><summary type="html">&lt;p&gt;首先感谢大家对1.0版本的支持，收到大家的意见反馈后，经过努力，V2.0版交大一软通发布！&lt;/p&gt;
&lt;p&gt;更新啦~~~：&lt;/p&gt;
&lt;p&gt;1.增加“知行快读”模块，可以快速、方便地在软件内阅读知行论坛热门板块，以及晨光BT的资源，让你第一时间获得最新信息，体验酣畅淋漓的“刷论坛”阅读感受！&lt;/p&gt;
&lt;p&gt;2.修正“免流量上网通道”无法使用的问题，更换了代理地址并且增加为两条通道，通道1无法使用时可以使用通道2。修复了其导致的无法上网的问题，程序退出时将自动关闭通道。&lt;/p&gt;
&lt;p&gt;3.主页增加了“快捷启动”栏目，直达各个常用功能，方便快捷！&lt;/p&gt;
&lt;p&gt;4.一软通内置了网络浏览系统，不再调用系统默认浏览器。&lt;/p&gt;
&lt;p&gt;5.增加“实用工具”模块，混在交大，这些工具少得了？！工具还在不断添加中！&lt;/p&gt;
&lt;p&gt;6“交大导航”新增许多地址，而且还在不断增加，导航更齐全！&lt;/p&gt;
&lt;p&gt;7.增加的功能详细介绍如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;知行快读&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;想体验什么叫酣畅淋漓，就使用知行快读！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IP地址切换&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以保存多组地址配置信息，让你的笔记本不管在宿舍还是在机房，都能迅速切换IP；&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MAC地址修改&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以快捷修改网卡的MAC地址（非物理），同时可以查看网卡各项具体配置信息；&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“流量查询”更改为“Dr.COM流量管理”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;登陆后，不但可以查询剩余流量，还可以查询账户余额，登录记录，充值记录，账单详情，上行和下行的具体流量等等；&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;局域网聊天、传文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;只要两个人（或多个）同时使用，则可以高速、不计流量地传文件、聊天等等；&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其它功能&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;增加“交大校园常用软件下载”导航，增加“研究生选课”导航，增加“MIS系统”导航，增加“校历”导航，增加各学院主页导航，修复北邮人BT的bug，修复安装ipv6的bug，增加内置网络系统等等等等……&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下载地址：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（知行，需注册下载）&lt;a href="http://zhixing.bjtu.edu.cn/thread-279824-1-1.html"&gt;http://zhixing.bjtu.edu.cn/thread-279824-1-1.html&lt;/a&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（晨光，需ipv6支持）&lt;a href="http://zhixing.bjtu.edu.cn/thread-284809-1-1.html"&gt;http://zhixing.bjtu.edu.cn/thread-284809-1-1.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="界面预览图片" src="/static/images/2011/04/主页.png" /&gt;&lt;/p&gt;</summary><category term="交大一软通"></category></entry><entry><title>日子的碎片</title><link href="http://hackecho.com/2010/09/fragment-of-life/" rel="alternate"></link><updated>2010-09-14T00:27:00-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2010-09-14:2010/09/fragment-of-life/</id><summary type="html">&lt;p&gt;&lt;em&gt;&lt;strong&gt;安意如：“原来，需等到风住尘香花已尽， 才可以看到最后的风清月朗，花好月圆。”&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;关于我：&lt;/p&gt;
&lt;p&gt;日子就这样流逝着。高兴的是，我选择回到软件科协，共同推进科协的发展。昨晚经历了对10级的面试，也有很多感触。我要做的，不仅仅是从被面试者到面试官的转变，更重要的是，从理事到部长的转变。其它不说，只想说，科协会越来越好的，项目部的同志们，加油！&lt;/p&gt;
&lt;p&gt;说说自己的网站吧。我曾经回复兴华说：“任何爱IT的人，都曾有过开一个网站的梦想...”，我想我的这个梦想怎么就这么艰难呢？！哈，记得在初中的时候，自己执着地用FrontPage做“李昭谕工作室”，还帮同学做了一个所谓的军事图片网站。那些可爱的源文件我已经打包好，珍藏在我的电脑里，偶尔拿出来翻一翻，甜甜的感觉。遗憾的是，那些在现在看来丑陋无比的网页，只能永远静静躺在我的硬盘里，以前是，现在也是。这算不算一个梦想的开端呢？也许是吧，那也许不是呢，那是什么呢？&lt;/p&gt;
&lt;p&gt;这几天在考虑域名和服务器的选择，我喜欢的域名被拍卖到3000元，我只能望而却步了。不过已经锁定好目标，尽快就可以落实下来了，哈哈~说到服务器，想起过去一年里的探索过程，呵呵，挺有意思的。被客服骂过，被卖家冷嘲热讽过，被站长冷落过。。。我知道还有很多需要学习，我也会的。这次目标也已确定，现在就差域名备案的问题了。今年工信部的审核严上加严，势单力薄的我，应该怎么办？T T| 还是那句话，慢慢来吧，一切会好的。“When everything changs , chang everything !”几个月前，对我来说，everything changs，现在，就算死的很惨，我毕竟努力过了。&lt;/p&gt;
&lt;p&gt;我不得不对生活进行重新规划，工作，学习，还有什么，爱情？呵呵，现在没有了，心中感觉失去的那份东西，是它吗？“昙花一现的惊艳，只要出现一次已经可以。荒芜的本身就是一种保留。因为静默，你永远不会了解它蕴藏了怎样深沉如海的情感。”&lt;/p&gt;
&lt;p&gt;今晚与1004班举行联谊晚会，大家坐在一起聊一聊生活、学习，聊一聊军训、活动。一年的时间，代沟有，共同语言也有。我们这代属于什么呢？八零后的终结者，或者是九零后的开创者？或者只是一个旁观者。你们一年后将成为我们，我们一年后将会成为另一个他们，亲爱的学弟学妹们，你们到时候会是怎样的呢？&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;“人生的旅程深邃幽长，我们对未来一无所知，亦未尝是什么坏事。如果我们一早确知结局，还有多少人敢去赴那茫茫的前路？”&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;</summary><category term="生活"></category><category term="科协"></category></entry><entry><title>盗梦空间 2010-9-5</title><link href="http://hackecho.com/2010/09/inception-life/" rel="alternate"></link><updated>2010-09-05T22:36:00-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2010-09-05:2010/09/inception-life/</id><summary type="html">&lt;p&gt;中关村，美嘉，10：45am，《盗梦空间》。&lt;/p&gt;
&lt;p&gt;不知何时自己也这么不安分，一个人跑去电影院看电影。一杯可乐，一份热狗，一屏幕的光影流动，演绎着一层层梦境。这是属于我得两个小时，手机静音，心灵也静音。&lt;/p&gt;
&lt;p&gt;D-22酒吧刚子的演出专场现在已经开始了，本来是要去的，和朋友一起，微微的酒精和刚子低沉的声音，也许会让我静下心来，好好思考。有时候外界的喧嚣流动才能衬托出我心的一丝宁静，我想每个人都是吧，不一定融入，只需感受。但朋友因为工作的原因没来得及，我也就依旧坐在电脑前，用0和1来创造一些价值。&lt;/p&gt;
&lt;p&gt;回来的路上，我一直在问自己：“Is the world we live real ? What is the definite reality ?”每个看过《盗梦》的人大概都会这样问，也许我们活在一个很深很深的梦境中，这个梦境，何时才是解脱？&lt;/p&gt;
&lt;p&gt;影片我不多说什么，以免有剧透的嫌疑。豆瓣上还极少有电影能取得9.5如此高的评定，回来后跟同学一交流，发现原来每场过后都会有掌声，尽管最后那旋转的陀螺留给我们无尽的悬念。&lt;/p&gt;
&lt;p&gt;呵呵，才发现，我的陀螺停不下来了。。&lt;/p&gt;
&lt;p&gt;在新浪微博竟和兴华相遇了，一湖星空，呵呵，围脖终于有同学了~还有Facebook，在那里可以看到留学生们真实的状态，看到异国的人们各种的心情和图片，I like it！社交网络让这个世界更近了，还记得在世博科技信息馆中我亲手采集的梦想：“让实时通信变成事实，让距离不再阻隔交流。”什么时候能实现呢？会的吧。&lt;/p&gt;
&lt;p&gt;每天就这样生活，周一到周四每天四节课，这学期学习任务明显很重。不过会好的，再说，选那么多课，只能怪我自己。但，这又何尝不是一件好事儿呢。突然萌发了一个想法，想把DiscuzX的源代码解析一遍。如果你知道这件事儿几年之内还从没有人做过，你知道我对PHP还是菜鸟级别，不要笑哦，我也知道这几乎不可能。但我是一只IT小小鸟，不努力永远飞不高。&lt;/p&gt;
&lt;p&gt;又是胡乱扯的一天，嗯，明天，继续吧。&lt;/p&gt;</summary><category term="电影"></category><category term="思考"></category></entry><entry><title>记录一些心情</title><link href="http://hackecho.com/2010/09/some-notes-about-myself/" rel="alternate"></link><updated>2010-09-05T00:24:00-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2010-09-05:2010/09/some-notes-about-myself/</id><summary type="html">&lt;p&gt;刚刚写的状态：“所谓的理想，所谓的现实，所谓的差距，经历了太多以前未曾有过的挫折，或许是以前太顺利了。”其实也没什么，有些心情记录一下，会更好的。&lt;/p&gt;
&lt;p&gt;昨天与10级的班长支书见面，又看到了去年自己的影子。依稀记得去年这个时候，学长坐在那里给我们讲述他们的生活，而如今，我们坐在了他们的位置，给满怀期待的学弟学妹们讲述我们的生活。我能理解他们的心情，脑海中浮现出去年的一张张影像，好一个时光的交错更替。8月28号为新生党员带路，9月1号为新生家长带路，无一不是回忆，时隔一年，感觉时间还没有真正开始，却早已逝去，留下的都是追忆。&lt;/p&gt;
&lt;p&gt;都说自古才子多寂寞，我不是才子，为何有时也会孤单？其实一个人的生活，孤单但并不孤独。&lt;/p&gt;
&lt;p&gt;我曾经发过一条状态：“突然一下感觉要失去什么了，猛然想抓住那些曾经错过的东西。想要个移动硬盘，想保留的东西太多了，而且记性不好，就用它存储我的记忆；想要个数码相机，想多走走拍拍，免得以后老了或是忙了，才发现自己是为了生存而生活；想要一个单车，想结伙一起外出郊游或是锻炼，免得都市粉尘吸久了体质下降了。”&lt;/p&gt;
&lt;p&gt;我买了相机，开始记录我的生活，在那一幅幅静态的影像中，才能看到时间的足迹，换句话说，才能看到我曾经在某一时段走过某一段路，就当是我生命的一个定格。我开始想要到处走走，去看天，去看地，去看人，去看文化与精神。独自背包走在陌生的地方，或者融入大自然，或者融入城市的喧嚣，或者去买一杯奶昔坐在麦当劳的靠窗的位子， 看着外面的人来人往，车水马龙。看着躲在路过的年轻妈妈背后的小孩子扮鬼脸， 看着稚嫩的笑脸回应自己笑容...&lt;/p&gt;
&lt;p&gt;我买了移动硬盘，下载了IMDB经典的电影，我选修了“外国电影观摩与鉴赏”，想学会体会一些东西，读懂一些东西。我知道在国图的三层，有一排书柜全都是影视相关的，我发现自己竟然可以抱着《暮光》的影视解析，看得如痴如醉。那里还有影视后期的所有书籍，我喜欢上了3DS MAX,喜欢上了Primier和After Effects，可悲的是，了解过特效解析再看现代电影时，竟然觉得一点都不真实，震撼又怎么样，我能说出这个特效是用C4D或Maya渲染的，那个是用Combustion或DFusion制作的，但影片的剧情带给了我们什么呢。IMDB的TOP List里，那些经典的黑白影像依旧健在...&lt;/p&gt;
&lt;p&gt;喜欢上了听APE和FLAC格式，喜欢上了FB2K。当音乐的细节被完全展示出来时，我知道我还缺少欣赏它的心灵，但是每个人都能够感受它，整个世界寂静了，和平之月、班得瑞和神秘园，贝多芬、恩雅和阿兰...水一样的空灵音符飘过，孤独也变得美丽，泪水也变得理所当然...我说喜欢FB2K其实自己也不知道为什么，它简洁的可怕，清汤寡水，但又丰富得可怕，灵活自如。也许只有两种人会喜欢上音乐，一种是音乐家，还有一种是像我一样，因为各种原因，心灵中失去了一样东西，却没有东西可以补得上。&lt;/p&gt;
&lt;p&gt;我注册了鲜果，订阅了很多关于Apple公司的信息。我不知道自己何时喜欢上了苹果，也许喜欢总是在不经意间。我关注ipod touch的信息，总有些说不清的原因，我第一时间只能将它分享在人人上，带着一丝落寞的希冀，看着它沉下去...最近两天仔细研究了电玩巴士的苹果中文网，还有远景和麦友的扩大，却也看到了苹果发烧友论坛一夜之间活生生被封的惨剧。我无语，因为搭建一个同类网站的策划已经进行了一半，迎接我的将是什么结果，是像大一时游子网的无闻而死，还是另有一番景象？我不知道，但我一定要去做，要去学，而且很多，很多。&lt;/p&gt;
&lt;p&gt;宿舍断电了，坚持不了多久了...胡乱记录下心情，不想强调什么。其实很寂寞，只是不想说。&lt;/p&gt;</summary><category term="生活"></category><category term="思考"></category></entry><entry><title>23秒，32年——《唐山大地震》观后感</title><link href="http://hackecho.com/2010/07/the-movie-earthquake-in-tangshan/" rel="alternate"></link><updated>2010-07-26T03:44:00-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2010-07-26:2010/07/the-movie-earthquake-in-tangshan/</id><summary type="html">&lt;p&gt;巧合，还是必然...&lt;/p&gt;
&lt;p&gt;23秒，改变了命运；32年，换回了真情...&lt;/p&gt;
&lt;p&gt;纯真年代的姐弟俩，虽然清贫、弱小，但却快乐地生活在这片土地上。姐姐护着弟弟，为弟弟“报仇”，把西红柿让给弟弟...殊不知，西红柿，两个“天安门”“长城”书包，成就了姐弟俩、母亲子女重逢的缘...&lt;/p&gt;
&lt;p&gt;&lt;em&gt;——“妈，方达都吃了，我也要吃。”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;——“没了，妈明儿给你买去。”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;——“骗人！”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;——“没骗你，妈说话算话，好吧？”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;谁会知道，为了一句简单的诺言，母亲苦苦守了32年。“妈没骗你。”当这句话最后从母亲嘴里说出时，是释怀，还是愧疚？母亲没有骗人，漫漫32年，好长的一个黑夜，但母亲不后悔，黑夜终于过去了，“明儿”，方登拿到的西红柿，其实是母亲的心！&lt;/p&gt;
&lt;p&gt;地震改变了母亲的一生。“没了，才知道什么叫没了”。面对艰难的抉择，谁能体会那揪心的痛？汶川地震中，方登看到了她的真实写照，从那位伟大母亲的抉择中，她看到了什么叫无私的爱：“孩子长大了恨我，让她恨吧...”方登你知道吗，1976年的元妮，一个未经世事的少女，在她抉择的那一刻，她是一个真正的伟大的母亲，她承担了全世界！32年光阴不算什么，但心中对自己的恨，谁能体会？母亲知道，自己的过错用什么也补偿不尽，即使是青春，即使是一生！&lt;/p&gt;
&lt;p&gt;她一生未再嫁，只为对得起心：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;——“为你爸，他拿命换的我，要不是他拽我一下我就进去了。哪个男的能用命对我好啊？我这辈子就给他当媳妇，我一点都不亏！”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;母亲一个人承受了太多，小方登在石板下留下的一滴恨的泪水，注定要换回重逢时的泪流满面，是感动的泪，后悔的泪。恩也好，怨也好，在母亲下跪的那一刻，剩下的，唯有亲情。可母亲永远无法原谅自己，永远无法...母亲一生不容易，带着一只胳膊的方达，守着废墟，一点一点地重新开始生活，我敢想象，如果没有方达，如果当年婆婆带着方达离开的车没有停下来，母亲怎么可能从废墟中站起来？&lt;/p&gt;
&lt;p&gt;方登，就这样，你度过了32年普通、平凡的生活，你爱你的养父养母，但你又是那么固执，带着孩子一出走就是好几年。因为怀孕，你辍学，因为怀孕，你没有了前程，因为怀孕，你让失去妻子的养父再次失去你，失去那几载年夜饭的融融…方登放弃学业，放弃青春，只为孩子：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;——“杨志，我跟你说过，我是唐山人，我是在拉尸体的车上醒过来的，我爸就躺在我旁边。你根本就不懂，你根本就不了解我。”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;——“可你不能太冲动了，我知道你爱我，我也爱你，我珍惜你，你才21岁，女人一生孩子，青春就结束了，我不想让你做那么大的牺牲。”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;——“你哪知道什么叫牺牲啊…”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;方登就是她的亲生母亲的写照，为了儿女，莫大的牺牲都要承受。是啊，她要留恋什么，留恋那虚幻的爱情？留恋那巴掌也打不醒的杨志？不，没有什么值得她留恋，当元妮在废墟上做出抉择的时候，方登的答案也早已有了。元妮付出了女人的一生，方登，付出了女人的整个青春。&lt;/p&gt;
&lt;p&gt;方登醒悟了，醒悟在她看到弟弟的那一刻，醒悟在她重新拿起“天安门”书包的那一刻，醒悟在看到为“已去”的她准备的课本的那一刻，醒悟在元妮下跪的那一刻，醒悟在母女相拥而泣的那一刻…一句句的“对不起”，化解了心中曾经无法化解的仇恨。&lt;/p&gt;
&lt;p&gt;亲情没有真假，唯有血浓于水。孤独地盼回了方登，养父和元妮带着怨气，但又带着那化不开的情：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;——“不想让我担心？我天天担心！你上哪儿了？（养父）”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;——“你到底是上哪儿去了，你怎么才回来呢？登啊…（元妮）”。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;曾经以为会恨自己的母亲一辈子，但汶川地震的出现，让方登毅然选择回到废墟帮助同胞。也许她的目的并不是寻找亲人，也许她早已坚定地认为自己与父母已再无缘分，但方登是善良的，老天是善良的，造化弄人，曾经在废墟中别离，32年后，依旧在废墟中重逢！&lt;/p&gt;
&lt;p&gt;因为亲情，永不褪色！&lt;/p&gt;</summary><category term="电影"></category><category term="观后感"></category></entry><entry><title>驻足在马路边的秋殇</title><link href="http://hackecho.com/2009/11/stay-in-my-mind/" rel="alternate"></link><updated>2009-11-01T16:01:47-06:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2009-11-01:2009/11/stay-in-my-mind/</id><summary type="html">&lt;p&gt;&lt;strong&gt;又是落叶纷飞的季节。我抬起头，让风中落叶夹杂的沧桑流过脸颊，听瑟瑟中睫毛舞动的轻扬，耳发飘浮的潇洒。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;来北京整整两个月了。&lt;/p&gt;
&lt;p&gt;校园里还是那种特有的宁静，但清爽了很多，也沉郁了很多。彳亍在湖边，感受夜的侵袭，虽然少了点雨，少了把油纸伞，但垂柳依旧撩动人儿的记忆，撩动那丁香一样的惆怅。&lt;/p&gt;
&lt;p&gt;逐渐习惯了在外的生活，习惯了这座大城市，习惯了每天忙忙碌碌。朋友形容我“日理万机”，我笑一笑，我很忙，但我也会偶尔在自行车上骤然停下，看着校园里为数已不多的红果树，怀念起儿时爬过的老黄铜，亲手种过的小葫芦！如今，黄叶飘飞，风过，叶子们抓住空气，扯住地面，拖住灰尘，最终却还是会远离，与地面摩擦唱着自豪的歌。&lt;/p&gt;
&lt;p&gt;月是故乡明。十五的月亮，被我在天安门前看得清清楚楚。故乡的歌是一枝清远的笛，总在有月亮的晚上响起。不管是余光中还是席慕容都曾醉倒、梦倒在这轮光影之中。虽然未有“近乡情更怯,不敢问来人”的恐慌，却有“身在异乡为异客，每逢佳节倍思亲”的寂寞。天安门外光影浮动，“鸟蛋”的五彩早已染了半边天，众多的行人的面容也早已淹没在闪光灯之中。那“霜”呢？那让太白彻夜难眠，魂不守舍的“霜”呢？这时应该撒在了故乡门前的树梢，撒在了房顶斑驳的瓦砾之中，撒在了街头亲人望月的面容之上了吧。&lt;/p&gt;
&lt;p&gt;记得国庆时期的北京是热闹的，校园是寂静的。看着空无一人的自习室，听着寂寞在唱歌，轻轻地，狠狠地。这是怎样的一种孤独呢？最牵挂的人都在远方，远方的人都在牵挂！每天都穿梭在北京城中，感受它的华贵，品读它的风骚。第一次用手触摸了长城的古石砖，触摸了王座玉石的冰冷，触摸了几百年前的怒吼与哀怨……&lt;/p&gt;
&lt;p&gt;校园里的路氤氲着秋天的气息，驻足在路边，银杏叶满载沧桑，却轻扬、潇洒。因为这条路上还将会有冬、春、夏……&lt;/p&gt;</summary><category term="思考"></category></entry><entry><title>春风化雨——初涉网站建设领域</title><link href="http://hackecho.com/2009/07/start-of-web-dev/" rel="alternate"></link><updated>2009-07-22T22:11:00-05:00</updated><author><name>Zhaoyu Li</name></author><id>tag:hackecho.com,2009-07-22:2009/07/start-of-web-dev/</id><summary type="html">&lt;p&gt;近来没有写过日志，主要是因为忙于自己的网站。今天完成了当天的任务，便写一些近来做网站的一些感受吧！­&lt;/p&gt;
&lt;p&gt;个人站长很少有独立开发整站程序的人，我也算是一个，一方面没有相关的技术，二来没有时间和精力来学习、编写和调试。所以我便很佩服DEDECMS的开发者柏拉图，因为著名的DEDECMS起初便是由他一人独立开发的。网上流行的CMS很多，但运行于PHP环境的就屈指可数了，因为我的空间是UNIX型，只能使用基于PHP的CMS。下面说一下我认识CMS的过程吧。­&lt;/p&gt;
&lt;p&gt;我接触的第一款CMS是DEDECMS，但那还是一年前，出于好奇，也并没有想去建一个自己的网站，即使想，那时也没有时间。当初没有怎么深入研究，只迷迷糊糊知道CMS可以进行网站内容管理。现在，高考结束，在北交大的录取通知书马上就要到来的情况下，我便购置了空间和域名，将身心全部投入到我的爱好中来。­&lt;/p&gt;
&lt;p&gt;大约是6月二十几号，我开始挑选自己的CMS，遍历了国内几家知名企业产品。一开始的时候，我主要注重的是模版的易用和制作难易，但“游来游去”，发现对我来说每个都是那么的难。我还以为CMS就和现在网上流行的Blog换模板一样简单。后来事实证明，情况并非如此，否则网络上的相同的网站就应该有无数个了！渐渐的，我了解到现在流行的一种网页设计方法——CSS，即层叠样式表。出于需要，只好自己买书，下载教程，争取自学成才！学习的过程中，不得已又学习了HTML语言，了解了Javescript、Ajax、XML等等，就像那句话所说：“人的知识好比一个圆，圆内是已知的知识，圆外则是未知世界。人的知识圆越大，面对的未知数越多”。这段时间，每天都埋首代码的海洋，但随着学习的深入，竟然发现，原来这些曾经那么吓人的程序设计，也是这样的有趣和精妙！现在我已经着手自己设计网站的模板了，至于为什么要自己设计，后面我在说。­&lt;/p&gt;
&lt;p&gt;经过漫长的苦苦寻求，最终我选择了DEDECMS，因为用它很上手，而且模板制作采用div+css加dede标签就可以完成。这里我对用过的几款CMS简单做一下评价，仅代表我自己的观点，因为萝卜白菜，各有所爱嘛。­&lt;/p&gt;
&lt;p&gt;1.PHPCMS：听说phpcms被ku6收购，而且前不久它的开发者辞职的消息后，不免对PHPCMS的未来产生了几许担忧。也许我的担忧是多余的，因为ku6也有很优秀的开发团队。phpcms留给我最大的印象就是数据承载能力很强，但个人站长一般不会达到巨大的数据量。另外，它的响应速度也是一流的，这一点值得推荐。­&lt;/p&gt;
&lt;p&gt;2.php168：看到php168的后台，我的第一感觉便是“好强大”，后台编排密度很高，功能也很齐全。虽然有模板可视化编辑，但个人认为还需较大改进。­&lt;/p&gt;
&lt;p&gt;3.帝国CMS（ECMS）：这是最强大的一款CMS，但不适合新手使用，模板标签比较麻烦。前不久，帝国实现了全面开源，竞争力大大加强，扩展性和模型的开发都是非常的方便。建议熟悉PHP编程的人使用。­&lt;/p&gt;
&lt;p&gt;4.DEDECMS：我自己现在在用，不再过多点评。另外，他是目前中国站长们最常用的cms。­&lt;/p&gt;
&lt;p&gt;其他的基于php的cms不再点评，而像动易、新云、风讯等asp类程序我没有用过，不做点评。­&lt;/p&gt;
&lt;p&gt;今天一整天都在设计模板，用photoshop合成了网页背景和导航栏背景，完善了代码，一个字：累。其实这里有我悟出的一条真理：虽然在网上的cms模板满天飞，但真正适合你自己的，没有！每个人的口味都不同，而且免费的模板有时还会有病毒或恶意代码。要想的得到好的模板只有两个途径：一是掏钱请人订做，二便是自己做了！永远不要迷恋于“免费”，天下没有免费的午餐！­&lt;/p&gt;
&lt;p&gt;我的网站域名暂且不透露，再有几天等制作完成再告诉大家。­&lt;/p&gt;
&lt;p&gt;我被录取的专业是软件工程，现在还没有开学。北交大的软件学院也属于教育部国家示范性软件学院，实力应该不错。据说现在阻碍中国国内软件业发展的一大因素就是软件工程类的综合性人才太少，印度软件业的飞速发展和美国已有的软件实力都给我们国家软件产业的发展带来空前压力。我更希望的是这种压力能够变成一种动力，使中国软件产业尽快进入快车道，尽快造福于国家，造福于人类！­&lt;/p&gt;</summary><category term="CMS"></category><category term="PHP"></category></entry></feed>